
/home/james/Documents/dRehmFlight/Versions/dRehmFlight_rip/build/dRehmFlight_rip.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001fb4 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00015920 l    d  .fini	00000000 .fini
00015924 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200042c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001bd9c l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001860 l     F .text.code	0000002c flexspi2_command
6000188c l     F .text.code	00000034 flexspi2_psram_id
60001400 l     F .text.code	00000254 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00004cfc l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 analog.c
20005839 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20005658 l     O .bss	00000004 s_hotCount
2000565c l     O .bss	00000004 s_hotTemp
20005660 l     O .bss	00000004 s_hot_ROOM
20005664 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000e400 l     F .text.itcm	000000a8 endpoint0_transmit
0000e4a8 l     F .text.itcm	000000ac endpoint0_receive
0000e554 l     F .text.itcm	00000088 schedule_transfer
0000e5dc l     F .text.itcm	00000036 run_callbacks
0000e612 l     F .text.itcm	0000001c usb_endpoint_config
20005520 l     O .bss	00000008 endpoint0_buffer
20005528 l     O .bss	00000004 endpoint0_notify_mask
200044e0 l     O .bss	00000008 endpoint0_setupdata
2000552c l     O .bss	00000004 endpointN_notify_mask
200055d8 l     O .bss	00000008 reply_buffer
20005843 l     O .bss	00000001 sof_usage
2000584a l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20005588 l     O .bss	00000000 object.0
60001f90 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 GlobalVariables.cpp
0000016c l     F .text.itcm	00000074 _GLOBAL__sub_I_dt
00000000 l    df *ABS*	00000000 UserVariables.cpp
00000308 l     F .text.itcm	00000368 __static_initialization_and_destruction_0(int, int)
00000670 l     F .text.itcm	0000000e _GLOBAL__sub_I_channel_1_fs
00000000 l    df *ABS*	00000000 dRehmFlight_rip.ino.cpp
00003aac l     F .text.itcm	00000084 _GLOBAL__sub_I_mpu6050
00000000 l    df *ABS*	00000000 pidController.cpp
00003fa8 l     F .text.itcm	00000048 _GLOBAL__sub_I_desState
20005010 l     O .bss	00000004 guard variable for pidOutput_rip(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, bool)::integralOld
20005014 l     O .bss	00000004 guard variable for pidOutput_rip(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, bool)::errorOld
20005018 l     O .bss	00000004 guard variable for pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, bool)::integralOld
2000501c l     O .bss	00000004 guard variable for pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, bool)::errorOld
20005110 l     O .bss	00000008 pidOutput_rip(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, bool)::integralOld
20005118 l     O .bss	00000008 pidOutput_rip(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, bool)::errorOld
20005120 l     O .bss	0000000c pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, bool)::integralOld
2000512c l     O .bss	0000000c pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, bool)::errorOld
00000000 l    df *ABS*	00000000 SPI.cpp
00005240 l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 SD.cpp
00005a50 l     F .text.itcm	0000007c _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
0000ca90 l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial5
20005028 l     O .bss	00000040 rx_buffer5
20005068 l     O .bss	00000028 tx_buffer5
20003644 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
20003cb0 l     O .data	00000012 device_descriptor
20003ce0 l     O .data	00000028 microsoft_os_compatible_id_desc
20003d08 l     O .data	00000012 microsoft_os_string_desc
600021a4 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 I2Cdev.cpp
00000000 l    df *ABS*	00000000 MPU6050.cpp
00000000 l    df *ABS*	00000000 SBUS.cpp
20005020 l     O .bss	00000004 guard variable for SBUS::parse()::_sbusTime
20005138 l     O .bss	00000004 SBUS::parse()::_sbusTime
00000000 l    df *ABS*	00000000 PWMServo.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
000063d8 l     F .text.itcm	0000003c exFatDirChecksum(unsigned char const*, unsigned short)
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00009404 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000acc8 l     F .text.itcm	0000002c sdIrs()
0000acf4 l     F .text.itcm	00000020 gpioMux(unsigned char)
0000ad14 l     F .text.itcm	00000018 isBusyCommandComplete()
0000ad2c l     F .text.itcm	00000010 isBusyCommandInhibit()
0000ad3c l     F .text.itcm	00000014 isBusyDat()
0000ad50 l     F .text.itcm	0000000c isBusyDMA()
0000ad5c l     F .text.itcm	00000014 isBusyFifoRead()
0000ad70 l     F .text.itcm	00000014 isBusyFifoWrite()
0000ad84 l     F .text.itcm	00000018 isBusyTransferComplete()
0000ad9c l     F .text.itcm	000000d0 setSdclk(unsigned long)
0000af60 l     F .text.itcm	00000024 waitTimeout(bool (*)())
0000af84 l     F .text.itcm	0000007c cardCommand(unsigned long, unsigned long)
0000b000 l     F .text.itcm	00000074 readReg16(unsigned long, void*)
0000b074 l     F .text.itcm	00000024 statusCMD13()
0000b098 l     F .text.itcm	00000010 isBusyCMD13()
0000b1cc l     F .text.itcm	00000060 waitTransferComplete()
0000b2c0 l     F .text.itcm	00000038 yieldTimeout(bool (*)())
0000b2f8 l     F .text.itcm	00000034 waitDmaStatus()
0000b32c l     F .text.itcm	00000090 cardCMD6(unsigned long, unsigned char*)
0000b3bc l     F .text.itcm	0000007c transferStop()
0000b4bc l     F .text.itcm	000000b0 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2000582f l     O .bss	00000001 m_initDone
20005024 l     O .bss	00000004 m_sdClkKhz
20005830 l     O .bss	00000001 m_version2
20005090 l     O .bss	00000004 m_errorLine
20005831 l     O .bss	00000001 m_highCapacity
20005832 l     O .bss	00000001 m_transferActive
20005094 l     O .bss	00000010 m_cid
200050a4 l     O .bss	00000010 m_csd
200050b4 l     O .bss	00000004 m_ocr
200050b8 l     O .bss	00000004 m_rca
200050bc l     O .bss	00000004 m_busyFcn
20005833 l     O .bss	00000001 m_dmaBusy
200050c0 l     O .bss	00000004 m_irqstat
20003d44 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0000c050 l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001d78 l     O .data	0000012c lookupTable
20001ea4 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20001f78 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000ecf0 l     F .text.itcm	0000009c usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000ed8c l     F .text.itcm	0000006c rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000edf8 l     F .text.itcm	000000b4 rx_event
200055f0 l     O .bss	00000004 rx_available
200055f4 l     O .bss	00000010 rx_count
2000583f l     O .bss	00000001 rx_head
20005604 l     O .bss	00000010 rx_index
20005614 l     O .bss	00000009 rx_list
20005828 l     O .bss	00000002 rx_packet_size
20005840 l     O .bss	00000001 rx_tail
20004300 l     O .bss	00000100 rx_transfer
20005844 l     O .bss	00000001 transmit_previous_timeout
2000582a l     O .bss	00000002 tx_available
20005845 l     O .bss	00000001 tx_head
20005846 l     O .bss	00000001 tx_noautoflush
2000582c l     O .bss	00000002 tx_packet_size
20004400 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
20005836 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-wf_asin.o
00000000 l    df *ABS*	00000000 libm_a-wf_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_fabs.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
0000fcc0 l     F .text.itcm	00000018 with_errno
0000fcd8 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-ef_asin.o
00000000 l    df *ABS*	00000000 libm_a-ef_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_atan.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
000122e8 l     F .text.itcm	00000018 stdio_exit_handler
00012300 l     F .text.itcm	00000040 cleanup_stdio
00012340 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00012e08 l     F .text.itcm	00000076 __sprint_r.part.0
00013e0c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
000142bc l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 MPU9250.cpp
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00015908 l     F .text.itcm	00000008 ___init_veneer
00015910 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00015918 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
60001f48 l     F .text.code	00000008 __pwm_init_veneer
60001f50 l     F .text.code	00000008 __memset_veneer
60001f58 l     F .text.code	00000008 __sm_set_pool_veneer
60001f60 l     F .text.code	00000008 __set_arm_clock_veneer
60001f68 l     F .text.code	00000008 __main_veneer
60001f70 l     F .text.code	00000008 ____libc_init_array_veneer
60001f78 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001f80 l     F .text.code	00000008 __delay_veneer
60001f88 l     F .text.code	00000008 ___ZN7TwoWire8setClockEm_veneer
00002d4c g     F .text.itcm	00000010 radioSetup()
00000788  w    F .text.itcm	0000006a SDFile::getModifyTime(DateTimeFields&)
0000c2b8 g     F .text.itcm	000000cc toUpcase(unsigned short)
0000f0c0 g     F .text.itcm	00000018 usb_serial_available
0000d1ac g     F .text.itcm	00000026 String::String(float, unsigned char)
20003d1c g     O .data	00000004 minFreq
00001e54 g     F .text.itcm	00000060 loopBlink()
000152a8 g     F .text.itcm	00000024 _isatty_r
0000532c g     F .text.itcm	00000056 PWMServo::write(int)
200054ec g     O .bss	00000008 currState_rip
00011a0c g     F .text.itcm	000000ba strcpy
0000d186 g     F .text.itcm	00000026 String::String(int, unsigned char)
000043a8 g     F .text.itcm	00000058 SBUS::~SBUS()
00009b44 g     F .text.itcm	00000038 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
20005544 g     O .bss	00000010 fileExtension
600018c4 g     F .text.code	00000002 startup_default_late_hook
00010dd0 g     F .text.itcm	00000012 fabs
000152cc g     F .text.itcm	0000002c _lseek_r
0000b56c g     F .text.itcm	0000008c SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000f418  w    F .text.itcm	00000108 yield
0000a514  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
00001268 g     F .text.itcm	000000e0 performSineSweep(int)
20003cdc g     O .data	00000004 maxYaw
200045d0 g     O .bss	00000004 MagX_prev
000016c0 g     F .text.itcm	00000128 scaleCommands()
20003c7c g     O .data	00000004 channel_3_fs
20003cc8 g     O .data	00000004 maxBetaPitch
20005814 g     O .bss	00000004 usb_timer1_callback
200054a8 g     O .bss	00000004 channel_2_pwm
00008910 g     F .text.itcm	000001b0 FatFile::write(void const*, unsigned int)
2000549c g     O .bss	00000004 channel_1_pwm
600020c0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
600019bc g     F .text.code	00000294 configure_external_ram
0000a39a  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
0000889c g     F .text.itcm	00000074 FatFile::truncate()
200054fc g     O .bss	00000004 d_ch2
20004d90 g     O .bss	00000140 Wire1
0000ac80  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00008ca8 g     F .text.itcm	00000178 FatFile::makeSFN(FatLfn_t*)
200044b0 g     O .bss	00000010 I_gains_rip
00009fac g     F .text.itcm	00000142 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
600020a4  w    O .text.progmem	00000001 _serialEventUSB2_default
200050c4 g     O .bss	00000004 FsDateTime::callback
200052d0 g     O .bss	00000001 __lock___atexit_recursive_mutex
00013fe4 g     F .text.itcm	0000004c _wcrtomb_r
60001684 g     F .text.code	00000048 TwoWire::configSDApin(unsigned char)
00008e20 g     F .text.itcm	000000ac FatFile::makeUniqueSfn(FatLfn_t*)
0000aa40 g     F .text.itcm	00000034 SharedSpiCard::writeStart(unsigned long)
000094e4 g     F .text.itcm	0000005a FatFormatter::initPbs()
0000cb7a g     F .text.itcm	0000001c Print::println()
0000ac18 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
00004b78 g     F .text.itcm	000000b4 TwoWire::isr()
200026c0 g     O .data	00000070 vtable for DedicatedSpiCard
00012d2c g     F .text.itcm	00000020 __sseek
00012414 g     F .text.itcm	0000003c __sinit
000041a8 g     F .text.itcm	00000044 I2Cdev::writeBit(unsigned char, unsigned char, unsigned char, unsigned char)
00005df2 g     F .text.itcm	000000e4 ExFatFile::seekSet(unsigned long long)
00013f40 g     F .text.itcm	000000a4 fcvtbuf
0000e1b0  w    F .text.itcm	00000002 serialEvent5()
20004490 g     O .bss	00000010 D_gains_rip
20003628 g     O .data	00000004 MagScaleX
0001572c g     F .text.itcm	000000b0 __swbuf_r
000000a4  w    F .text.itcm	00000010 File::flush()
200045d4 g     O .bss	00000004 MagY
000007f2  w    F .text.itcm	0000006a SDFile::getCreateTime(DateTimeFields&)
00011ad4 g     F .text.itcm	0000000c __malloc_unlock
20004bf0 g     O .bss	00000060 Serial5
20005630 g     O .bss	00000004 s3_command_PWM
000009f4  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
20005100 g     O .bss	00000004 FsVolume::m_cwv
00008214 g     F .text.itcm	000000ca FatFile::open(FatFile*, char const*, int)
0000a38e  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
20003d46 g     O .data	00000001 useSineWave
6000180c g     F .text.code	00000054 analog_init
00004304 g     F .text.itcm	00000024 MPU6050::initialize()
00004190 g     F .text.itcm	00000018 I2Cdev::writeByte(unsigned char, unsigned char, unsigned char)
00008334 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
200002c0 g     O .data	00000870 .hidden __exp_data
0000a880 g     F .text.itcm	0000003a SharedSpiCard::readOCR(unsigned long*)
0000cebc g     F .text.itcm	0000000a Stream::parseFloat()
200054cc g     O .bss	00000004 channel_5_pwm
000041ec g     F .text.itcm	00000050 I2Cdev::writeBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
200044fc g     O .bss	00000004 AccZ_prev
0000fd20 g     F .text.itcm	00000030 .hidden __math_divzero
20003600 g     O .data	00000004 F_CPU_ACTUAL
200027a8  w    O .data	0000005c vtable for SDFile
20003c50 g     O .data	00000004 axisToRotate
000117b4 g     F .text.itcm	000000f8 memmove
0000c446 g     F .text.itcm	00000070 HardwareSerial::peek()
200055e4 g     O .bss	00000004 roll_PID
0000bcd0 g     F .text.itcm	00000060 SdioCard::stopTransmission(bool)
00011ae0 g     F .text.itcm	0000004c _Balloc
200045ac g     O .bss	00000004 Kd_roll_angle
0001592c g       .ARM.exidx	00000000 __exidx_end
20005478 g     O .bss	00000004 blink_delay
00009e84 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
20005834 g     O .bss	00000001 EventResponder::runningFromYield
0000bf16 g     F .text.itcm	00000018 SdSpiArduinoDriver::receive()
20005838 g     O .bss	00000001 blinkAlternate
0000a270 g     F .text.itcm	000000ec FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
20003000 g     O .data	000000dc pwm_pin_info
0000e39c g     F .text.itcm	00000064 tempmonGetTemp
20005800 g     O .bss	00000004 thro_des
200057dc g     O .bss	00000004 servo5
0000f524 g     F .text.itcm	0000002c smalloc_verify_pool
0000cb04 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
200036a8 g     O .data	00000004 __atexit_recursive_mutex
200045c4 g     O .bss	00000004 MagErrorY
000111c8 g     F .text.itcm	0000000c __errno
00000abe  w    F .text.itcm	0000002a SDFile::isDirectory()
000069ea g     F .text.itcm	00000174 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
2000583a g     O .bss	00000001 conductSineSweep
200044f0 g     O .bss	00000004 AccY
0000006c  w    F .text.itcm	00000012 File::write(unsigned char const*, unsigned int)
60001000 g     O .text.headers	00000020 ImageVectorTable
0000d1ac g     F .text.itcm	00000026 String::String(float, unsigned char)
00004ed0  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
0000013c  w    F .text.itcm	00000030 File::~File()
200050d8 g     O .bss	00000004 EventResponder::firstInterrupt
0000ec50 g     F .text.itcm	00000004 usb_transfer_status
0000f594 g     F .text.itcm	00000074 sm_set_pool
200054c0 g     O .bss	00000004 channel_4_pwm
00006f0a g     F .text.itcm	0000001a ExFatFormatter::writeUpcaseUnicode(unsigned short)
20005448 g     O .bss	00000004 __stdio_exit_handler
0000a0ee g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
20003d45 g     O .data	00000001 analog_write_res
00007b4c g     F .text.itcm	00000018 ExFatPartition::rootLength()
0000d13e g     F .text.itcm	00000016 String::String(String const&)
00000732  w    F .text.itcm	00000056 SDFile::setCreateTime(DateTimeFields const&)
0000ecd8  w    F .text.itcm	0000000c usb_serial_class::write(unsigned char const*, unsigned int)
0001527c g     F .text.itcm	0000002c _fstat_r
20002ba4 g     O .data	00000370 digital_pin_to_info_PGM
2000546c g     O .bss	00000004 betaPitch
20003c5c g     O .data	00000004 beta_max
20005530 g     O .bss	00000004 errno
200055e0 g     O .bss	00000004 roll_IMU
0000bf2e g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00010de8 g     F .text.itcm	00000110 floor
00007868 g     F .text.itcm	00000048 ExFatPartition::fatGet(unsigned long, unsigned long*)
60002004 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00015928 g       .text.itcm	00000000 _etext
00004d40 g     F .text.itcm	000000c8 _spi_dma_rxISR0()
2000563c g     O .bss	00000004 s4_command_scaled
20005654 g     O .bss	00000004 s7_command_scaled
000091cc g     F .text.itcm	000000dc FatFile::parsePathName(char const*, FatLfn_t*, char const**)
200042c0 g       .bss	00000000 _sbss
0000953e g     F .text.itcm	0000005a FatFormatter::writeMbr()
0000bd4a g     F .text.itcm	0000000a sdCsInit(unsigned char)
000059ac g     F .text.itcm	000000a4 SDClass::mediaPresent()
0000ae78 g     F .text.itcm	0000000c SdioCard::errorData() const
000011a8 g     F .text.itcm	000000c0 setDesStateSerial(int)
0000b5f8 g     F .text.itcm	000000b0 SdioCard::writeSector(unsigned long, unsigned char const*)
0000c420 g     F .text.itcm	00000026 HardwareSerial::available()
00007a48 g     F .text.itcm	00000104 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00006fbc g     F .text.itcm	0000057c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
000029b4 g     F .text.itcm	0000002c invSqrt(float)
0000d6a8 g     F .text.itcm	00000024 digitalRead
600021b0 g       *ABS*	00000000 _stextload
00003510 g     F .text.itcm	0000059c loop
0000e058 g     F .text.itcm	00000078 flexpwm_init
0000dc88 g     F .text.itcm	000000c4 flexpwmWrite
20005578 g     O .bss	0000000f mpu6050
600018c6 g     F .text.code	00000004 startup_debug_reset
0000eb4c g     F .text.itcm	00000044 usb_config_rx
0000f608 g     F .text.itcm	00000044 sqrtf
00005b88 g     F .text.itcm	000000a8 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
000043a8 g     F .text.itcm	00000058 SBUS::~SBUS()
0000bae4 g     F .text.itcm	000000d0 SdioCard::readData(unsigned char*)
00001380 g     F .text.itcm	00000038 pitchStep()
0000cde4 g     F .text.itcm	00000026 Stream::peekNextDigit()
20004548 g     O .bss	00000004 GyroX
00001eb4 g     F .text.itcm	0000003c setupBlink(int, int, int)
00004258 g     F .text.itcm	00000018 MPU6050::setFullScaleAccelRange(unsigned char)
0000c65a g     F .text.itcm	00000008 HardwareSerial::write(unsigned char)
00004940 g     F .text.itcm	000000f8 TwoWire::endTransmission(unsigned char)
000104a8 g     F .text.itcm	00000294 __ieee754_rem_pio2
200054f4 g     O .bss	00000004 current_time
200050d4 g     O .bss	00000004 EventResponder::lastInterrupt
20003ccc g     O .data	00000004 maxCutCounter
0000a170 g     F .text.itcm	00000028 FsBaseFile::close()
000051f6 g     F .text.itcm	00000048 SPIClass::end()
0000d758 g     F .text.itcm	00000134 memcpy
200054e0 g     O .bss	0000000c currState
0000007e  w    F .text.itcm	00000012 File::available()
0000ab0e g     F .text.itcm	00000032 SharedSpiCard::writeStop()
0000c172 g     F .text.itcm	0000009e FsUtf::cpToMb(unsigned long, char*, char*)
200042c0 g     O .data	00000000 .hidden __TMC_END__
20005554 g     O .bss	00000010 fileName
0000fd50 g     F .text.itcm	0000001e .hidden __math_invalid
00007966 g     F .text.itcm	00000078 ExFatPartition::freeChain(unsigned long)
00007e58 g     F .text.itcm	00000028 FatFile::peek()
20005837  w    O .bss	00000001 SDFile::name()::zeroterm
200057f8 g     O .bss	00000004 systick_millis_count
0000692e g     F .text.itcm	000000bc ExFatFile::rename(ExFatFile*, char const*)
000009ae  w    F .text.itcm	00000046 SDFile::truncate(unsigned long long)
00004904 g     F .text.itcm	0000003c TwoWire::wait_idle()
00004360 g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
20005848 g     O .bss	00000001 usb_configuration
0000a384  w    F .text.itcm	00000006 SdCardInterface::status()
0000f550 g     F .text.itcm	00000044 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000bd30 g     F .text.itcm	0000001a SdioCard::syncDevice()
0000b22c g     F .text.itcm	00000094 SdioCard::writeData(unsigned char const*)
00003d00  w    F .text.itcm	0000009a Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::product_evaluator(Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0> const&)
20003624 g     O .data	00000004 Kp_yaw
2000547c g     O .bss	00000004 ch1_CutCounter
000006c6  w    F .text.itcm	0000006c StreamFile<FsBaseFile, unsigned long long>::available()
200055d0 g     O .bss	00000004 q2
00007e80 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
0000423c g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
0000df10 g     F .text.itcm	000000b0 analogWrite
0000a39e g     F .text.itcm	00000084 SharedSpiCard::sectorCount()
600020c0  w    O .text.progmem	00000018 usb_string_manufacturer_name
000111d4 g     F .text.itcm	00000010 malloc
60001fb4 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
0000592e g     F .text.itcm	0000007c SDClass::format(int, char, Print&)
20002784  w    O .data	00000024 vtable for FsFile
0000e376  w    F .text.itcm	0000000a _fstat
000046ae  w    F .text.itcm	0000001e TwoWire::read()
000118ac g     F .text.itcm	00000040 __assert_func
20000b58 g     O .data	000000c8 __mprec_tens
60001df8 g     F .text.code	000000ec usb_init
20005648 g     O .bss	00000004 s6_command_PWM
0000d186 g     F .text.itcm	00000026 String::String(int, unsigned char)
20005514 g     O .bss	00000008 desState_rip
0000fdc0 g     F .text.itcm	00000130 __kernel_cos
20003c98 g     O .data	00000004 cutoff_val
200055b4 g     O .bss	00000004 pitch_IMU
00003358  w    F .text.itcm	000001b6 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 0> > const&)
0000a38a  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00000ca2  w    F .text.itcm	000000be SDFile::seek(unsigned long long, int)
2000530c g     O .bss	00000004 __malloc_top_pad
20004b50 g     O .bss	00000050 SPI1
0000291c g     F .text.itcm	0000004c getDScale()
200057fc g     O .bss	00000004 systick_safe_read
0000d100 g     F .text.itcm	0000002a String::move(String&)
200044f4 g     O .bss	00000004 AccY_prev
000047b8 g     F .text.itcm	0000014c TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
00006b5e g     F .text.itcm	000000e4 ExFatFile::truncate()
200036b0 g     O .data	00000000 .hidden __dso_handle
0001119c g     F .text.itcm	0000002c itoa
0000d056 g     F .text.itcm	0000001c String::changeBuffer(unsigned int)
00014030 g     F .text.itcm	00000008 _localeconv_r
20003c58 g     O .data	00000004 betaCounts_min
00004360 g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
0000beac g     F .text.itcm	00000060 SdSpiArduinoDriver::deactivate()
00015438 g     F .text.itcm	000002f4 __sfvwrite_r
00011c84 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
000096b4 g     F .text.itcm	000001e8 FatFormatter::makeFat32()
60002140 g     O .text.progmem	00000062 usb_config_descriptor_480
20005842 g     O .bss	00000001 sbusLostFrame
0000d072 g     F .text.itcm	00000028 String::reserve(unsigned int)
0000bf0c g     F .text.itcm	0000000a SdSpiArduinoDriver::end()
00007b64 g     F .text.itcm	0000003a FatFile::addCluster()
00012d70 g     F .text.itcm	00000024 _sbrk_r
0000af40 g     F .text.itcm	0000001c SdioCard::type() const
600018c0 g     F .text.code	00000002 startup_default_early_hook
60001654 g     F .text.code	00000030 ResetHandler
0000f13c g     F .text.itcm	00000020 usb_serial_getchar
20003d42 g     O .data	00000002 I2Cdev::readTimeout
00000940  w    F .text.itcm	00000048 SDFile::name()
20005804 g     O .bss	00000008 usb_cdc_line_coding
20003c48 g     O .data	00000004 alpha_max
0000d65c g     F .text.itcm	0000004c digitalWrite
0000fc28 g     F .text.itcm	0000000e fabsf
200050dc g     O .bss	00000004 EventResponder::lastYield
00005b60 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
000152f8 g     F .text.itcm	0000002c _read_r
00006e84  w    F .text.itcm	00000020 Print::write(char const*)
0000203c g     F .text.itcm	00000030 closeIris()
000008b6  w    F .text.itcm	0000003e StreamFile<FsBaseFile, unsigned long long>::read()
0000a508  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00006ea4 g     F .text.itcm	0000002c ExFatFormatter::syncUpcase()
00000be0  w    F .text.itcm	00000056 SDFile::setModifyTime(DateTimeFields const&)
00014038 g     F .text.itcm	000000c6 _fclose_r
20005534 g     O .bss	00000010 extmem_smalloc_pool
20005304 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a980 g     F .text.itcm	00000056 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
20003c80 g     O .data	00000004 channel_4_fs
00000680  w    F .text.itcm	0000001a SDFile::position()
0000d6cc g     F .text.itcm	0000007c pinMode
200054b8 g     O .bss	00000004 channel_3_pwm_pre
0000d270 g     F .text.itcm	00000032 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000017e8 g     F .text.itcm	000004dc getCommands()
0000cc40 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
0000fef0 g     F .text.itcm	000000b0 __kernel_sin
200054f8 g     O .bss	00000004 d_ch1
600020a5  w    O .text.progmem	00000001 _serialEventUSB1_default
200055c8 g     O .bss	00000004 print_counter
600016cc g     F .text.code	00000058 TwoWire::setSDA(unsigned char)
20004ed0 g     O .bss	00000140 Wire2
00000270  w    F .text.itcm	00000098 Eigen::PlainObjectBase<Eigen::Matrix<float, 2, 2, 0, 2, 2> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
6001c000 g     O .text.csf	00000c00 hab_csf
00000090  w    F .text.itcm	00000014 File::peek()
00009ed0 g     F .text.itcm	000000dc FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
00005610  w    F .text.itcm	000000ac SDClass::open(char const*, unsigned char)
00015924 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
0000e380  w    F .text.itcm	00000004 _isatty
200050d0 g     O .bss	00000004 EventResponder::firstYield
200054b0 g     O .bss	00000004 channel_2_pwm_prev
20005624 g     O .bss	00000004 s1_command_scaled
0000c210 g     F .text.itcm	000000a8 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00001348 g     F .text.itcm	00000038 rollStep()
0000090e  w    F .text.itcm	00000032 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0001261c g     F .text.itcm	000003d8 _realloc_r
00000ae8  w    F .text.itcm	0000001e SDFile::read(void*, unsigned int)
000119a8 g     F .text.itcm	00000048 __libc_init_array
0000d900 g     F .text.itcm	00000388 dtostrf
0000085c  w    F .text.itcm	0000003c SDFile::rewindDirectory()
000046a2  w    F .text.itcm	0000000c TwoWire::available()
00006396 g     F .text.itcm	00000012 ExFatFile::open(ExFatVolume*, char const*, int)
0000ae84 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
000053cc g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00006738 g     F .text.itcm	000000c0 ExFatFile::addDirCluster()
200054d8 g     O .bss	00000004 channel_8_pwm
00004110 g     F .text.itcm	00000034 I2Cdev::readBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
000153d0 g     F .text.itcm	00000066 _fputwc_r
00004ed0  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
20000b30 g     O .data	00000028 __mprec_bigtens
0000a8fc  w    F .text.itcm	0000000c SharedSpiCard::readCID(CID*)
0000e38e  w    F .text.itcm	00000004 abort
00004a38 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000eca8  w    F .text.itcm	00000008 usb_serial_class::clear()
0000e33c  w    F .text.itcm	00000030 _sbrk
60017adc g       *ABS*	00000000 _sdataload
00011fec g     F .text.itcm	00000042 __mcmp
20002828 g     O .data	00000030 vtable for SDClass
200036ac g     O .data	00000004 __brkval
20005847 g     O .bss	00000001 usb_cdc_line_rtsdtr
20003620 g     O .data	00000004 Kp_scale
60001f38 g     F .text.code	00000000 _init
0000eeac g     F .text.itcm	00000002 usb_serial_reset
00007c24 g     F .text.itcm	00000022 FatFile::cacheDirEntry(unsigned char)
20002528 g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
0000d048 g     F .text.itcm	0000000e String::~String()
000054f0  w    F .text.itcm	0000005e SDClass::remove(char const*)
00000988  w    F .text.itcm	00000026 SDFile::close()
0000d13e g     F .text.itcm	00000016 String::String(String const&)
00000b20  w    F .text.itcm	00000040 SDFile::~SDFile()
2000564c g     O .bss	00000004 s6_command_scaled
0000d244 g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
600020dc g     O .text.progmem	00000062 usb_config_descriptor_12
2000583e g     O .bss	00000001 irisFlag
00010740 g     F .text.itcm	00000690 __kernel_rem_pio2
20002858 g     O .data	00000024 vtable for TwoWire
20003614 g     O .data	00000004 Kd_yaw
0000dfc0 g     F .text.itcm	00000098 analogWriteFrequency
0000be84 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
20005880 g       .bss	00000000 _ebss
20005508 g     O .bss	0000000c desState
0000b6a8 g     F .text.itcm	0000008c SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
2000545c g     O .bss	00000004 alphaRoll_des
2000360c g     O .data	00000004 GyroErrorZ
200045bc g     O .bss	00000004 Kp_roll_angle
60001724 g     F .text.code	00000048 TwoWire::configSCLpin(unsigned char)
00000b06  w    F .text.itcm	0000001a StreamFile<FsBaseFile, unsigned long long>::flush()
0000c400 g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
0000d1d2 g     F .text.itcm	00000072 String::append(char const*, unsigned int)
00011be4 g     F .text.itcm	00000040 __hi0bits
00005acc g     F .text.itcm	00000038 ExFatFile::dirCache(unsigned char, unsigned char)
2000455c g     O .bss	00000004 GyroZ_prev
00004c3c g     F .text.itcm	00000010 lpi2c3_isr()
000057c4 g     F .text.itcm	000000dc SDClass::begin(unsigned char)
000067f8 g     F .text.itcm	0000004a ExFatFile::mkdir(ExFatFile*, ExName_t*)
20203080 g       .bss.dma	00000000 _heap_start
200034bc g     O .data	00000001 String::zerotermination
200052d4 g     O .bss	00000001 __lock___malloc_recursive_mutex
00004270 g     F .text.itcm	0000006c MPU6050::getMotion6(short*, short*, short*, short*, short*, short*)
20005638 g     O .bss	00000004 s4_command_PWM
000053c8  w    F .text.itcm	00000002 SDClass::~SDClass()
0000de7c g     F .text.itcm	00000094 quadtimerFrequency
60002054 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00004328 g     F .text.itcm	00000028 MPU6050::getDeviceID()
0000d09a g     F .text.itcm	00000040 String::copy(char const*, unsigned int)
20005310 g     O .bss	00000138 __sf
0000a658 g     F .text.itcm	00000096 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00002020 g     F .text.itcm	0000001c openIris()
0000013c  w    F .text.itcm	00000030 File::~File()
00004144 g     F .text.itcm	0000004c I2Cdev::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char*)
00000003 g       *ABS*	00000000 _itcm_block_count
0000c590 g     F .text.itcm	000000ca HardwareSerial::write9bit(unsigned long)
20003618 g     O .data	00000004 Ki_scale
200035e8 g     O .data	00000004 AccErrorZ
200042e0 g     O .bss	00000020 endpoint0_transfer_data
200055ec g     O .bss	00000004 roll_passthru
00009970 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000bffe g     F .text.itcm	00000050 FsCache::prepare(unsigned long, unsigned char)
0000d894 g     F .text.itcm	00000008 operator delete(void*, unsigned int)
0000e108 g     F .text.itcm	00000068 pwm_init
0000474c  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000c53a g     F .text.itcm	00000018 HardwareSerial::flush()
20005574 g     O .bss	00000004 iris
0000d048 g     F .text.itcm	0000000e String::~String()
6001cc00 g       .text.csf	00000000 __text_csf_end
0000fd10 g     F .text.itcm	00000010 .hidden __math_oflow
60001c50 g     F .text.code	00000060 usb_pll_start
2000548c g     O .bss	00000004 channel_10_pwm
00011e3c g     F .text.itcm	000000c0 __pow5mult
00007f68 g     F .text.itcm	0000005a FatFile::rmdir()
00004c4c g     F .text.itcm	00000010 lpi2c4_isr()
00009df6 g     F .text.itcm	0000008e FatPartition::allocateCluster(unsigned long, unsigned long*)
0000474c  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000ffa0 g     F .text.itcm	0000020c __ieee754_asinf
0000acc6  w    F .text.itcm	00000002 SdioCard::end()
200045cc g     O .bss	00000004 MagX
20003cc4 g     O .data	00000004 maxAlphaRoll
00005450  w    F .text.itcm	00000046 SDClass::exists(char const*)
200042c0 g     O .bss	00000020 endpoint0_transfer_ack
2000580c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000ec08 g     F .text.itcm	00000028 usb_transmit
0000c7bc g     F .text.itcm	00000048 HardwareSerial::addToSerialEventsList()
200057ec g     O .bss	00000004 sineFrequency
0000c3e0 g     F .text.itcm	00000020 systick_isr
200054c8 g     O .bss	00000004 channel_4_pwm_prev
200057d4 g     O .bss	00000004 servo3
200045b4 g     O .bss	00000004 Ki_roll_angle
000119fc g     F .text.itcm	00000002 __retarget_lock_release_recursive
20003634 g     O .data	00000010 Serial
200054a0 g     O .bss	00000004 channel_1_pwm_pre
0000d12a g     F .text.itcm	00000014 String::operator=(String const&)
000029e0 g     F .text.itcm	0000036c Madgwick6DOF(float, float, float, float, float, float, float)
20000c20 g     O .data	00001048 .hidden __pow_log_data
0000de34 g     F .text.itcm	00000048 quadtimerWrite
2000269c g     O .data	00000024 vtable for HardwareSerial
0000ece4  w    F .text.itcm	0000000a usb_serial_class::write(unsigned char)
0000a20c g     F .text.itcm	00000060 FsBaseFile::openNext(FsBaseFile*, int)
600018c0  w    F .text.code	00000002 startup_early_hook
0000fd88 g     F .text.itcm	00000028 .hidden __math_check_oflow
00006414 g     F .text.itcm	000000a0 ExFatFile::addCluster()
200050c8 g     O .bss	00000004 FsDateTime::callback2
20002758  w    O .data	0000002c vtable for File
0000a5b0 g     F .text.itcm	0000006c SharedSpiCard::readData(unsigned char*, unsigned int)
000056bc  w    F .text.itcm	00000108 SDClass::usedSize()
0000f078 g     F .text.itcm	00000048 usb_serial_peekchar
20003c90 g     O .data	00000004 channel_8_fs
20005644 g     O .bss	00000004 s5_command_scaled
20004584 g     O .bss	00000024 I_gains
00012450 g     F .text.itcm	0000000c __sfp_lock_acquire
00012470 g     F .text.itcm	00000000 memchr
00009cd0 g     F .text.itcm	00000126 FatPartition::fatPut(unsigned long, unsigned long)
0000d340 g     F .text.itcm	0000029c set_arm_clock
200057f4 g     O .bss	00000004 systick_cycle_count
20003d2c g     O .data	00000016 usb_string_serial_number_default
00012a94 g     F .text.itcm	0000020c _free_r
0000aa74 g     F .text.itcm	0000009a SharedSpiCard::erase(unsigned long, unsigned long)
0000ab40 g     F .text.itcm	0000004c SharedSpiCard::writeData(unsigned char, unsigned char const*)
00001cc4 g     F .text.itcm	000000d8 failSafe()
0000a392  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011a00 g     F .text.itcm	0000000c __locale_mb_cur_max
000142a4 g     F .text.itcm	00000016 _wcsrtombs_r
20005454 g     O .bss	00000004 alphaOffset
00005288 g     F .text.itcm	00000008 PWMServo::PWMServo()
20005140 g     O .bss	00000190 __atexit0
20003c60 g     O .data	00000004 beta_min
0000ecc8  w    F .text.itcm	00000008 usb_serial_class::flush()
200055c0 g     O .bss	00000004 pitch_passthru
00006f24 g     F .text.itcm	00000098 ExFatFormatter::writeUpcase(unsigned long)
200044f8 g     O .bss	00000004 AccZ
0000ca80 g     F .text.itcm	00000010 IRQHandler_Serial5
20003c28 g     O .data	00000004 __malloc_sbrk_base
0000ecb8  w    F .text.itcm	00000008 usb_serial_class::read()
000092a8 g     F .text.itcm	0000015c FatFile::remove()
0000fc40 g     F .text.itcm	00000080 sin
20005480 g     O .bss	00000004 ch2_CutCounter
0000e384  w    F .text.itcm	00000006 _lseek
0000e38a  w    F .text.itcm	00000004 __cxa_pure_virtual
20004480 g     O .bss	00000010 D_gainScale_rip
00011efc g     F .text.itcm	000000f0 __lshift
000084cc g     F .text.itcm	000000d2 FatFile::mkdir(FatFile*, char const*, bool)
0000ebd8 g     F .text.itcm	00000030 usb_prepare_transfer
0000a396  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
200055e8 g     O .bss	00000004 roll_des
0000e1b4 g     F .text.itcm	00000188 unused_interrupt_vector
20005810 g     O .bss	00000004 usb_timer0_callback
60001cb0 g     F .text.code	00000148 tempmon_init
00008b80 g     F .text.itcm	00000128 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
0000f520  w    F .text.itcm	00000002 serialEvent()
20003c40 g     O .data	00000004 alphaCounts_max
20003c74 g     O .data	00000004 channel_1_fs
00013e8c g     F .text.itcm	00000088 __register_exitproc
0000a49c g     F .text.itcm	0000006c DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0000d154 g     F .text.itcm	00000010 String::operator=(String&&)
000062b0 g     F .text.itcm	000000e6 ExFatFile::open(ExFatFile*, char const*, int)
000110ac g     F .text.itcm	0000008a strncmp
00008ac0 g     F .text.itcm	000000c0 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
00006842 g     F .text.itcm	000000ec ExFatFile::mkdir(ExFatFile*, char const*, bool)
00009598 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000d254 g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
0000f0d8 g     F .text.itcm	00000064 usb_serial_flush_input
200055d4 g     O .bss	00000004 q3
000079de g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
200055c4 g     O .bss	00000004 prev_time
00011ce0 g     F .text.itcm	0000015c __multiply
20004608 g     O .bss	00000024 P_gains
0000f650 g     F .text.itcm	0000057c pow
0000f314 g     F .text.itcm	00000018 usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000a6f0 g     F .text.itcm	00000190 SharedSpiCard::begin(SdSpiConfig)
000032b0  w    F .text.itcm	000000a8 Eigen::PlainObjectBase<Eigen::Matrix<float, 2, 2, 0, 2, 2> >::PlainObjectBase<Eigen::Product<Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, 0> > const&)
00011138 g     F .text.itcm	00000064 strncpy
200052dc g     O .bss	00000028 __malloc_current_mallinfo
20002608 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
00012184 g     F .text.itcm	000000d4 __d2b
0000ab8c g     F .text.itcm	0000002e SharedSpiCard::writeData(unsigned char const*)
200050e0 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
0000acbe  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60001ee4 g     F .text.code	00000054 _reboot_Teensyduino_
200045dc g     O .bss	00000004 MagZ
0000b4ac  w    F .text.itcm	0000000e SdioCard::~SdioCard()
00002968 g     F .text.itcm	0000004c getIScale()
600018c2 g     F .text.code	00000002 startup_default_middle_hook
200055cc g     O .bss	00000004 q1
000122d0 g     F .text.itcm	00000018 realloc
0000a440 g     F .text.itcm	0000005c DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a8ba g     F .text.itcm	00000036 SharedSpiCard::readRegister(unsigned char, void*)
200054d4 g     O .bss	00000004 channel_7_pwm
0000b440 g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
0000ce0c g     F .text.itcm	000000b0 Stream::parseFloat(char)
0000e68c g     F .text.itcm	000004c0 usb_isr
00011990 g     F .text.itcm	0000000c __cxa_atexit
000044bc g     F .text.itcm	00000164 SBUS::read(unsigned short*, bool*, bool*)
00005c30 g     F .text.itcm	00000196 ExFatFile::read(void*, unsigned int)
000001e0  w    F .text.itcm	00000090 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
00005290 g     F .text.itcm	0000009c PWMServo::attach(int, int, int)
000150d4 g     F .text.itcm	00000024 _close_r
0000ac3e  w    F .text.itcm	00000042 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
200044a0 g     O .bss	00000010 I_gainScale_rip
0000a93a g     F .text.itcm	00000028 SharedSpiCard::readStop()
00000898  w    F .text.itcm	0000001e SDFile::peek()
0000bfb0 g     F .text.itcm	0000004e FsCache::sync()
00001ef0 g     F .text.itcm	00000130 getJoyAngle()
200057f0 g     O .bss	00000004 sineTime
2000581c g     O .bss	00000004 yaw_PID
20004b00 g     O .bss	00000050 SPI
00011754 g     F .text.itcm	00000060 memcmp
20002730  w    O .data	00000028 vtable for usb_serial_class
0000bf4e g     F .text.itcm	00000014 SdSpiArduinoDriver::send(unsigned char)
200045b0 g     O .bss	00000004 Ki_pitch_angle
0000d0da g     F .text.itcm	00000026 String::String(char const*)
000119f4 g     F .text.itcm	00000002 __retarget_lock_close_recursive
200045a8 g     O .bss	00000004 Kd_pitch_angle
0000bd54 g     F .text.itcm	00000008 sdCsWrite(unsigned char, bool)
200057cc g     O .bss	00000004 servo1
0000cdb4 g     F .text.itcm	00000030 Stream::timedPeek()
200057c4 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20004ba0 g     O .bss	00000050 SPI2
20005628 g     O .bss	00000004 s2_command_PWM
200035f8 g     O .data	00000004 B_mag
00014100 g     F .text.itcm	000000cc __swsetup_r
00006564 g     F .text.itcm	00000062 ExFatFile::rmdir()
20003610 g     O .data	00000004 Kd_scale
0000a908 g     F .text.itcm	00000032 SharedSpiCard::readStart(unsigned long)
20005620 g     O .bss	00000004 s1_command_PWM
000001e0  w    F .text.itcm	00000090 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
20003820 g     O .data	00000408 __malloc_av_
2000513c g     O .bss	00000004 __atexit
000008f4  w    F .text.itcm	0000001a SDFile::flush()
00012cc8 g     F .text.itcm	00000022 __sread
2000584b g     O .bss	00000001 useSerialAngleCommands
00004620 g     F .text.itcm	00000044 SBUS::scaleBias(unsigned char)
200035f4 g     O .data	00000004 B_madgwick
0000f378 g     F .text.itcm	000000a0 usb_serial_flush_output
00011ac8 g     F .text.itcm	0000000c __malloc_lock
00007584 g     F .text.itcm	000000c4 ExFatFile::getName8(char*, unsigned int)
0000c064 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
20004000 g     O .data	000002c0 _VectorsRam
200055ac g     O .bss	00000008 pidOutputVals_rip
0000bf62 g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
0000a628 g     F .text.itcm	00000030 SharedSpiCard::waitReady(unsigned short)
00009434 g     F .text.itcm	000000b0 FatFormatter::initFatDir(unsigned char, unsigned long)
00015228 g     F .text.itcm	00000054 _fflush_r
0000216c g     F .text.itcm	00000762 getDataString()
20003cd8 g     O .data	00000004 maxRoll
00012258 g     F .text.itcm	00000078 _calloc_r
20003c94 g     O .data	00000004 channel_9_fs
00004f08 g     F .text.itcm	00000270 SPIClass::begin()
00011010 g     F .text.itcm	0000009c __utoa
20003c6c g     O .data	00000004 channel_12_fs
00008ecc g     F .text.itcm	00000300 FatFile::open(FatFile*, FatLfn_t*, int)
20003d47 g     O .data	00000001 yield_active_check_flags
000066dc g     F .text.itcm	0000005c ExFatFile::sync()
000119f8 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20005849 g     O .bss	00000001 usb_high_speed
0000859e g     F .text.itcm	00000202 FatFile::rename(FatFile*, char const*)
0000b0a8 g     F .text.itcm	0000004c SdioCard::isBusy()
000118ec g     F .text.itcm	000000a4 memset
0000fc38 g     F .text.itcm	00000006 __ieee754_sqrtf
0000d748 g     F .text.itcm	00000010 main
00000270  w    F .text.itcm	00000098 Eigen::PlainObjectBase<Eigen::Matrix<float, 2, 2, 0, 2, 2> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
20005308 g     O .bss	00000004 __malloc_max_total_mem
200035f0 g     O .data	00000004 B_gyro
000076ac g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
000119f0 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
20004550 g     O .bss	00000004 GyroY
200057c8 g     O .bss	00000004 serialInputValue
0000abba g     F .text.itcm	00000048 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
20003c84 g     O .data	00000004 channel_5_fs
00006c44 g     F .text.itcm	00000240 ExFatFile::write(void const*, unsigned int)
200054bc g     O .bss	00000004 channel_3_pwm_prev
0000c0c8 g     F .text.itcm	000000aa lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
000082f0 g     F .text.itcm	00000044 FatFile::dirEntry(DirFat_t*)
200044d0 g     O .bss	00000010 P_gains_rip
000032b0  w    F .text.itcm	000000a8 Eigen::PlainObjectBase<Eigen::Matrix<float, 2, 2, 0, 2, 2> >::PlainObjectBase<Eigen::Product<Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, 0> > const&)
00000c36  w    F .text.itcm	0000006c SDFile::available()
00012d4c g     F .text.itcm	00000008 __sclose
0000ec54 g     F .text.itcm	00000054 usb_init_serialnumber
200054ac g     O .bss	00000004 channel_2_pwm_pre
60001fb4 g       .text.code	00000000 __init_array_end
000143e8 g     F .text.itcm	00000cec _dtoa_r
000111f4 g     F .text.itcm	00000560 _malloc_r
0000a422 g     F .text.itcm	0000000c DedicatedSpiCard::readSector(unsigned long, unsigned char*)
20005835 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
200035e4 g     O .data	00000004 AccErrorY
20004500 g     O .bss	00000024 D_gainScale
00012d54 g     F .text.itcm	0000001a __ascii_wctomb
000006b4  w    F .text.itcm	00000012 SDFile::isOpen()
0000a0ee g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
2000510c g     O .bss	00000004 FatVolume::m_cwv
200028ec  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
0000423c g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
00005178 g     F .text.itcm	0000007e SPIClass::transfer(void const*, void*, unsigned int)
0000d5dc g     F .text.itcm	00000054 micros
200054a4 g     O .bss	00000004 channel_1_pwm_prev
20003cd4 g     O .data	00000004 maxPitch
000065c8 g     F .text.itcm	00000114 ExFatFile::syncDir()
00004240 g     F .text.itcm	00000018 MPU6050::setFullScaleGyroRange(unsigned char)
20003c9c g     O .data	00000014 dataFile
200035e0 g     O .data	00000004 AccErrorX
00004c5c g     F .text.itcm	000000a0 TwoWire::setClock(unsigned long)
000129f4 g     F .text.itcm	000000a0 _malloc_trim_r
000157dc g     F .text.itcm	00000106 _wcsnrtombs_l
0000f15c g     F .text.itcm	000001b8 usb_serial_write
600020d8 g     O .text.progmem	00000004 string0
2000454c g     O .bss	00000004 GyroX_prev
600018c4  w    F .text.code	00000002 startup_late_hook
0000dd4c g     F .text.itcm	000000e8 flexpwmFrequency
0000e630 g     F .text.itcm	00000034 usb_start_sof_interrupts
0000fd70 g     F .text.itcm	00000012 .hidden __math_check_uflow
0000ac02 g     F .text.itcm	00000016 DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000ecc0  w    F .text.itcm	00000008 usb_serial_class::available()
20005490 g     O .bss	00000004 channel_11_pwm
600020a6  w    O .text.progmem	00000001 _serialEvent_default
00008160 g     F .text.itcm	000000a4 FatFile::sync()
0000989c g     F .text.itcm	000000d4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
000055be  w    F .text.itcm	00000052 SDClass::mkdir(char const*)
20000000 g     O .data	00000280 endpoint_queue_head
200044e8 g     O .bss	00000004 AccX
600020a8  w    O .text.progmem	00000016 usb_string_product_name
0000d630 g     F .text.itcm	0000002c delay
20004524 g     O .bss	00000024 D_gains
00005b3c g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00015920 g     F .fini	00000000 _fini
0000d164 g     F .text.itcm	00000022 String::operator=(char const*)
00001de8 g     F .text.itcm	0000006c loopRate(int)
000046e6 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
0000a572 g     F .text.itcm	0000003e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
200055bc g     O .bss	00000004 pitch_des
200045c0 g     O .bss	00000004 MagErrorX
000063a8 g     F .text.itcm	00000030 ExFatFile::openNext(ExFatFile*, int)
20005498 g     O .bss	00000004 channel_13_pwm
00008204 g     F .text.itcm	00000010 FatFile::close()
0000e392 g     F .text.itcm	00000008 Panic_Temp_isr
00000b60  w    F .text.itcm	00000048 SDFile::~SDFile()
00008374 g     F .text.itcm	00000158 FatFile::mkdir(FatFile*, FatLfn_t*)
000158e4 g     F .text.itcm	00000024 _wcsnrtombs_r
0000af5c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000aa0  w    F .text.itcm	0000001e StreamFile<FsBaseFile, unsigned long long>::peek()
000000e0  w    F .text.itcm	00000022 File::write(unsigned char)
00012ddc g     F .text.itcm	0000002c _write_r
0000e170 g     F .text.itcm	0000001c analogWriteRes
000028d0 g     F .text.itcm	0000004c getPScale()
200057e0 g     O .bss	00000004 servo6
200035ec g     O .data	00000004 B_accel
2000462c g     O .bss	000004d4 SD
0000b0fc g     F .text.itcm	000000d0 SdioCard::erase(unsigned long, unsigned long)
200045e4 g     O .bss	00000024 P_gainScale
0000d0da g     F .text.itcm	00000026 String::String(char const*)
20005824 g     O .bss	00000004 yaw_passthru
0000fdb0 g     F .text.itcm	0000000c nanf
20003c3c g     O .data	00000004 _impure_ptr
00003d00  w    F .text.itcm	0000009a Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::product_evaluator(Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0> const&)
20002804  w    O .data	00000024 vtable for Stream
00005dc6 g     F .text.itcm	0000002c ExFatFile::peek()
200054d0 g     O .bss	00000004 channel_6_pwm
000150f8 g     F .text.itcm	00000130 __sflush_r
00010ef8 g     F .text.itcm	0000010c scalbn
20002678  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20003c88 g     O .data	00000004 channel_6_fs
20004c50 g     O .bss	00000140 Wire
00000e70 g     F .text.itcm	00000334 getIMUdata()
00000bc4  w    F .text.itcm	0000001c SDFile::write(void const*, unsigned int)
0000fc24 g     F .text.itcm	00000004 atan2f
000042dc g     F .text.itcm	00000010 MPU6050::setSleepEnabled(bool)
0000a35c g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00012d94 g     F .text.itcm	00000046 _fwalk_sglue
0000ae6c g     F .text.itcm	0000000c SdioCard::errorCode() const
20005468 g     O .bss	00000004 betaOffset
000082de g     F .text.itcm	00000012 FatFile::open(FatVolume*, char const*, int)
00000ba8  w    F .text.itcm	0000001c StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60001f90 g       .text.code	00000000 __preinit_array_end
20005668 g     O .bss	0000013c sbus
20005460 g     O .bss	00000004 beta
20003d20 g     O .data	00000004 print_counterSD
0000782e g     F .text.itcm	0000003a ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000a522 g     F .text.itcm	00000028 SharedSpiCard::spiStart()
00013f14 g     F .text.itcm	0000002a __ascii_mbtowc
20003608 g     O .data	00000004 GyroErrorY
200054b4 g     O .bss	00000004 channel_3_pwm
20003c54 g     O .data	00000004 betaCounts_max
0000e664 g     F .text.itcm	00000028 usb_stop_sof_interrupts
000046cc  w    F .text.itcm	00000018 TwoWire::peek()
20005474 g     O .bss	00000004 blink_counter
0000c662 g     F .text.itcm	00000158 HardwareSerial::IRQHandler()
000046e4  w    F .text.itcm	00000002 TwoWire::flush()
00002d5c g     F .text.itcm	00000554 setup
20003428 g     O .data	00000084 usb_descriptor_list
0000b0f4 g     F .text.itcm	00000008 SdioCard::status()
200057d8 g     O .bss	00000004 servo4
00008354 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
0000067e  w    F .text.itcm	00000002 Print::flush()
20003c8c g     O .data	00000004 channel_7_fs
20003c64 g     O .data	00000004 channel_10_fs
00005496  w    F .text.itcm	0000005a SDClass::rmdir(char const*)
00007cae g     F .text.itcm	000001aa FatFile::read(void*, unsigned int)
000042ec g     F .text.itcm	00000018 MPU6050::setClockSource(unsigned char)
00007c46 g     F .text.itcm	0000003c FatFile::openRoot(FatVolume*)
200050cc g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
0000a26c g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
000000b4  w    F .text.itcm	0000002c File::read()
0000f32c g     F .text.itcm	0000004c usb_serial_write_buffer_free
20003c70 g     O .data	00000004 channel_13_fs
20003c44 g     O .data	00000004 alphaCounts_min
00004350 g     F .text.itcm	00000010 MPU6050::testConnection()
6000176c g     F .text.code	0000005c TwoWire::setSCL(unsigned char)
20003c30 g     O .data	0000000c __sglue
0000eeb0 g     F .text.itcm	000000ec usb_serial_configure
00004710 g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00000104  w    F .text.itcm	00000038 File::~File()
20003d24 g     O .data	00000004 q0
20005104 g     O .bss	00000008 PWMServo::attachedpins
0000cb98  w    F .text.itcm	00000018 _write
200042c0 g       .data	00000000 _edata
00007926 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
00000d60 g     F .text.itcm	00000094 controlMixer()
2000583c g     O .bss	00000001 external_psram_size
0000af5c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000c07c g     F .text.itcm	0000004c FsName::get16()
20004560 g     O .bss	00000024 I_gainScale
20005634 g     O .bss	00000004 s3_command_scaled
0000a508  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a9d6 g     F .text.itcm	0000006a DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20005640 g     O .bss	00000004 s5_command_PWM
0000a42e g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
00007648 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
00007ba0 g     F .text.itcm	00000084 FatFile::addDirCluster()
00015324 g     F .text.itcm	000000aa __fputwc
0000ecd0  w    F .text.itcm	00000008 usb_serial_class::availableForWrite()
2000583d g     O .bss	00000001 failureFlag
00004c2c g     F .text.itcm	00000010 lpi2c1_isr()
00009b7c g     F .text.itcm	00000036 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
20005494 g     O .bss	00000004 channel_12_pwm
0000c554 g     F .text.itcm	0000003c nvic_execution_priority()
2000551c g     O .bss	00000004 dt
0000d89c g     F .text.itcm	00000064 ultoa
200055a0 g     O .bss	0000000c pidOutputVals
200045e0 g     O .bss	00000004 MagZ_prev
000053c8  w    F .text.itcm	00000002 SDClass::~SDClass()
600017c8 g     F .text.code	00000044 TwoWire::begin()
000013b8 g     F .text.itcm	00000308 getDesState()
0000a198 g     F .text.itcm	00000074 FsBaseFile::open(FsVolume*, char const*, int)
00004400 g     F .text.itcm	000000bc SBUS::parse()
00003d9c g     F .text.itcm	0000020c pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, bool)
20005504 g     O .bss	00000004 d_ch4
00012cec g     F .text.itcm	0000003e __swrite
0000d88c g     F .text.itcm	00000008 operator new(unsigned int)
0000c384 g     F .text.itcm	00000054 EventResponder::runFromInterrupt()
20003c2c g     O .data	00000004 __malloc_trim_threshold
0000ecb0  w    F .text.itcm	00000008 usb_serial_class::peek()
20005820 g     O .bss	00000004 yaw_des
200057e8 g     O .bss	00000004 servoLoopCounter
2000562c g     O .bss	00000004 s2_command_scaled
0001199c g     F .text.itcm	0000000a fcvtf
0000acc2  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000a54a g     F .text.itcm	00000028 SharedSpiCard::spiStop()
20005564 g     O .bss	00000010 filePrefix
20003604 g     O .data	00000004 GyroErrorX
00012ca0 g     F .text.itcm	00000028 fiprintf
200045b8 g     O .bss	00000004 Kp_pitch_angle
200045d8 g     O .bss	00000004 MagY_prev
200054dc g     O .bss	00000004 channel_9_pwm
00012e80 g     F .text.itcm	00000f8c _vfiprintf_r
20005818 g     O .bss	00000004 yaw_IMU
20005464 g     O .bss	00000004 betaCounts
00012030 g     F .text.itcm	00000154 __mdiff
0000aecc g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
0000fd00 g     F .text.itcm	00000010 .hidden __math_uflow
0000c4b6 g     F .text.itcm	00000084 HardwareSerial::read()
20002598 g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
000078d8 g     F .text.itcm	0000004e ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00004e08 g     F .text.itcm	000000c8 _spi_dma_rxISR1()
00009a34 g     F .text.itcm	00000108 FatFile::getName8(char*, unsigned int)
200034c0 g     O .data	00000120 _impure_data
00005ed8 g     F .text.itcm	000003d8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
0001245c g     F .text.itcm	0000000c __sfp_lock_release
000102f8 g     F .text.itcm	000001ac atanf
0000b438 g     F .text.itcm	00000008 SdioCard::writeStop()
000040fc g     F .text.itcm	00000014 I2Cdev::readByte(unsigned char, unsigned char, unsigned char*, unsigned short)
20003cd0 g     O .data	00000004 maxFreq
20004554 g     O .bss	00000004 GyroY_prev
0000a61c g     F .text.itcm	0000000c SharedSpiCard::readData(unsigned char*)
00005b04 g     F .text.itcm	00000014 ExFatFile::close()
200029d4 g     O .data	00000101 _ctype_
20005450 g     O .bss	00000004 alphaCounts
0000e36c  w    F .text.itcm	00000004 _read
60001f90 g       .text.code	00000000 __init_array_start
20003d28 g     O .data	00000004 sweepTime
0000d2a4 g     F .text.itcm	0000009c analogRead
200035fc g     O .data	00000004 F_BUS_ACTUAL
0000e0d0 g     F .text.itcm	00000038 quadtimer_init
20005488 g     O .bss	00000004 ch4_CutCounter
00006ed0 g     F .text.itcm	0000003a ExFatFormatter::writeUpcaseByte(unsigned char)
0000554e  w    F .text.itcm	00000070 SDClass::rename(char const*, char const*)
20005484 g     O .bss	00000004 ch3_CutCounter
20002fd4 g     O .data	0000002a pin_to_channel
20003630 g     O .data	00000004 MagScaleZ
00004664 g     F .text.itcm	00000014 SBUS::setEndPoints(unsigned char, unsigned short, unsigned short)
000141cc g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000a50a  w    F .text.itcm	0000000a SharedSpiCard::end()
00012540 g     F .text.itcm	000000dc strlen
00007c82 g     F .text.itcm	0000002c FatFile::openCluster(FatFile*)
0000206c g     F .text.itcm	00000100 printRIPAngles()
00003358  w    F .text.itcm	000001b6 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 0> >(Eigen::DenseBase<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 0> > const&)
200057d0 g     O .bss	00000004 servo2
00007ec4 g     F .text.itcm	000000a4 FatFile::seekSet(unsigned long)
600020a8 g     O .text.progmem	00000016 usb_string_product_name_default
00001d9c g     F .text.itcm	0000004c throttleCut()
200044ec g     O .bss	00000004 AccX_prev
0000aedc g     F .text.itcm	00000064 SdioCard::sectorCount()
00005288 g     F .text.itcm	00000008 PWMServo::PWMServo()
0000809c g     F .text.itcm	000000c4 FatFile::openNext(FatFile*, int)
20004558 g     O .bss	00000004 GyroZ
20005470 g     O .bss	00000004 betaPitch_des
600018c2  w    F .text.code	00000002 startup_middle_hook
0000cb30 g     F .text.itcm	0000004a Print::print(String const&)
2000287c g     O .data	00000070 vtable for SdioCard
200055b8 g     O .bss	00000004 pitch_PID
00009b3c g     F .text.itcm	00000008 FatFile::getName(char*, unsigned int)
00000df4 g     F .text.itcm	00000078 IMUinit()
600018ca g     F .text.code	000000f2 configure_cache
0000acba  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000fbcc g     F .text.itcm	00000058 asinf
20003c68 g     O .data	00000004 channel_11_fs
0000cec8 g     F .text.itcm	00000180 breakTime(unsigned long, DateTimeFields&)
0000a8f0  w    F .text.itcm	0000000c SharedSpiCard::readCSD(csd_t*)
000058a0  w    F .text.itcm	0000008e SdBase<FsVolume, FsFormatter>::restart()
0000bbb4 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
0000bd5c g     F .text.itcm	00000128 SdSpiArduinoDriver::activate()
0000c804 g     F .text.itcm	0000027c HardwareSerial::begin(unsigned long, unsigned short)
20005458 g     O .bss	00000004 alphaRoll
60001f90 g       .text.code	00000000 __preinit_array_start
0000ec30 g     F .text.itcm	00000020 usb_receive
0000775e g     F .text.itcm	000000d0 ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
2000544c g     O .bss	00000004 alpha
200045c8 g     O .bss	00000004 MagErrorZ
00011c24 g     F .text.itcm	00000060 __lo0bits
200057e4 g     O .bss	00000004 servo7
000078b0 g     F .text.itcm	00000028 ExFatPartition::chainSize(unsigned long)
00007fc2 g     F .text.itcm	000000da FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
0001cc00 g       *ABS*	00000000 _flashimagelen
200057a4 g     O .bss	00000020 sbusChannels
20005841 g     O .bss	00000001 sbusFailSafe
000087a0 g     F .text.itcm	000000fc FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
600020a7 g     O .text.progmem	00000001 _serialEvent5_default
0000a962 g     F .text.itcm	0000001e SharedSpiCard::syncDevice()
00011004 g     F .text.itcm	0000000a __aeabi_atexit
20005500 g     O .bss	00000004 d_ch3
0000e18c g     F .text.itcm	00000024 rtc_get
000064b4 g     F .text.itcm	000000b0 ExFatFile::remove()
70000000 g       .bss.extram	00000000 _extram_start
0000c3d8 g     F .text.itcm	00000008 pendablesrvreq_isr
00005382  w    F .text.itcm	00000046 SDClass::totalSize()
00004678 g     F .text.itcm	0000002a SBUS::begin()
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
200036b4 g     O .data	0000016c __global_locale
20003c4c g     O .data	00000004 alpha_min
2000361c g     O .data	00000004 Ki_yaw
0000b734 g     F .text.itcm	000003b0 SdioCard::begin(SdioConfig)
2000583b g     O .bss	00000001 doneWithSetup
00005b18 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
200044c0 g     O .bss	00000010 P_gainScale_rip
0000ef9c g     F .text.itcm	000000dc usb_serial_read
200052d8 g     O .bss	00000001 __lock___sfp_recursive_mutex
200054c4 g     O .bss	00000004 channel_4_pwm_pre
2000582e g     O .bss	00000001 SD_is_present
0000cbb0 g     F .text.itcm	0000008a Print::printNumber(unsigned long, unsigned char, unsigned char)
0000eb90 g     F .text.itcm	00000048 usb_config_tx
0000e370  w    F .text.itcm	00000006 _close
00009bb2 g     F .text.itcm	0000011e FatPartition::fatGet(unsigned long, unsigned long*)
000111e4 g     F .text.itcm	00000010 free
00003b30 g     F .text.itcm	000001d0 pidOutput_rip(Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 1, 0, 2, 1>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, Eigen::Matrix<float, 2, 2, 0, 2, 2>, bool)
20005650 g     O .bss	00000004 s7_command_PWM
00003ff0 g     F .text.itcm	0000010c I2Cdev::readBytes(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00007538 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00011b40 g     F .text.itcm	000000a4 __multadd
2000362c g     O .data	00000004 MagScaleY
00011b2c g     F .text.itcm	00000012 _Bfree
0000069a  w    F .text.itcm	0000001a SDFile::size()
000101ac g     F .text.itcm	0000014c __ieee754_atan2f
0000999a g     F .text.itcm	00000098 FatFile::getSFN(char*, unsigned int)
00000b20  w    F .text.itcm	00000040 SDFile::~SDFile()
20003d2c  w    O .data	00000016 usb_string_serial_number
20003c78 g     O .data	00000004 channel_2_fs
0000bc20 g     F .text.itcm	000000b0 SdioCard::readSector(unsigned long, unsigned char*)
0000aea8 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


