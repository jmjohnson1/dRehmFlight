
/home/james/Documents/dRehmFlight/Versions/dRehmFlight_rip/build/dRehmFlight_rip.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001fac l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
000151a0 l    d  .fini	00000000 .fini
000151a4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20003ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001b214 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001860 l     F .text.code	0000002c flexspi2_command
6000188c l     F .text.code	00000034 flexspi2_psram_id
60001400 l     F .text.code	00000254 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00004598 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 analog.c
20005331 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
20005150 l     O .bss	00000004 s_hotCount
20005154 l     O .bss	00000004 s_hotTemp
20005158 l     O .bss	00000004 s_hot_ROOM
2000515c l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000dc98 l     F .text.itcm	000000a8 endpoint0_transmit
0000dd40 l     F .text.itcm	000000ac endpoint0_receive
0000ddec l     F .text.itcm	00000088 schedule_transfer
0000de74 l     F .text.itcm	00000036 run_callbacks
0000deaa l     F .text.itcm	0000001c usb_endpoint_config
20004fe0 l     O .bss	00000008 endpoint0_buffer
20004fe8 l     O .bss	00000004 endpoint0_notify_mask
20004080 l     O .bss	00000008 endpoint0_setupdata
20004fec l     O .bss	00000004 endpointN_notify_mask
200050d0 l     O .bss	00000008 reply_buffer
2000533b l     O .bss	00000001 sof_usage
20005342 l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20005098 l     O .bss	00000000 object.0
60001f90 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 GlobalVariables.cpp
0000016c l     F .text.itcm	00000074 _GLOBAL__sub_I_dt
00000000 l    df *ABS*	00000000 dRehmFlight_rip.ino.cpp
000032d0 l     F .text.itcm	00000084 _GLOBAL__sub_I_mpu6050
00000000 l    df *ABS*	00000000 SPI.cpp
00004adc l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 SD.cpp
000052ec l     F .text.itcm	0000007c _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
0000c32c l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial5
20004acc l     O .bss	00000040 rx_buffer5
20004b0c l     O .bss	00000028 tx_buffer5
20003194 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
20003814 l     O .data	00000012 device_descriptor
2000385c l     O .data	00000028 microsoft_os_compatible_id_desc
20003884 l     O .data	00000012 microsoft_os_string_desc
6000219c l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 filter.cpp
00000000 l    df *ABS*	00000000 pidController.cpp
00000000 l    df *ABS*	00000000 I2Cdev.cpp
00000000 l    df *ABS*	00000000 MPU6050.cpp
00000000 l    df *ABS*	00000000 SBUS.cpp
20004ac4 l     O .bss	00000004 guard variable for SBUS::parse()::_sbusTime
20004bb4 l     O .bss	00000004 SBUS::parse()::_sbusTime
00000000 l    df *ABS*	00000000 PWMServo.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00005c74 l     F .text.itcm	0000003c exFatDirChecksum(unsigned char const*, unsigned short)
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00008ca0 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000a564 l     F .text.itcm	0000002c sdIrs()
0000a590 l     F .text.itcm	00000020 gpioMux(unsigned char)
0000a5b0 l     F .text.itcm	00000018 isBusyCommandComplete()
0000a5c8 l     F .text.itcm	00000010 isBusyCommandInhibit()
0000a5d8 l     F .text.itcm	00000014 isBusyDat()
0000a5ec l     F .text.itcm	0000000c isBusyDMA()
0000a5f8 l     F .text.itcm	00000014 isBusyFifoRead()
0000a60c l     F .text.itcm	00000014 isBusyFifoWrite()
0000a620 l     F .text.itcm	00000018 isBusyTransferComplete()
0000a638 l     F .text.itcm	000000d0 setSdclk(unsigned long)
0000a7fc l     F .text.itcm	00000024 waitTimeout(bool (*)())
0000a820 l     F .text.itcm	0000007c cardCommand(unsigned long, unsigned long)
0000a89c l     F .text.itcm	00000074 readReg16(unsigned long, void*)
0000a910 l     F .text.itcm	00000024 statusCMD13()
0000a934 l     F .text.itcm	00000010 isBusyCMD13()
0000aa68 l     F .text.itcm	00000060 waitTransferComplete()
0000ab5c l     F .text.itcm	00000038 yieldTimeout(bool (*)())
0000ab94 l     F .text.itcm	00000034 waitDmaStatus()
0000abc8 l     F .text.itcm	00000090 cardCMD6(unsigned long, unsigned char*)
0000ac58 l     F .text.itcm	0000007c transferStop()
0000ad58 l     F .text.itcm	000000b0 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
20005327 l     O .bss	00000001 m_initDone
20004ac8 l     O .bss	00000004 m_sdClkKhz
20005328 l     O .bss	00000001 m_version2
20004b34 l     O .bss	00000004 m_errorLine
20005329 l     O .bss	00000001 m_highCapacity
2000532a l     O .bss	00000001 m_transferActive
20004b38 l     O .bss	00000010 m_cid
20004b48 l     O .bss	00000010 m_csd
20004b58 l     O .bss	00000004 m_ocr
20004b5c l     O .bss	00000004 m_rca
20004b60 l     O .bss	00000004 m_busyFcn
2000532b l     O .bss	00000001 m_dmaBusy
20004b64 l     O .bss	00000004 m_irqstat
200038d4 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0000b8ec l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001d90 l     O .data	0000012c lookupTable
20001ebc l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20001f90 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000e588 l     F .text.itcm	0000009c usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000e624 l     F .text.itcm	0000006c rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000e690 l     F .text.itcm	000000b4 rx_event
200050e8 l     O .bss	00000004 rx_available
200050ec l     O .bss	00000010 rx_count
20005337 l     O .bss	00000001 rx_head
200050fc l     O .bss	00000010 rx_index
2000510c l     O .bss	00000009 rx_list
20005320 l     O .bss	00000002 rx_packet_size
20005338 l     O .bss	00000001 rx_tail
20003f00 l     O .bss	00000100 rx_transfer
2000533c l     O .bss	00000001 transmit_previous_timeout
20005322 l     O .bss	00000002 tx_available
2000533d l     O .bss	00000001 tx_head
2000533e l     O .bss	00000001 tx_noautoflush
20005324 l     O .bss	00000002 tx_packet_size
20004000 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000532e l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-wf_asin.o
00000000 l    df *ABS*	00000000 libm_a-wf_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_fabs.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
0000f558 l     F .text.itcm	00000018 with_errno
0000f570 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-ef_asin.o
00000000 l    df *ABS*	00000000 libm_a-ef_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_atan.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00011b80 l     F .text.itcm	00000018 stdio_exit_handler
00011b98 l     F .text.itcm	00000040 cleanup_stdio
00011bd8 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00012688 l     F .text.itcm	00000076 __sprint_r.part.0
0001368c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00013b3c l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 UserVariables.cpp
00000000 l    df *ABS*	00000000 MPU9250.cpp
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00015188 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00015190 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00015198 l     F .text.itcm	00000008 ___init_veneer
60001f48 l     F .text.code	00000008 ___ZN7TwoWire8setClockEm_veneer
60001f50 l     F .text.code	00000008 __main_veneer
60001f58 l     F .text.code	00000008 __set_arm_clock_veneer
60001f60 l     F .text.code	00000008 __sm_set_pool_veneer
60001f68 l     F .text.code	00000008 __pwm_init_veneer
60001f70 l     F .text.code	00000008 __delay_veneer
60001f78 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001f80 l     F .text.code	00000008 ____libc_init_array_veneer
60001f88 l     F .text.code	00000008 __memset_veneer
00002d60 g     F .text.itcm	00000010 radioSetup()
000002ea  w    F .text.itcm	0000006a SDFile::getModifyTime(DateTimeFields&)
0000bb54 g     F .text.itcm	000000cc toUpcase(unsigned short)
0000e958 g     F .text.itcm	00000018 usb_serial_available
0000ca44 g     F .text.itcm	00000026 String::String(float, unsigned char)
20003898 g     O .data	00000004 minFreq
00001c4c g     F .text.itcm	00000060 loopBlink()
00014b28 g     F .text.itcm	00000024 _isatty_r
00004bc8 g     F .text.itcm	00000056 PWMServo::write(int)
000112a4 g     F .text.itcm	000000ba strcpy
0000ca1e g     F .text.itcm	00000026 String::String(int, unsigned char)
00003c44 g     F .text.itcm	00000058 SBUS::~SBUS()
000093e0 g     F .text.itcm	00000038 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
20005010 g     O .bss	00000010 fileExtension
600018c4 g     F .text.code	00000002 startup_default_late_hook
00010668 g     F .text.itcm	00000012 fabs
00014b4c g     F .text.itcm	0000002c _lseek_r
0000ae08 g     F .text.itcm	0000008c SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000ecb0  w    F .text.itcm	00000108 yield
00009db0  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
00000e00 g     F .text.itcm	000000e0 performSineSweep(int)
20003858 g     O .data	00000004 maxYaw
200040cc g     O .bss	00000004 MagX_prev
00001258 g     F .text.itcm	00000244 scaleCommands()
200037cc g     O .data	00000004 channel_3_fs
20003844 g     O .data	00000004 maxBetaPitch
2000530c g     O .bss	00000004 usb_timer1_callback
20005050 g     O .bss	00000004 integralOld_yaw
20004f24 g     O .bss	00000004 channel_2_pwm
000081ac g     F .text.itcm	000001b0 FatFile::write(void const*, unsigned int)
20004f18 g     O .bss	00000004 channel_1_pwm
20005040 g     O .bss	00000004 integralOld_alpha
600020b8 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
600019bc g     F .text.code	00000294 configure_external_ram
00009c36  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00008138 g     F .text.itcm	00000074 FatFile::truncate()
20004fd0 g     O .bss	00000004 d_ch2
20004844 g     O .bss	00000140 Wire1
0000a51c  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00008544 g     F .text.itcm	00000178 FatFile::makeSFN(FatLfn_t*)
00009848 g     F .text.itcm	00000142 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
6000209c  w    O .text.progmem	00000001 _serialEventUSB2_default
20004b68 g     O .bss	00000004 FsDateTime::callback
20004d4c g     O .bss	00000001 __lock___atexit_recursive_mutex
00013864 g     F .text.itcm	0000004c _wcrtomb_r
60001684 g     F .text.code	00000048 TwoWire::configSDApin(unsigned char)
000086bc g     F .text.itcm	000000ac FatFile::makeUniqueSfn(FatLfn_t*)
0000a2dc g     F .text.itcm	00000034 SharedSpiCard::writeStart(unsigned long)
00008d80 g     F .text.itcm	0000005a FatFormatter::initPbs()
0000c416 g     F .text.itcm	0000001c Print::println()
0000a4b4 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
00004414 g     F .text.itcm	000000b4 TwoWire::isr()
20002204 g     O .data	00000070 vtable for DedicatedSpiCard
000125ac g     F .text.itcm	00000020 __sseek
00011cac g     F .text.itcm	0000003c __sinit
00003a44 g     F .text.itcm	00000044 I2Cdev::writeBit(unsigned char, unsigned char, unsigned char, unsigned char)
0000568e g     F .text.itcm	000000e4 ExFatFile::seekSet(unsigned long long)
000137c0 g     F .text.itcm	000000a4 fcvtbuf
0000da48  w    F .text.itcm	00000002 serialEvent5()
20003178 g     O .data	00000004 MagScaleX
00014fac g     F .text.itcm	000000b0 __swbuf_r
000000a4  w    F .text.itcm	00000010 File::flush()
200040d0 g     O .bss	00000004 MagY
00000354  w    F .text.itcm	0000006a SDFile::getCreateTime(DateTimeFields&)
20005044 g     O .bss	00000004 integralOld_beta
0001136c g     F .text.itcm	0000000c __malloc_unlock
200046a4 g     O .bss	00000060 Serial5
20005128 g     O .bss	00000004 s3_command_PWM
00000558  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
20004ba4 g     O .bss	00000004 FsVolume::m_cwv
00007ab0 g     F .text.itcm	000000ca FatFile::open(FatFile*, char const*, int)
20005078 g     O .bss	00000004 m5_command_PWM
00009c2a  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
200038d6 g     O .data	00000001 useSineWave
6000180c g     F .text.code	00000054 analog_init
00003ba0 g     F .text.itcm	00000024 MPU6050::initialize()
00003a2c g     F .text.itcm	00000018 I2Cdev::writeByte(unsigned char, unsigned char, unsigned char)
00007bd0 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
200002c0 g     O .data	00000870 .hidden __exp_data
0000a11c g     F .text.itcm	0000003a SharedSpiCard::readOCR(unsigned long*)
0000c754 g     F .text.itcm	0000000a Stream::parseFloat()
20004f48 g     O .bss	00000004 channel_5_pwm
00003a88 g     F .text.itcm	00000050 I2Cdev::writeBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
200040a0 g     O .bss	00000004 AccZ_prev
0000f5b8 g     F .text.itcm	00000030 .hidden __math_divzero
20003144 g     O .data	00000004 F_CPU_ACTUAL
200022ec  w    O .data	0000005c vtable for SDFile
200037f8 g     O .data	00000004 dScaleRoll
200037a0 g     O .data	00000004 axisToRotate
0001104c g     F .text.itcm	000000f8 memmove
200038a4 g     O .data	00000004 pScalePitch
20005060 g     O .bss	00000004 m2_command_PWM
0000bce2 g     F .text.itcm	00000070 HardwareSerial::peek()
200050dc g     O .bss	00000004 roll_PID
0000b56c g     F .text.itcm	00000060 SdioCard::stopTransmission(bool)
00011378 g     F .text.itcm	0000004c _Balloc
20003158 g     O .data	00000004 Kd_roll_angle
000151ac g       .ARM.exidx	00000000 __exidx_end
20004ef4 g     O .bss	00000004 blink_delay
00009720 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
2000532c g     O .bss	00000001 EventResponder::runningFromYield
0000b7b2 g     F .text.itcm	00000018 SdSpiArduinoDriver::receive()
20005330 g     O .bss	00000001 blinkAlternate
20004fa8 g     O .bss	00000024 dTermFilter_yaw
00009b0c g     F .text.itcm	000000ec FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
20002b44 g     O .data	000000dc pwm_pin_info
0000dc34 g     F .text.itcm	00000064 tempmonGetTemp
200052f8 g     O .bss	00000004 thro_des
200052d4 g     O .bss	00000004 servo5
0000edbc g     F .text.itcm	0000002c smalloc_verify_pool
0000c3a0 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
200031f8 g     O .data	00000004 __atexit_recursive_mutex
200040c0 g     O .bss	00000004 MagErrorY
00010a60 g     F .text.itcm	0000000c __errno
00000622  w    F .text.itcm	0000002a SDFile::isDirectory()
00006286 g     F .text.itcm	00000174 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
20005332 g     O .bss	00000001 conductSineSweep
20004094 g     O .bss	00000004 AccY
0000006c  w    F .text.itcm	00000012 File::write(unsigned char const*, unsigned int)
60001000 g     O .text.headers	00000020 ImageVectorTable
0000ca44 g     F .text.itcm	00000026 String::String(float, unsigned char)
0000476c  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
0000013c  w    F .text.itcm	00000030 File::~File()
20004b7c g     O .bss	00000004 EventResponder::firstInterrupt
0000e4e8 g     F .text.itcm	00000004 usb_transfer_status
0000ee2c g     F .text.itcm	00000074 sm_set_pool
20004f3c g     O .bss	00000004 channel_4_pwm
000067a6 g     F .text.itcm	0000001a ExFatFormatter::writeUpcaseUnicode(unsigned short)
20004ec4 g     O .bss	00000004 __stdio_exit_handler
0000998a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
200038d5 g     O .data	00000001 analog_write_res
000073e8 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0000c9d6 g     F .text.itcm	00000016 String::String(String const&)
00000744  w    F .text.itcm	00000056 SDFile::setCreateTime(DateTimeFields const&)
200038ac g     O .data	00000004 pScaleYaw
0000e570  w    F .text.itcm	0000000c usb_serial_class::write(unsigned char const*, unsigned int)
00014afc g     F .text.itcm	0000002c _fstat_r
200026e8 g     O .data	00000370 digital_pin_to_info_PGM
20004ee8 g     O .bss	00000004 betaPitch
200037ac g     O .data	00000004 beta_max
20004ff0 g     O .bss	00000004 errno
200050d8 g     O .bss	00000004 roll_IMU
0000b7ca g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00010680 g     F .text.itcm	00000110 floor
00007104 g     F .text.itcm	00000048 ExFatPartition::fatGet(unsigned long, unsigned long*)
60001ffc g     O .text.progmem	00000050 TwoWire::i2c3_hardware
000151a8 g       .text.itcm	00000000 _etext
000045dc g     F .text.itcm	000000c8 _spi_dma_rxISR0()
20005134 g     O .bss	00000004 s4_command_scaled
2000514c g     O .bss	00000004 s7_command_scaled
00008a68 g     F .text.itcm	000000dc FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20003ec0 g       .bss	00000000 _sbss
00008dda g     F .text.itcm	0000005a FatFormatter::writeMbr()
0000b5e6 g     F .text.itcm	0000000a sdCsInit(unsigned char)
00005248 g     F .text.itcm	000000a4 SDClass::mediaPresent()
0000a714 g     F .text.itcm	0000000c SdioCard::errorData() const
00000d40 g     F .text.itcm	000000c0 setDesStateSerial(int)
0000ae94 g     F .text.itcm	000000b0 SdioCard::writeSector(unsigned long, unsigned char const*)
0000bcbc g     F .text.itcm	00000026 HardwareSerial::available()
000072e4 g     F .text.itcm	00000104 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00006858 g     F .text.itcm	0000057c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
000025f8 g     F .text.itcm	0000002c invSqrt(float)
0000cf40 g     F .text.itcm	00000024 digitalRead
600021a8 g       *ABS*	00000000 _stextload
00002998 g     F .text.itcm	000003c8 loop
0000d8f0 g     F .text.itcm	00000078 flexpwm_init
0000d520 g     F .text.itcm	000000c4 flexpwmWrite
20005088 g     O .bss	0000000f mpu6050
600018c6 g     F .text.code	00000004 startup_debug_reset
0000e3e4 g     F .text.itcm	00000044 usb_config_rx
0000eea0 g     F .text.itcm	00000044 sqrtf
00005424 g     F .text.itcm	000000a8 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
00003c44 g     F .text.itcm	00000058 SBUS::~SBUS()
0000b380 g     F .text.itcm	000000d0 SdioCard::readData(unsigned char*)
00000f18 g     F .text.itcm	00000038 pitchStep()
20001c94 g     O .data	00000004 Kp_betaPitch
0000c67c g     F .text.itcm	00000026 Stream::peekNextDigit()
200040a4 g     O .bss	00000004 GyroX
00001cac g     F .text.itcm	0000003c setupBlink(int, int, int)
00003af4 g     F .text.itcm	00000018 MPU6050::setFullScaleAccelRange(unsigned char)
0000bef6 g     F .text.itcm	00000008 HardwareSerial::write(unsigned char)
000041dc g     F .text.itcm	000000f8 TwoWire::endTransmission(unsigned char)
0000fd40 g     F .text.itcm	00000294 __ieee754_rem_pio2
20004f5c g     O .bss	00000004 current_time
20004b78 g     O .bss	00000004 EventResponder::lastInterrupt
20003848 g     O .data	00000004 maxCutCounter
00009a0c g     F .text.itcm	00000028 FsBaseFile::close()
00004a92 g     F .text.itcm	00000048 SPIClass::end()
0000cff0 g     F .text.itcm	00000134 memcpy
0000007e  w    F .text.itcm	00000012 File::available()
0000a3aa g     F .text.itcm	00000032 SharedSpiCard::writeStop()
0000ba0e g     F .text.itcm	0000009e FsUtf::cpToMb(unsigned long, char*, char*)
20003ec0 g     O .data	00000000 .hidden __TMC_END__
20005020 g     O .bss	00000010 fileName
0000f5e8 g     F .text.itcm	0000001e .hidden __math_invalid
20004f60 g     O .bss	00000024 dTermFilter_pitch
00007202 g     F .text.itcm	00000078 ExFatPartition::freeChain(unsigned long)
000076f4 g     F .text.itcm	00000028 FatFile::peek()
2000532f  w    O .bss	00000001 SDFile::name()::zeroterm
200052f0 g     O .bss	00000004 systick_millis_count
000061ca g     F .text.itcm	000000bc ExFatFile::rename(ExFatFile*, char const*)
000036c8 g     F .text.itcm	000001c4 ripPID()
00000512  w    F .text.itcm	00000046 SDFile::truncate(unsigned long long)
000041a0 g     F .text.itcm	0000003c TwoWire::wait_idle()
00003bfc g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
20005340 g     O .bss	00000001 usb_configuration
00009c20  w    F .text.itcm	00000006 SdCardInterface::status()
0000ede8 g     F .text.itcm	00000044 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000b5cc g     F .text.itcm	0000001a SdioCard::syncDevice()
0000aac8 g     F .text.itcm	00000094 SdioCard::writeData(unsigned char const*)
20003174 g     O .data	00000004 Kp_yaw
20004ef8 g     O .bss	00000004 ch1_CutCounter
0000079a  w    F .text.itcm	0000006c StreamFile<FsBaseFile, unsigned long long>::available()
200050c8 g     O .bss	00000004 q2
0000771c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00003ad8 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
0000d7a8 g     F .text.itcm	000000b0 analogWrite
00009c3a g     F .text.itcm	00000084 SharedSpiCard::sectorCount()
600020b8  w    O .text.progmem	00000018 usb_string_manufacturer_name
00010a6c g     F .text.itcm	00000010 malloc
60001fac g     O .text.progmem	00000050 TwoWire::i2c1_hardware
000051ca g     F .text.itcm	0000007c SDClass::format(int, char, Print&)
200022c8  w    O .data	00000024 vtable for FsFile
0000dc0e  w    F .text.itcm	0000000a _fstat
00003f4a  w    F .text.itcm	0000001e TwoWire::read()
00011144 g     F .text.itcm	00000040 __assert_func
20000b58 g     O .data	000000c8 __mprec_tens
60001df8 g     F .text.code	000000ec usb_init
20005140 g     O .bss	00000004 s6_command_PWM
0000ca1e g     F .text.itcm	00000026 String::String(int, unsigned char)
0000f658 g     F .text.itcm	00000130 __kernel_cos
200037e8 g     O .data	00000004 cutoff_val
200050b0 g     O .bss	00000004 pitch_IMU
00009c26  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00000806  w    F .text.itcm	000000be SDFile::seek(unsigned long long, int)
20004d88 g     O .bss	00000004 __malloc_top_pad
20004604 g     O .bss	00000050 SPI1
200052f4 g     O .bss	00000004 systick_safe_read
0000c998 g     F .text.itcm	0000002a String::move(String&)
20004098 g     O .bss	00000004 AccY_prev
00004054 g     F .text.itcm	0000014c TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
000063fa g     F .text.itcm	000000e4 ExFatFile::truncate()
20003200 g     O .data	00000000 .hidden __dso_handle
00010a34 g     F .text.itcm	0000002c itoa
0000c8ee g     F .text.itcm	0000001c String::changeBuffer(unsigned int)
000138b0 g     F .text.itcm	00000008 _localeconv_r
200037a8 g     O .data	00000004 betaCounts_min
00003bfc g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
0000b748 g     F .text.itcm	00000060 SdSpiArduinoDriver::deactivate()
00014cb8 g     F .text.itcm	000002f4 __sfvwrite_r
0001151c g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
00008f50 g     F .text.itcm	000001e8 FatFormatter::makeFat32()
60002138 g     O .text.progmem	00000062 usb_config_descriptor_480
2000533a g     O .bss	00000001 sbusLostFrame
0000c90a g     F .text.itcm	00000028 String::reserve(unsigned int)
0000b7a8 g     F .text.itcm	0000000a SdSpiArduinoDriver::end()
00007400 g     F .text.itcm	0000003a FatFile::addCluster()
000125f0 g     F .text.itcm	00000024 _sbrk_r
0000a7dc g     F .text.itcm	0000001c SdioCard::type() const
600018c0 g     F .text.code	00000002 startup_default_early_hook
60001654 g     F .text.code	00000030 ResetHandler
0000e9d4 g     F .text.itcm	00000020 usb_serial_getchar
200038d2 g     O .data	00000002 I2Cdev::readTimeout
000004a4  w    F .text.itcm	00000048 SDFile::name()
200052fc g     O .bss	00000008 usb_cdc_line_coding
20003798 g     O .data	00000004 alpha_max
0000cef4 g     F .text.itcm	0000004c digitalWrite
0000f4c0 g     F .text.itcm	0000000e fabsf
20004b80 g     O .bss	00000004 EventResponder::lastYield
000053fc g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00014b78 g     F .text.itcm	0000002c _read_r
00006720  w    F .text.itcm	00000020 Print::write(char const*)
00001e34 g     F .text.itcm	00000030 closeIris()
00000418  w    F .text.itcm	0000003e StreamFile<FsBaseFile, unsigned long long>::read()
00009da4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00006740 g     F .text.itcm	0000002c ExFatFormatter::syncUpcase()
00000294  w    F .text.itcm	00000056 SDFile::setModifyTime(DateTimeFields const&)
000138b8 g     F .text.itcm	000000c6 _fclose_r
20005000 g     O .bss	00000010 extmem_smalloc_pool
20004d80 g     O .bss	00000004 __malloc_max_sbrked_mem
0000a21c g     F .text.itcm	00000056 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
200037d0 g     O .data	00000004 channel_4_fs
0000024e  w    F .text.itcm	0000001a SDFile::position()
0000cf64 g     F .text.itcm	0000007c pinMode
20004f34 g     O .bss	00000004 channel_3_pwm_pre
0000cb08 g     F .text.itcm	00000032 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000014a0 g     F .text.itcm	000004dc getCommands()
0000c4d8 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
0000f788 g     F .text.itcm	000000b0 __kernel_sin
20004fcc g     O .bss	00000004 d_ch1
6000209d  w    O .text.progmem	00000001 _serialEventUSB1_default
600016cc g     F .text.code	00000058 TwoWire::setSDA(unsigned char)
20004984 g     O .bss	00000140 Wire2
6001b400 g     O .text.csf	00000c00 hab_csf
00000090  w    F .text.itcm	00000014 File::peek()
0000976c g     F .text.itcm	000000dc FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
00004eac  w    F .text.itcm	000000ac SDClass::open(char const*, unsigned char)
000151a4 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
2000507c g     O .bss	00000004 m5_command_scaled
0000dc18  w    F .text.itcm	00000004 _isatty
20004b74 g     O .bss	00000004 EventResponder::firstYield
20004f2c g     O .bss	00000004 channel_2_pwm_prev
2000511c g     O .bss	00000004 s1_command_scaled
0000baac g     F .text.itcm	000000a8 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000ee0 g     F .text.itcm	00000038 rollStep()
00000470  w    F .text.itcm	00000032 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
00011e9c g     F .text.itcm	000003d8 _realloc_r
0000064c  w    F .text.itcm	0000001e SDFile::read(void*, unsigned int)
20001c80 g     O .data	00000004 Kd_alphaRoll
00011240 g     F .text.itcm	00000048 __libc_init_array
0000d198 g     F .text.itcm	00000388 dtostrf
000003be  w    F .text.itcm	0000003c SDFile::rewindDirectory()
00003f3e  w    F .text.itcm	0000000c TwoWire::available()
00005c32 g     F .text.itcm	00000012 ExFatFile::open(ExFatVolume*, char const*, int)
0000a720 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
00004c68 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00005fd4 g     F .text.itcm	000000c0 ExFatFile::addDirCluster()
20004f54 g     O .bss	00000004 channel_8_pwm
000039ac g     F .text.itcm	00000034 I2Cdev::readBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00014c50 g     F .text.itcm	00000066 _fputwc_r
0000476c  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
20000b30 g     O .data	00000028 __mprec_bigtens
0000a198  w    F .text.itcm	0000000c SharedSpiCard::readCID(CID*)
0000dc26  w    F .text.itcm	00000004 abort
000042d4 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000e540  w    F .text.itcm	00000008 usb_serial_class::clear()
0000dbd4  w    F .text.itcm	00000030 _sbrk
60017354 g       *ABS*	00000000 _sdataload
00011884 g     F .text.itcm	00000042 __mcmp
2000236c g     O .data	00000030 vtable for SDClass
200031fc g     O .data	00000004 __brkval
2000533f g     O .bss	00000001 usb_cdc_line_rtsdtr
60001f38 g     F .text.code	00000000 _init
0000e744 g     F .text.itcm	00000002 usb_serial_reset
000074c0 g     F .text.itcm	00000022 FatFile::cacheDirEntry(unsigned char)
20005064 g     O .bss	00000004 m2_command_scaled
2000206c g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
0000c8e0 g     F .text.itcm	0000000e String::~String()
00004d8c  w    F .text.itcm	0000005e SDClass::remove(char const*)
000004ec  w    F .text.itcm	00000026 SDFile::close()
0000c9d6 g     F .text.itcm	00000016 String::String(String const&)
00003354 g     F .text.itcm	0000004e biquadFilter_apply(biquadFilter_s*, float)
00000684  w    F .text.itcm	00000040 SDFile::~SDFile()
20005144 g     O .bss	00000004 s6_command_scaled
0000cadc g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
600020d4 g     O .text.progmem	00000062 usb_config_descriptor_12
20005336 g     O .bss	00000001 irisFlag
0000ffd8 g     F .text.itcm	00000690 __kernel_rem_pio2
2000239c g     O .data	00000024 vtable for TwoWire
2000315c g     O .data	00000004 Kd_yaw
0000d858 g     F .text.itcm	00000098 analogWriteFrequency
0000b720 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
20005380 g       .bss	00000000 _ebss
0000af44 g     F .text.itcm	0000008c SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
20004ed8 g     O .bss	00000004 alphaRoll_des
20003150 g     O .data	00000004 GyroErrorZ
20003170 g     O .data	00000004 Kp_roll_angle
60001724 g     F .text.code	00000048 TwoWire::configSCLpin(unsigned char)
00000456  w    F .text.itcm	0000001a StreamFile<FsBaseFile, unsigned long long>::flush()
0000bc9c g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
20004ff4 g     O .bss	00000004 errorOld_alpha
0000ca6a g     F .text.itcm	00000072 String::append(char const*, unsigned int)
0001147c g     F .text.itcm	00000040 __hi0bits
00005368 g     F .text.itcm	00000038 ExFatFile::dirCache(unsigned char, unsigned char)
200040b8 g     O .bss	00000004 GyroZ_prev
000044d8 g     F .text.itcm	00000010 lpi2c3_isr()
00005060 g     F .text.itcm	000000dc SDClass::begin(unsigned char)
00006094 g     F .text.itcm	0000004a ExFatFile::mkdir(ExFatFile*, ExName_t*)
20003830 g     O .data	00000004 iScalePitch
20203080 g       .bss.dma	00000000 _heap_start
20003000 g     O .data	00000001 String::zerotermination
200038a8 g     O .data	00000004 pScaleRoll
20004d50 g     O .bss	00000001 __lock___malloc_recursive_mutex
00003b0c g     F .text.itcm	0000006c MPU6050::getMotion6(short*, short*, short*, short*, short*, short*)
20005130 g     O .bss	00000004 s4_command_PWM
00004c64  w    F .text.itcm	00000002 SDClass::~SDClass()
0000d714 g     F .text.itcm	00000094 quadtimerFrequency
6000204c g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00003bc4 g     F .text.itcm	00000028 MPU6050::getDeviceID()
0000c932 g     F .text.itcm	00000040 String::copy(char const*, unsigned int)
20004d8c g     O .bss	00000138 __sf
00009ef4 g     F .text.itcm	00000096 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00001e18 g     F .text.itcm	0000001c openIris()
0000013c  w    F .text.itcm	00000030 File::~File()
000039e0 g     F .text.itcm	0000004c I2Cdev::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char*)
00000003 g       *ABS*	00000000 _itcm_block_count
0000be2c g     F .text.itcm	000000ca HardwareSerial::write9bit(unsigned long)
2000312c g     O .data	00000004 AccErrorZ
20003ee0 g     O .bss	00000020 endpoint0_transfer_data
200050e4 g     O .bss	00000004 roll_passthru
0000920c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000b89a g     F .text.itcm	00000050 FsCache::prepare(unsigned long, unsigned char)
0000d12c g     F .text.itcm	00000008 operator delete(void*, unsigned int)
0000d9a0 g     F .text.itcm	00000068 pwm_init
00003fe8  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000bdd6 g     F .text.itcm	00000018 HardwareSerial::flush()
20005054 g     O .bss	00000004 iris
0000c8e0 g     F .text.itcm	0000000e String::~String()
6001c000 g       .text.csf	00000000 __text_csf_end
0000f5a8 g     F .text.itcm	00000010 .hidden __math_oflow
20001c8c g     O .data	00000004 Ki_betaPitch
60001c50 g     F .text.code	00000060 usb_pll_start
20004f08 g     O .bss	00000004 channel_10_pwm
000116d4 g     F .text.itcm	000000c0 __pow5mult
00007804 g     F .text.itcm	0000005a FatFile::rmdir()
000044e8 g     F .text.itcm	00000010 lpi2c4_isr()
200037ec g     O .data	00000004 dScaleAlpha
00009692 g     F .text.itcm	0000008e FatPartition::allocateCluster(unsigned long, unsigned long*)
00003fe8  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000f838 g     F .text.itcm	0000020c __ieee754_asinf
0000a562  w    F .text.itcm	00000002 SdioCard::end()
200040c8 g     O .bss	00000004 MagX
20003840 g     O .data	00000004 maxAlphaRoll
00004cec  w    F .text.itcm	00000046 SDClass::exists(char const*)
200037fc g     O .data	00000004 dScaleYaw
20003ec0 g     O .bss	00000020 endpoint0_transfer_ack
20005304 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000e4a0 g     F .text.itcm	00000028 usb_transmit
0000c058 g     F .text.itcm	00000048 HardwareSerial::addToSerialEventsList()
200052e4 g     O .bss	00000004 sineFrequency
0000bc7c g     F .text.itcm	00000020 systick_isr
20004f44 g     O .bss	00000004 channel_4_pwm_prev
200052cc g     O .bss	00000004 servo3
20003164 g     O .data	00000004 Ki_roll_angle
00011294 g     F .text.itcm	00000002 __retarget_lock_release_recursive
2000506c g     O .bss	00000004 m3_command_scaled
20003184 g     O .data	00000010 Serial
20004f1c g     O .bss	00000004 channel_1_pwm_pre
0000c9c2 g     F .text.itcm	00000014 String::operator=(String const&)
00002628 g     F .text.itcm	0000036c Madgwick6DOF(float, float, float, float, float, float, float)
20003838 g     O .data	00000004 iScaleYaw
20000c20 g     O .data	00001048 .hidden __pow_log_data
0000d6cc g     F .text.itcm	00000048 quadtimerWrite
200021e0 g     O .data	00000024 vtable for HardwareSerial
0000e57c  w    F .text.itcm	0000000a usb_serial_class::write(unsigned char)
00009aa8 g     F .text.itcm	00000060 FsBaseFile::openNext(FsBaseFile*, int)
600018c0  w    F .text.code	00000002 startup_early_hook
0000f620 g     F .text.itcm	00000028 .hidden __math_check_oflow
00005cb0 g     F .text.itcm	000000a0 ExFatFile::addCluster()
20004b6c g     O .bss	00000004 FsDateTime::callback2
2000229c  w    O .data	0000002c vtable for File
00009e4c g     F .text.itcm	0000006c SharedSpiCard::readData(unsigned char*, unsigned int)
00004f58  w    F .text.itcm	00000108 SDClass::usedSize()
0000e910 g     F .text.itcm	00000048 usb_serial_peekchar
200037e0 g     O .data	00000004 channel_8_fs
2000513c g     O .bss	00000004 s5_command_scaled
00011ce8 g     F .text.itcm	0000000c __sfp_lock_acquire
00011d00 g     F .text.itcm	00000000 memchr
0000956c g     F .text.itcm	00000126 FatPartition::fatPut(unsigned long, unsigned long)
0000cbd8 g     F .text.itcm	0000029c set_arm_clock
200052ec g     O .bss	00000004 systick_cycle_count
200038bc g     O .data	00000016 usb_string_serial_number_default
00012314 g     F .text.itcm	0000020c _free_r
0000a310 g     F .text.itcm	0000009a SharedSpiCard::erase(unsigned long, unsigned long)
0000a3dc g     F .text.itcm	0000004c SharedSpiCard::writeData(unsigned char, unsigned char const*)
0000197c g     F .text.itcm	000000d8 failSafe()
00009c2e  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011298 g     F .text.itcm	0000000c __locale_mb_cur_max
00013b24 g     F .text.itcm	00000016 _wcsrtombs_r
20004ed0 g     O .bss	00000004 alphaOffset
2000389c g     O .data	00000004 pScaleAlpha
00004b24 g     F .text.itcm	00000008 PWMServo::PWMServo()
20004bbc g     O .bss	00000190 __atexit0
200037b0 g     O .data	00000004 beta_min
200038a0 g     O .data	00000004 pScaleBeta
0000e560  w    F .text.itcm	00000008 usb_serial_class::flush()
200050bc g     O .bss	00000004 pitch_passthru
000067c0 g     F .text.itcm	00000098 ExFatFormatter::writeUpcase(unsigned long)
2000409c g     O .bss	00000004 AccZ
20004ff8 g     O .bss	00000004 errorOld_beta
0000c31c g     F .text.itcm	00000010 IRQHandler_Serial5
20003778 g     O .data	00000004 __malloc_sbrk_base
0000e550  w    F .text.itcm	00000008 usb_serial_class::read()
00008b44 g     F .text.itcm	0000015c FatFile::remove()
0000f4d8 g     F .text.itcm	00000080 sin
20004efc g     O .bss	00000004 ch2_CutCounter
0000dc1c  w    F .text.itcm	00000006 _lseek
0000dc22  w    F .text.itcm	00000004 __cxa_pure_virtual
000033a8 g     F .text.itcm	00000320 anglePID()
00011794 g     F .text.itcm	000000f0 __lshift
00007d68 g     F .text.itcm	000000d2 FatFile::mkdir(FatFile*, char const*, bool)
0000e470 g     F .text.itcm	00000030 usb_prepare_transfer
00009c32  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
200050e0 g     O .bss	00000004 roll_des
0000da4c g     F .text.itcm	00000188 unused_interrupt_vector
20005308 g     O .bss	00000004 usb_timer0_callback
60001cb0 g     F .text.code	00000148 tempmon_init
0000841c g     F .text.itcm	00000128 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
20005058 g     O .bss	00000004 m1_command_PWM
0000edb8  w    F .text.itcm	00000002 serialEvent()
20003790 g     O .data	00000004 alphaCounts_max
200037c4 g     O .data	00000004 channel_1_fs
0001370c g     F .text.itcm	00000088 __register_exitproc
00009d38 g     F .text.itcm	0000006c DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0000c9ec g     F .text.itcm	00000010 String::operator=(String&&)
00005b4c g     F .text.itcm	000000e6 ExFatFile::open(ExFatFile*, char const*, int)
00010944 g     F .text.itcm	0000008a strncmp
0000835c g     F .text.itcm	000000c0 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
000060de g     F .text.itcm	000000ec ExFatFile::mkdir(ExFatFile*, char const*, bool)
00008e34 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000caec g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
0000e970 g     F .text.itcm	00000064 usb_serial_flush_input
200050cc g     O .bss	00000004 q3
0000727a g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
200050c0 g     O .bss	00000004 prev_time
00011578 g     F .text.itcm	0000015c __multiply
0000eee8 g     F .text.itcm	0000057c pow
0000ebac g     F .text.itcm	00000018 usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00009f8c g     F .text.itcm	00000190 SharedSpiCard::begin(SdSpiConfig)
000109d0 g     F .text.itcm	00000064 strncpy
20004d58 g     O .bss	00000028 __malloc_current_mallinfo
2000214c g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
00011a1c g     F .text.itcm	000000d4 __d2b
200037f4 g     O .data	00000004 dScalePitch
0000a428 g     F .text.itcm	0000002e SharedSpiCard::writeData(unsigned char const*)
20004b84 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
0000a55a  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60001ee4 g     F .text.code	00000054 _reboot_Teensyduino_
200040d8 g     O .bss	00000004 MagZ
0000ad48  w    F .text.itcm	0000000e SdioCard::~SdioCard()
600018c2 g     F .text.code	00000002 startup_default_middle_hook
200050c4 g     O .bss	00000004 q1
00011b68 g     F .text.itcm	00000018 realloc
00009cdc g     F .text.itcm	0000005c DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a156 g     F .text.itcm	00000036 SharedSpiCard::readRegister(unsigned char, void*)
20004f50 g     O .bss	00000004 channel_7_pwm
0000acdc g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
0000c6a4 g     F .text.itcm	000000b0 Stream::parseFloat(char)
0000df24 g     F .text.itcm	000004c0 usb_isr
00011228 g     F .text.itcm	0000000c __cxa_atexit
20003834 g     O .data	00000004 iScaleRoll
00003d58 g     F .text.itcm	00000164 SBUS::read(unsigned short*, bool*, bool*)
000054cc g     F .text.itcm	00000196 ExFatFile::read(void*, unsigned int)
00004b2c g     F .text.itcm	0000009c PWMServo::attach(int, int, int)
00014954 g     F .text.itcm	00000024 _close_r
0000a4da  w    F .text.itcm	00000042 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0000a1d6 g     F .text.itcm	00000028 SharedSpiCard::readStop()
000003fa  w    F .text.itcm	0000001e SDFile::peek()
0000b84c g     F .text.itcm	0000004e FsCache::sync()
00001ce8 g     F .text.itcm	00000130 getJoyAngle()
200052e8 g     O .bss	00000004 sineTime
20005314 g     O .bss	00000004 yaw_PID
200045b4 g     O .bss	00000050 SPI
00010fec g     F .text.itcm	00000060 memcmp
20002274  w    O .data	00000028 vtable for usb_serial_class
0000b7ea g     F .text.itcm	00000014 SdSpiArduinoDriver::send(unsigned char)
20003160 g     O .data	00000004 Ki_pitch_angle
0000c972 g     F .text.itcm	00000026 String::String(char const*)
0001128c g     F .text.itcm	00000002 __retarget_lock_close_recursive
20003154 g     O .data	00000004 Kd_pitch_angle
0000b5f0 g     F .text.itcm	00000008 sdCsWrite(unsigned char, bool)
200052c4 g     O .bss	00000004 servo1
0000c64c g     F .text.itcm	00000030 Stream::timedPeek()
200052bc g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20004654 g     O .bss	00000050 SPI2
20005120 g     O .bss	00000004 s2_command_PWM
2000313c g     O .data	00000004 B_mag
00013980 g     F .text.itcm	000000cc __swsetup_r
00005e00 g     F .text.itcm	00000062 ExFatFile::rmdir()
2000505c g     O .bss	00000004 m1_command_scaled
0000a1a4 g     F .text.itcm	00000032 SharedSpiCard::readStart(unsigned long)
20005118 g     O .bss	00000004 s1_command_PWM
20003370 g     O .data	00000408 __malloc_av_
20004bb8 g     O .bss	00000004 __atexit
0000066a  w    F .text.itcm	0000001a SDFile::flush()
00012548 g     F .text.itcm	00000022 __sread
20005343 g     O .bss	00000001 useSerialAngleCommands
00003ebc g     F .text.itcm	00000044 SBUS::scaleBias(unsigned char)
20003138 g     O .data	00000004 B_madgwick
2000504c g     O .bss	00000004 integralOld_roll
0000ec10 g     F .text.itcm	000000a0 usb_serial_flush_output
00011360 g     F .text.itcm	0000000c __malloc_lock
00006e20 g     F .text.itcm	000000c4 ExFatFile::getName8(char*, unsigned int)
0000b900 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
20005048 g     O .bss	00000004 integralOld_pitch
20003c00 g     O .data	000002c0 _VectorsRam
0000b7fe g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00009ec4 g     F .text.itcm	00000030 SharedSpiCard::waitReady(unsigned short)
00008cd0 g     F .text.itcm	000000b0 FatFormatter::initFatDir(unsigned char, unsigned long)
00014aa8 g     F .text.itcm	00000054 _fflush_r
00001e64 g     F .text.itcm	00000792 getDataString()
20003854 g     O .data	00000004 maxRoll
00011af0 g     F .text.itcm	00000078 _calloc_r
200037e4 g     O .data	00000004 channel_9_fs
000047a4 g     F .text.itcm	00000270 SPIClass::begin()
000108a8 g     F .text.itcm	0000009c __utoa
200037bc g     O .data	00000004 channel_12_fs
00008768 g     F .text.itcm	00000300 FatFile::open(FatFile*, FatLfn_t*, int)
200038d7 g     O .data	00000001 yield_active_check_flags
00005f78 g     F .text.itcm	0000005c ExFatFile::sync()
00011290 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
20005341 g     O .bss	00000001 usb_high_speed
00007e3a g     F .text.itcm	00000202 FatFile::rename(FatFile*, char const*)
0000a944 g     F .text.itcm	0000004c SdioCard::isBusy()
00011184 g     F .text.itcm	000000a4 memset
0000f4d0 g     F .text.itcm	00000006 __ieee754_sqrtf
0000cfe0 g     F .text.itcm	00000010 main
20004d84 g     O .bss	00000004 __malloc_max_total_mem
20003134 g     O .data	00000004 B_gyro
00006f48 g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00011288 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
200040ac g     O .bss	00000004 GyroY
200052c0 g     O .bss	00000004 serialInputValue
0000a456 g     F .text.itcm	00000048 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
200037d4 g     O .data	00000004 channel_5_fs
000064e0 g     F .text.itcm	00000240 ExFatFile::write(void const*, unsigned int)
20004f38 g     O .bss	00000004 channel_3_pwm_prev
0000b964 g     F .text.itcm	000000aa lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
00007b8c g     F .text.itcm	00000044 FatFile::dirEntry(DirFat_t*)
000001e2  w    F .text.itcm	0000006c SDFile::available()
000125cc g     F .text.itcm	00000008 __sclose
0000e4ec g     F .text.itcm	00000054 usb_init_serialnumber
20004f28 g     O .bss	00000004 channel_2_pwm_pre
60001fac g       .text.code	00000000 __init_array_end
00013c68 g     F .text.itcm	00000cec _dtoa_r
00010a8c g     F .text.itcm	00000560 _malloc_r
00009cbe g     F .text.itcm	0000000c DedicatedSpiCard::readSector(unsigned long, unsigned char*)
2000532d g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
20004088 g     O .bss	00000004 AccErrorY
000125d4 g     F .text.itcm	0000001a __ascii_wctomb
00000282  w    F .text.itcm	00000012 SDFile::isOpen()
0000998a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
20004bb0 g     O .bss	00000004 FatVolume::m_cwv
20002430  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00003ad8 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
00004a14 g     F .text.itcm	0000007e SPIClass::transfer(void const*, void*, unsigned int)
0000ce74 g     F .text.itcm	00000054 micros
20005080 g     O .bss	00000004 m6_command_PWM
20004f20 g     O .bss	00000004 channel_1_pwm_prev
20003850 g     O .data	00000004 maxPitch
00005e64 g     F .text.itcm	00000114 ExFatFile::syncDir()
00003adc g     F .text.itcm	00000018 MPU6050::setFullScaleGyroRange(unsigned char)
20003800 g     O .data	00000014 dataFile
20003128 g     O .data	00000004 AccErrorX
000044f8 g     F .text.itcm	000000a0 TwoWire::setClock(unsigned long)
00012274 g     F .text.itcm	000000a0 _malloc_trim_r
0001505c g     F .text.itcm	00000106 _wcsnrtombs_l
0000e9f4 g     F .text.itcm	000001b8 usb_serial_write
600020d0 g     O .text.progmem	00000004 string0
200040a8 g     O .bss	00000004 GyroX_prev
600018c4  w    F .text.code	00000002 startup_late_hook
2000382c g     O .data	00000004 iScaleBeta
0000d5e4 g     F .text.itcm	000000e8 flexpwmFrequency
0000dec8 g     F .text.itcm	00000034 usb_start_sof_interrupts
0000f608 g     F .text.itcm	00000012 .hidden __math_check_uflow
0000a49e g     F .text.itcm	00000016 DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000e558  w    F .text.itcm	00000008 usb_serial_class::available()
20004f0c g     O .bss	00000004 channel_11_pwm
6000209e  w    O .text.progmem	00000001 _serialEvent_default
000079fc g     F .text.itcm	000000a4 FatFile::sync()
2000383c g     O .data	00000004 i_limit
00009138 g     F .text.itcm	000000d4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00004e5a  w    F .text.itcm	00000052 SDClass::mkdir(char const*)
200037f0 g     O .data	00000004 dScaleBeta
20000000 g     O .data	00000280 endpoint_queue_head
2000408c g     O .bss	00000004 AccX
600020a0  w    O .text.progmem	00000016 usb_string_product_name
0000cec8 g     F .text.itcm	0000002c delay
000053d8 g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
000151a0 g     F .fini	00000000 _fini
0000c9fc g     F .text.itcm	00000022 String::operator=(char const*)
00001be0 g     F .text.itcm	0000006c loopRate(int)
00003f82 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00009e0e g     F .text.itcm	0000003e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
200050b8 g     O .bss	00000004 pitch_des
200040bc g     O .bss	00000004 MagErrorX
00005c44 g     F .text.itcm	00000030 ExFatFile::openNext(ExFatFile*, int)
20004f14 g     O .bss	00000004 channel_13_pwm
00007aa0 g     F .text.itcm	00000010 FatFile::close()
0000dc2a g     F .text.itcm	00000008 Panic_Temp_isr
000006c4  w    F .text.itcm	00000048 SDFile::~SDFile()
20004f84 g     O .bss	00000024 dTermFilter_roll
20001c88 g     O .data	00000004 Ki_alphaRoll
20005068 g     O .bss	00000004 m3_command_PWM
00007c10 g     F .text.itcm	00000158 FatFile::mkdir(FatFile*, FatLfn_t*)
00015164 g     F .text.itcm	00000024 _wcsnrtombs_r
0000a7f8  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00000604  w    F .text.itcm	0000001e StreamFile<FsBaseFile, unsigned long long>::peek()
000000e0  w    F .text.itcm	00000022 File::write(unsigned char)
0001265c g     F .text.itcm	0000002c _write_r
0000da08 g     F .text.itcm	0000001c analogWriteRes
200052d8 g     O .bss	00000004 servo6
20003130 g     O .data	00000004 B_accel
200040e0 g     O .bss	000004d4 SD
0000a998 g     F .text.itcm	000000d0 SdioCard::erase(unsigned long, unsigned long)
0000c972 g     F .text.itcm	00000026 String::String(char const*)
2000531c g     O .bss	00000004 yaw_passthru
0000f648 g     F .text.itcm	0000000c nanf
2000378c g     O .data	00000004 _impure_ptr
20002348  w    O .data	00000024 vtable for Stream
00005662 g     F .text.itcm	0000002c ExFatFile::peek()
20004f4c g     O .bss	00000004 channel_6_pwm
00014978 g     F .text.itcm	00000130 __sflush_r
00010790 g     F .text.itcm	0000010c scalbn
200021bc  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
200037d8 g     O .data	00000004 channel_6_fs
20004704 g     O .bss	00000140 Wire
00000a08 g     F .text.itcm	00000334 getIMUdata()
0000070c  w    F .text.itcm	0000001c SDFile::write(void const*, unsigned int)
0000f4bc g     F .text.itcm	00000004 atan2f
00003b78 g     F .text.itcm	00000010 MPU6050::setSleepEnabled(bool)
00009bf8 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00012614 g     F .text.itcm	00000046 _fwalk_sglue
0000a708 g     F .text.itcm	0000000c SdioCard::errorCode() const
20004ee4 g     O .bss	00000004 betaOffset
20005084 g     O .bss	00000004 m6_command_scaled
00007b7a g     F .text.itcm	00000012 FatFile::open(FatVolume*, char const*, int)
00000728  w    F .text.itcm	0000001c StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60001f90 g       .text.code	00000000 __preinit_array_end
20005160 g     O .bss	0000013c sbus
20004edc g     O .bss	00000004 beta
200038b0 g     O .data	00000004 print_counterSD
000070ca g     F .text.itcm	0000003a ExFatPartition::dirCache(DirPos_t*, unsigned char)
00009dbe g     F .text.itcm	00000028 SharedSpiCard::spiStart()
00013794 g     F .text.itcm	0000002a __ascii_mbtowc
2000314c g     O .data	00000004 GyroErrorY
20004f30 g     O .bss	00000004 channel_3_pwm
200037a4 g     O .data	00000004 betaCounts_max
0000defc g     F .text.itcm	00000028 usb_stop_sof_interrupts
00003f68  w    F .text.itcm	00000018 TwoWire::peek()
20004ef0 g     O .bss	00000004 blink_counter
0000befe g     F .text.itcm	00000158 HardwareSerial::IRQHandler()
00003f80  w    F .text.itcm	00000002 TwoWire::flush()
00002d70 g     F .text.itcm	00000560 setup
20002f6c g     O .data	00000084 usb_descriptor_list
0000a990 g     F .text.itcm	00000008 SdioCard::status()
20005074 g     O .bss	00000004 m4_command_scaled
200052d0 g     O .bss	00000004 servo4
00007bf0 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
000001e0  w    F .text.itcm	00000002 Print::flush()
200037dc g     O .data	00000004 channel_7_fs
20003828 g     O .data	00000004 iScaleAlpha
200037b4 g     O .data	00000004 channel_10_fs
00004d32  w    F .text.itcm	0000005a SDClass::rmdir(char const*)
0000754a g     F .text.itcm	000001aa FatFile::read(void*, unsigned int)
00003b88 g     F .text.itcm	00000018 MPU6050::setClockSource(unsigned char)
000074e2 g     F .text.itcm	0000003c FatFile::openRoot(FatVolume*)
20004b70 g     O .bss	00000004 ExFatVolume::m_cwv
00001a54 g     F .text.itcm	0000013c commandMotors()
20068000 g       .text.csf	00000000 _estack
00009b08 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
000000b4  w    F .text.itcm	0000002c File::read()
0000ebc4 g     F .text.itcm	0000004c usb_serial_write_buffer_free
200037c0 g     O .data	00000004 channel_13_fs
20003794 g     O .data	00000004 alphaCounts_min
00003bec g     F .text.itcm	00000010 MPU6050::testConnection()
6000176c g     F .text.code	0000005c TwoWire::setSCL(unsigned char)
20003780 g     O .data	0000000c __sglue
0000e748 g     F .text.itcm	000000ec usb_serial_configure
00003fac g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00000104  w    F .text.itcm	00000038 File::~File()
200038b4 g     O .data	00000004 q0
20004ba8 g     O .bss	00000008 PWMServo::attachedpins
0000c434  w    F .text.itcm	00000018 _write
20003ec0 g       .data	00000000 _edata
000071c2 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
000008c4 g     F .text.itcm	000000cc controlMixer()
20005070 g     O .bss	00000004 m4_command_PWM
20005334 g     O .bss	00000001 external_psram_size
0000a7f8  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000b918 g     F .text.itcm	0000004c FsName::get16()
2000512c g     O .bss	00000004 s3_command_scaled
00009da4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a272 g     F .text.itcm	0000006a DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20005138 g     O .bss	00000004 s5_command_PWM
00009cca g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
00006ee4 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
0000743c g     F .text.itcm	00000084 FatFile::addDirCluster()
00014ba4 g     F .text.itcm	000000aa __fputwc
0000e568  w    F .text.itcm	00000008 usb_serial_class::availableForWrite()
20005335 g     O .bss	00000001 failureFlag
000044c8 g     F .text.itcm	00000010 lpi2c1_isr()
00009418 g     F .text.itcm	00000036 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
20001c90 g     O .data	00000004 Kp_alphaRoll
20004f10 g     O .bss	00000004 channel_12_pwm
0000bdf0 g     F .text.itcm	0000003c nvic_execution_priority()
20004fdc g     O .bss	00000004 dt
0000d134 g     F .text.itcm	00000064 ultoa
200040dc g     O .bss	00000004 MagZ_prev
00004c64  w    F .text.itcm	00000002 SDClass::~SDClass()
600017c8 g     F .text.code	00000044 TwoWire::begin()
20001c84 g     O .data	00000004 Kd_betaPitch
00000f50 g     F .text.itcm	00000308 getDesState()
00009a34 g     F .text.itcm	00000074 FsBaseFile::open(FsVolume*, char const*, int)
00003c9c g     F .text.itcm	000000bc SBUS::parse()
20004fd8 g     O .bss	00000004 d_ch4
0001256c g     F .text.itcm	0000003e __swrite
0000d124 g     F .text.itcm	00000008 operator new(unsigned int)
0000bc20 g     F .text.itcm	00000054 EventResponder::runFromInterrupt()
2000377c g     O .data	00000004 __malloc_trim_threshold
0000e548  w    F .text.itcm	00000008 usb_serial_class::peek()
20005318 g     O .bss	00000004 yaw_des
200052e0 g     O .bss	00000004 servoLoopCounter
20005124 g     O .bss	00000004 s2_command_scaled
00011234 g     F .text.itcm	0000000a fcvtf
0000a55e  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00009de6 g     F .text.itcm	00000028 SharedSpiCard::spiStop()
20005030 g     O .bss	00000010 filePrefix
20003148 g     O .data	00000004 GyroErrorX
00012520 g     F .text.itcm	00000028 fiprintf
2000316c g     O .data	00000004 Kp_pitch_angle
200040d4 g     O .bss	00000004 MagY_prev
20004f58 g     O .bss	00000004 channel_9_pwm
00012700 g     F .text.itcm	00000f8c _vfiprintf_r
20005310 g     O .bss	00000004 yaw_IMU
20004ee0 g     O .bss	00000004 betaCounts
000118c8 g     F .text.itcm	00000154 __mdiff
0000a768 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
0000f598 g     F .text.itcm	00000010 .hidden __math_uflow
0000bd52 g     F .text.itcm	00000084 HardwareSerial::read()
200020dc g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
00007174 g     F .text.itcm	0000004e ExFatPartition::dirSeek(DirPos_t*, unsigned long)
000046a4 g     F .text.itcm	000000c8 _spi_dma_rxISR1()
000092d0 g     F .text.itcm	00000108 FatFile::getName8(char*, unsigned int)
20003008 g     O .data	00000120 _impure_data
00005774 g     F .text.itcm	000003d8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00011cf4 g     F .text.itcm	0000000c __sfp_lock_release
0000fb90 g     F .text.itcm	000001ac atanf
0000acd4 g     F .text.itcm	00000008 SdioCard::writeStop()
00003998 g     F .text.itcm	00000014 I2Cdev::readByte(unsigned char, unsigned char, unsigned char*, unsigned short)
2000384c g     O .data	00000004 maxFreq
200040b0 g     O .bss	00000004 GyroY_prev
00009eb8 g     F .text.itcm	0000000c SharedSpiCard::readData(unsigned char*)
000053a0 g     F .text.itcm	00000014 ExFatFile::close()
20002518 g     O .data	00000101 _ctype_
20004ecc g     O .bss	00000004 alphaCounts
0000dc04  w    F .text.itcm	00000004 _read
60001f90 g       .text.code	00000000 __init_array_start
200038b8 g     O .data	00000004 sweepTime
0000cb3c g     F .text.itcm	0000009c analogRead
20003140 g     O .data	00000004 F_BUS_ACTUAL
0000d968 g     F .text.itcm	00000038 quadtimer_init
20004f04 g     O .bss	00000004 ch4_CutCounter
0000676c g     F .text.itcm	0000003a ExFatFormatter::writeUpcaseByte(unsigned char)
00004dea  w    F .text.itcm	00000070 SDClass::rename(char const*, char const*)
20004f00 g     O .bss	00000004 ch3_CutCounter
20002b18 g     O .data	0000002a pin_to_channel
20003180 g     O .data	00000004 MagScaleZ
00003f00 g     F .text.itcm	00000014 SBUS::setEndPoints(unsigned char, unsigned short, unsigned short)
00013a4c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00009da6  w    F .text.itcm	0000000a SharedSpiCard::end()
00011dc0 g     F .text.itcm	000000dc strlen
0000751e g     F .text.itcm	0000002c FatFile::openCluster(FatFile*)
200052c8 g     O .bss	00000004 servo2
00007760 g     F .text.itcm	000000a4 FatFile::seekSet(unsigned long)
600020a0 g     O .text.progmem	00000016 usb_string_product_name_default
00001b90 g     F .text.itcm	0000004c throttleCut()
20004090 g     O .bss	00000004 AccX_prev
0000a778 g     F .text.itcm	00000064 SdioCard::sectorCount()
00004b24 g     F .text.itcm	00000008 PWMServo::PWMServo()
00007938 g     F .text.itcm	000000c4 FatFile::openNext(FatFile*, int)
200040b4 g     O .bss	00000004 GyroZ
20004eec g     O .bss	00000004 betaPitch_des
600018c2  w    F .text.code	00000002 startup_middle_hook
0000c3cc g     F .text.itcm	0000004a Print::print(String const&)
200023c0 g     O .data	00000070 vtable for SdioCard
200050b4 g     O .bss	00000004 pitch_PID
000093d8 g     F .text.itcm	00000008 FatFile::getName(char*, unsigned int)
00000990 g     F .text.itcm	00000078 IMUinit()
600018ca g     F .text.code	000000f2 configure_cache
0000a556  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000f464 g     F .text.itcm	00000058 asinf
200037b8 g     O .data	00000004 channel_11_fs
0000c760 g     F .text.itcm	00000180 breakTime(unsigned long, DateTimeFields&)
0000a18c  w    F .text.itcm	0000000c SharedSpiCard::readCSD(csd_t*)
0000513c  w    F .text.itcm	0000008e SdBase<FsVolume, FsFormatter>::restart()
0000b450 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
0000b5f8 g     F .text.itcm	00000128 SdSpiArduinoDriver::activate()
0000c0a0 g     F .text.itcm	0000027c HardwareSerial::begin(unsigned long, unsigned short)
20004ed4 g     O .bss	00000004 alphaRoll
60001f90 g       .text.code	00000000 __preinit_array_start
0000e4c8 g     F .text.itcm	00000020 usb_receive
00006ffa g     F .text.itcm	000000d0 ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
20004ec8 g     O .bss	00000004 alpha
200040c4 g     O .bss	00000004 MagErrorZ
000114bc g     F .text.itcm	00000060 __lo0bits
200052dc g     O .bss	00000004 servo7
0000714c g     F .text.itcm	00000028 ExFatPartition::chainSize(unsigned long)
0000785e g     F .text.itcm	000000da FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
0001c000 g       *ABS*	00000000 _flashimagelen
2000529c g     O .bss	00000020 sbusChannels
20005339 g     O .bss	00000001 sbusFailSafe
0000803c g     F .text.itcm	000000fc FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
6000209f g     O .text.progmem	00000001 _serialEvent5_default
0000a1fe g     F .text.itcm	0000001e SharedSpiCard::syncDevice()
0001089c g     F .text.itcm	0000000a __aeabi_atexit
20004fd4 g     O .bss	00000004 d_ch3
0000da24 g     F .text.itcm	00000024 rtc_get
00005d50 g     F .text.itcm	000000b0 ExFatFile::remove()
70000000 g       .bss.extram	00000000 _extram_start
0000bc74 g     F .text.itcm	00000008 pendablesrvreq_isr
00004c1e  w    F .text.itcm	00000046 SDClass::totalSize()
00003f14 g     F .text.itcm	0000002a SBUS::begin()
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20003204 g     O .data	0000016c __global_locale
2000379c g     O .data	00000004 alpha_min
20003168 g     O .data	00000004 Ki_yaw
0000afd0 g     F .text.itcm	000003b0 SdioCard::begin(SdioConfig)
20005333 g     O .bss	00000001 doneWithSetup
000053b4 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000e834 g     F .text.itcm	000000dc usb_serial_read
20004d54 g     O .bss	00000001 __lock___sfp_recursive_mutex
20004f40 g     O .bss	00000004 channel_4_pwm_pre
20005326 g     O .bss	00000001 SD_is_present
0000c44c g     F .text.itcm	0000008a Print::printNumber(unsigned long, unsigned char, unsigned char)
20004ffc g     O .bss	00000004 errorOld_yaw
0000e428 g     F .text.itcm	00000048 usb_config_tx
0000dc08  w    F .text.itcm	00000006 _close
0000944e g     F .text.itcm	0000011e FatPartition::fatGet(unsigned long, unsigned long*)
00010a7c g     F .text.itcm	00000010 free
20005148 g     O .bss	00000004 s7_command_PWM
0000388c g     F .text.itcm	0000010c I2Cdev::readBytes(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00006dd4 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
000113d8 g     F .text.itcm	000000a4 __multadd
2000317c g     O .data	00000004 MagScaleY
000113c4 g     F .text.itcm	00000012 _Bfree
00000268  w    F .text.itcm	0000001a SDFile::size()
0000fa44 g     F .text.itcm	0000014c __ieee754_atan2f
00009236 g     F .text.itcm	00000098 FatFile::getSFN(char*, unsigned int)
00000684  w    F .text.itcm	00000040 SDFile::~SDFile()
200038bc  w    O .data	00000016 usb_string_serial_number
200037c8 g     O .data	00000004 channel_2_fs
0000b4bc g     F .text.itcm	000000b0 SdioCard::readSector(unsigned long, unsigned char*)
0000a744 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


