
/home/james/Documents/dRehmFlight/Versions/dRehmFlight_rip/build/dRehmFlight_rip.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001fac l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00015860 l    d  .fini	00000000 .fini
00015864 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20003ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001b8d4 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001860 l     F .text.code	0000002c flexspi2_command
6000188c l     F .text.code	00000034 flexspi2_psram_id
60001400 l     F .text.code	00000254 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
000044c8 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 analog.c
200052fd l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
2000511c l     O .bss	00000004 s_hotCount
20005120 l     O .bss	00000004 s_hotTemp
20005124 l     O .bss	00000004 s_hot_ROOM
20005128 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000dbc8 l     F .text.itcm	000000a8 endpoint0_transmit
0000dc70 l     F .text.itcm	000000ac endpoint0_receive
0000dd1c l     F .text.itcm	00000088 schedule_transfer
0000dda4 l     F .text.itcm	00000036 run_callbacks
0000ddda l     F .text.itcm	0000001c usb_endpoint_config
20004fdc l     O .bss	00000008 endpoint0_buffer
20004fe4 l     O .bss	00000004 endpoint0_notify_mask
20004080 l     O .bss	00000008 endpoint0_setupdata
20004fe8 l     O .bss	00000004 endpointN_notify_mask
2000509c l     O .bss	00000008 reply_buffer
20005307 l     O .bss	00000001 sof_usage
2000530e l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20005064 l     O .bss	00000000 object.0
60001f90 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 GlobalVariables.cpp
0000016c l     F .text.itcm	00000074 _GLOBAL__sub_I_dt
00000000 l    df *ABS*	00000000 dRehmFlight_rip.ino.cpp
00003110 l     F .text.itcm	00000084 _GLOBAL__sub_I_mpu6050
00000000 l    df *ABS*	00000000 SPI.cpp
00004a0c l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 SD.cpp
0000521c l     F .text.itcm	0000007c _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
0000c25c l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial5
20004ac8 l     O .bss	00000040 rx_buffer5
20004b08 l     O .bss	00000028 tx_buffer5
200032d8 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
20003958 l     O .data	00000012 device_descriptor
200039a0 l     O .data	00000028 microsoft_os_compatible_id_desc
200039c8 l     O .data	00000012 microsoft_os_string_desc
6000219c l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 filter.cpp
00000000 l    df *ABS*	00000000 pidController.cpp
00000000 l    df *ABS*	00000000 I2Cdev.cpp
00000000 l    df *ABS*	00000000 MPU6050.cpp
00000000 l    df *ABS*	00000000 SBUS.cpp
20004ac0 l     O .bss	00000004 guard variable for SBUS::parse()::_sbusTime
20004bb0 l     O .bss	00000004 SBUS::parse()::_sbusTime
00000000 l    df *ABS*	00000000 PWMServo.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00005ba4 l     F .text.itcm	0000003c exFatDirChecksum(unsigned char const*, unsigned short)
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00008bd0 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000a494 l     F .text.itcm	0000002c sdIrs()
0000a4c0 l     F .text.itcm	00000020 gpioMux(unsigned char)
0000a4e0 l     F .text.itcm	00000018 isBusyCommandComplete()
0000a4f8 l     F .text.itcm	00000010 isBusyCommandInhibit()
0000a508 l     F .text.itcm	00000014 isBusyDat()
0000a51c l     F .text.itcm	0000000c isBusyDMA()
0000a528 l     F .text.itcm	00000014 isBusyFifoRead()
0000a53c l     F .text.itcm	00000014 isBusyFifoWrite()
0000a550 l     F .text.itcm	00000018 isBusyTransferComplete()
0000a568 l     F .text.itcm	000000d0 setSdclk(unsigned long)
0000a72c l     F .text.itcm	00000024 waitTimeout(bool (*)())
0000a750 l     F .text.itcm	0000007c cardCommand(unsigned long, unsigned long)
0000a7cc l     F .text.itcm	00000074 readReg16(unsigned long, void*)
0000a840 l     F .text.itcm	00000024 statusCMD13()
0000a864 l     F .text.itcm	00000010 isBusyCMD13()
0000a998 l     F .text.itcm	00000060 waitTransferComplete()
0000aa8c l     F .text.itcm	00000038 yieldTimeout(bool (*)())
0000aac4 l     F .text.itcm	00000034 waitDmaStatus()
0000aaf8 l     F .text.itcm	00000090 cardCMD6(unsigned long, unsigned char*)
0000ab88 l     F .text.itcm	0000007c transferStop()
0000ac88 l     F .text.itcm	000000b0 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
200052f3 l     O .bss	00000001 m_initDone
20004ac4 l     O .bss	00000004 m_sdClkKhz
200052f4 l     O .bss	00000001 m_version2
20004b30 l     O .bss	00000004 m_errorLine
200052f5 l     O .bss	00000001 m_highCapacity
200052f6 l     O .bss	00000001 m_transferActive
20004b34 l     O .bss	00000010 m_cid
20004b44 l     O .bss	00000010 m_csd
20004b54 l     O .bss	00000004 m_ocr
20004b58 l     O .bss	00000004 m_rca
20004b5c l     O .bss	00000004 m_busyFcn
200052f7 l     O .bss	00000001 m_dmaBusy
20004b60 l     O .bss	00000004 m_irqstat
20003a18 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0000b81c l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001e70 l     O .data	0000012c lookupTable
20001f9c l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20002070 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000e4b8 l     F .text.itcm	0000009c usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000e554 l     F .text.itcm	0000006c rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000e5c0 l     F .text.itcm	000000b4 rx_event
200050b4 l     O .bss	00000004 rx_available
200050b8 l     O .bss	00000010 rx_count
20005303 l     O .bss	00000001 rx_head
200050c8 l     O .bss	00000010 rx_index
200050d8 l     O .bss	00000009 rx_list
200052ec l     O .bss	00000002 rx_packet_size
20005304 l     O .bss	00000001 rx_tail
20003f00 l     O .bss	00000100 rx_transfer
20005308 l     O .bss	00000001 transmit_previous_timeout
200052ee l     O .bss	00000002 tx_available
20005309 l     O .bss	00000001 tx_head
2000530a l     O .bss	00000001 tx_noautoflush
200052f0 l     O .bss	00000002 tx_packet_size
20004000 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
200052fa l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-wf_asin.o
00000000 l    df *ABS*	00000000 libm_a-wf_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_fabs.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-sinf.o
00000000 l    df *ABS*	00000000 libm_a-cosf.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
0000f7cc l     F .text.itcm	00000018 with_errnof
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
0000f888 l     F .text.itcm	00000018 with_errno
0000f8a0 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-ef_asin.o
00000000 l    df *ABS*	00000000 libm_a-ef_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_atan.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00012228 l     F .text.itcm	00000018 stdio_exit_handler
00012240 l     F .text.itcm	00000040 cleanup_stdio
00012280 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00012d48 l     F .text.itcm	00000076 __sprint_r.part.0
00013d4c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
000141fc l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 libm_a-sincosf_data.o
00000000 l    df *ABS*	00000000 UserVariables.cpp
00000000 l    df *ABS*	00000000 MPU9250.cpp
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00015848 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00015850 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00015858 l     F .text.itcm	00000008 ___init_veneer
60001f48 l     F .text.code	00000008 ___ZN7TwoWire8setClockEm_veneer
60001f50 l     F .text.code	00000008 __set_arm_clock_veneer
60001f58 l     F .text.code	00000008 __pwm_init_veneer
60001f60 l     F .text.code	00000008 __main_veneer
60001f68 l     F .text.code	00000008 __delay_veneer
60001f70 l     F .text.code	00000008 __sm_set_pool_veneer
60001f78 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001f80 l     F .text.code	00000008 ____libc_init_array_veneer
60001f88 l     F .text.code	00000008 __memset_veneer
00002b9c g     F .text.itcm	00000010 radioSetup()
000002ea  w    F .text.itcm	0000006a SDFile::getModifyTime(DateTimeFields&)
0000ba84 g     F .text.itcm	000000cc toUpcase(unsigned short)
0000e888 g     F .text.itcm	00000018 usb_serial_available
0000c974 g     F .text.itcm	00000026 String::String(float, unsigned char)
200039dc g     O .data	00000004 minFreq
000019b4 g     F .text.itcm	00000060 loopBlink()
000151e8 g     F .text.itcm	00000024 _isatty_r
00004af8 g     F .text.itcm	00000056 PWMServo::write(int)
0001194c g     F .text.itcm	000000ba strcpy
0000c94e g     F .text.itcm	00000026 String::String(int, unsigned char)
00003b74 g     F .text.itcm	00000058 SBUS::~SBUS()
00009310 g     F .text.itcm	00000038 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
2000500c g     O .bss	00000010 fileExtension
600018c4 g     F .text.code	00000002 startup_default_late_hook
00010998 g     F .text.itcm	00000012 fabs
0001520c g     F .text.itcm	0000002c _lseek_r
0000ad38 g     F .text.itcm	0000008c SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000ebe0  w    F .text.itcm	00000108 yield
00009ce0  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
00000dc8 g     F .text.itcm	000000e0 performSineSweep(int)
2000399c g     O .data	00000004 maxYaw
200040c8 g     O .bss	00000004 MagX_prev
00001220 g     F .text.itcm	00000128 scaleCommands()
20003910 g     O .data	00000004 channel_3_fs
20003988 g     O .data	00000004 maxBetaPitch
200052d8 g     O .bss	00000004 usb_timer1_callback
2000504c g     O .bss	00000004 integralOld_yaw
20004f20 g     O .bss	00000004 channel_2_pwm
000080dc g     F .text.itcm	000001b0 FatFile::write(void const*, unsigned int)
20004f14 g     O .bss	00000004 channel_1_pwm
2000503c g     O .bss	00000004 integralOld_alpha
600020b8 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
600019bc g     F .text.code	00000294 configure_external_ram
00009b66  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00008068 g     F .text.itcm	00000074 FatFile::truncate()
20004fcc g     O .bss	00000004 d_ch2
20004840 g     O .bss	00000140 Wire1
0000a44c  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
00010ef4 g     F .text.itcm	0000005a .hidden __floatdidf
00008474 g     F .text.itcm	00000178 FatFile::makeSFN(FatLfn_t*)
00009778 g     F .text.itcm	00000142 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
6000209c  w    O .text.progmem	00000001 _serialEventUSB2_default
20004b64 g     O .bss	00000004 FsDateTime::callback
20004d48 g     O .bss	00000001 __lock___atexit_recursive_mutex
00013f24 g     F .text.itcm	0000004c _wcrtomb_r
60001684 g     F .text.code	00000048 TwoWire::configSDApin(unsigned char)
000085ec g     F .text.itcm	000000ac FatFile::makeUniqueSfn(FatLfn_t*)
0000a20c g     F .text.itcm	00000034 SharedSpiCard::writeStart(unsigned long)
00008cb0 g     F .text.itcm	0000005a FatFormatter::initPbs()
0000c346 g     F .text.itcm	0000001c Print::println()
0000a3e4 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
00004344 g     F .text.itcm	000000b4 TwoWire::isr()
200022e4 g     O .data	00000070 vtable for DedicatedSpiCard
00012c6c g     F .text.itcm	00000020 __sseek
00012354 g     F .text.itcm	0000003c __sinit
00003974 g     F .text.itcm	00000044 I2Cdev::writeBit(unsigned char, unsigned char, unsigned char, unsigned char)
000055be g     F .text.itcm	000000e4 ExFatFile::seekSet(unsigned long long)
00013e80 g     F .text.itcm	000000a4 fcvtbuf
0000d978  w    F .text.itcm	00000002 serialEvent5()
200032bc g     O .data	00000004 MagScaleX
0001566c g     F .text.itcm	000000b0 __swbuf_r
000000a4  w    F .text.itcm	00000010 File::flush()
200040cc g     O .bss	00000004 MagY
00000354  w    F .text.itcm	0000006a SDFile::getCreateTime(DateTimeFields&)
20005040 g     O .bss	00000004 integralOld_beta
00011a14 g     F .text.itcm	0000000c __malloc_unlock
200046a0 g     O .bss	00000060 Serial5
200050f4 g     O .bss	00000004 s3_command_PWM
00000558  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
20004ba0 g     O .bss	00000004 FsVolume::m_cwv
000079e0 g     F .text.itcm	000000ca FatFile::open(FatFile*, char const*, int)
00009b5a  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
20003a1a g     O .data	00000001 useSineWave
6000180c g     F .text.code	00000054 analog_init
00003ad0 g     F .text.itcm	00000024 MPU6050::initialize()
0000395c g     F .text.itcm	00000018 I2Cdev::writeByte(unsigned char, unsigned char, unsigned char)
00007b00 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
200002c0 g     O .data	00000870 .hidden __exp_data
0000a04c g     F .text.itcm	0000003a SharedSpiCard::readOCR(unsigned long*)
0000c684 g     F .text.itcm	0000000a Stream::parseFloat()
20004f44 g     O .bss	00000004 channel_5_pwm
000039b8 g     F .text.itcm	00000050 I2Cdev::writeBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
2000409c g     O .bss	00000004 AccZ_prev
0000f8e8 g     F .text.itcm	00000030 .hidden __math_divzero
20003288 g     O .data	00000004 F_CPU_ACTUAL
200023cc  w    O .data	0000005c vtable for SDFile
2000393c g     O .data	00000004 dScaleRoll
200038e4 g     O .data	00000004 axisToRotate
000116f4 g     F .text.itcm	000000f8 memmove
200039e8 g     O .data	00000004 pScalePitch
0000bc12 g     F .text.itcm	00000070 HardwareSerial::peek()
200050a8 g     O .bss	00000004 roll_PID
0000b49c g     F .text.itcm	00000060 SdioCard::stopTransmission(bool)
00011a20 g     F .text.itcm	0000004c _Balloc
2000329c g     O .data	00000004 Kd_roll_angle
0001586c g       .ARM.exidx	00000000 __exidx_end
20004ef0 g     O .bss	00000004 blink_delay
00009650 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
200052f8 g     O .bss	00000001 EventResponder::runningFromYield
0000b6e2 g     F .text.itcm	00000018 SdSpiArduinoDriver::receive()
200052fc g     O .bss	00000001 blinkAlternate
20004fa4 g     O .bss	00000024 dTermFilter_yaw
00009a3c g     F .text.itcm	000000ec FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
20002c84 g     O .data	000000dc pwm_pin_info
0000db64 g     F .text.itcm	00000064 tempmonGetTemp
200052c4 g     O .bss	00000004 thro_des
200052a0 g     O .bss	00000004 servo5
0000ecec g     F .text.itcm	0000002c smalloc_verify_pool
0000c2d0 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
2000333c g     O .data	00000004 __atexit_recursive_mutex
200040bc g     O .bss	00000004 MagErrorY
00011108 g     F .text.itcm	0000000c __errno
00000622  w    F .text.itcm	0000002a SDFile::isDirectory()
000061b6 g     F .text.itcm	00000174 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
200052fe g     O .bss	00000001 conductSineSweep
20004090 g     O .bss	00000004 AccY
0000006c  w    F .text.itcm	00000012 File::write(unsigned char const*, unsigned int)
60001000 g     O .text.headers	00000020 ImageVectorTable
0000c974 g     F .text.itcm	00000026 String::String(float, unsigned char)
0000469c  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
0000013c  w    F .text.itcm	00000030 File::~File()
20004b78 g     O .bss	00000004 EventResponder::firstInterrupt
0000e418 g     F .text.itcm	00000004 usb_transfer_status
0000ed5c g     F .text.itcm	00000074 sm_set_pool
20004f38 g     O .bss	00000004 channel_4_pwm
000066d6 g     F .text.itcm	0000001a ExFatFormatter::writeUpcaseUnicode(unsigned short)
20004ec0 g     O .bss	00000004 __stdio_exit_handler
000098ba g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
20003a19 g     O .data	00000001 analog_write_res
00007318 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0000c906 g     F .text.itcm	00000016 String::String(String const&)
00000294  w    F .text.itcm	00000056 SDFile::setCreateTime(DateTimeFields const&)
200039f0 g     O .data	00000004 pScaleYaw
0000e4a0  w    F .text.itcm	0000000c usb_serial_class::write(unsigned char const*, unsigned int)
000151bc g     F .text.itcm	0000002c _fstat_r
20002828 g     O .data	00000370 digital_pin_to_info_PGM
20004ee4 g     O .bss	00000004 betaPitch
200038f0 g     O .data	00000004 beta_max
20004fec g     O .bss	00000004 errno
200050a4 g     O .bss	00000004 roll_IMU
0000b6fa g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
000109b0 g     F .text.itcm	00000110 floor
00007034 g     F .text.itcm	00000048 ExFatPartition::fatGet(unsigned long, unsigned long*)
60001ffc g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00015868 g       .text.itcm	00000000 _etext
0000450c g     F .text.itcm	000000c8 _spi_dma_rxISR0()
20005100 g     O .bss	00000004 s4_command_scaled
20005118 g     O .bss	00000004 s7_command_scaled
00008998 g     F .text.itcm	000000dc FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20003ec0 g       .bss	00000000 _sbss
00008d0a g     F .text.itcm	0000005a FatFormatter::writeMbr()
0000b516 g     F .text.itcm	0000000a sdCsInit(unsigned char)
00005178 g     F .text.itcm	000000a4 SDClass::mediaPresent()
0000a644 g     F .text.itcm	0000000c SdioCard::errorData() const
00000d08 g     F .text.itcm	000000c0 setDesStateSerial(int)
0000adc4 g     F .text.itcm	000000b0 SdioCard::writeSector(unsigned long, unsigned char const*)
0000bbec g     F .text.itcm	00000026 HardwareSerial::available()
00007214 g     F .text.itcm	00000104 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00006788 g     F .text.itcm	0000057c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00002450 g     F .text.itcm	0000002c invSqrt(float)
0000ce70 g     F .text.itcm	00000024 digitalRead
600021a8 g       *ABS*	00000000 _stextload
000027f0 g     F .text.itcm	000003ac loop
0000d820 g     F .text.itcm	00000078 flexpwm_init
0000d450 g     F .text.itcm	000000c4 flexpwmWrite
20005054 g     O .bss	0000000f mpu6050
600018c6 g     F .text.code	00000004 startup_debug_reset
0000e314 g     F .text.itcm	00000044 usb_config_rx
0000edd0 g     F .text.itcm	00000044 sqrtf
00005354 g     F .text.itcm	000000a8 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
00003b74 g     F .text.itcm	00000058 SBUS::~SBUS()
0000b2b0 g     F .text.itcm	000000d0 SdioCard::readData(unsigned char*)
00000ee0 g     F .text.itcm	00000038 pitchStep()
20001d74 g     O .data	00000004 Kp_betaPitch
0000c5ac g     F .text.itcm	00000026 Stream::peekNextDigit()
200040a0 g     O .bss	00000004 GyroX
00001a14 g     F .text.itcm	0000003c setupBlink(int, int, int)
00003a24 g     F .text.itcm	00000018 MPU6050::setFullScaleAccelRange(unsigned char)
0000be26 g     F .text.itcm	00000008 HardwareSerial::write(unsigned char)
0000410c g     F .text.itcm	000000f8 TwoWire::endTransmission(unsigned char)
00010070 g     F .text.itcm	00000294 __ieee754_rem_pio2
20004f58 g     O .bss	00000004 current_time
20004b74 g     O .bss	00000004 EventResponder::lastInterrupt
2000398c g     O .data	00000004 maxCutCounter
0000993c g     F .text.itcm	00000028 FsBaseFile::close()
000049c2 g     F .text.itcm	00000048 SPIClass::end()
0000cf20 g     F .text.itcm	00000134 memcpy
0000007e  w    F .text.itcm	00000012 File::available()
0000a2da g     F .text.itcm	00000032 SharedSpiCard::writeStop()
0000b93e g     F .text.itcm	0000009e FsUtf::cpToMb(unsigned long, char*, char*)
20003ec0 g     O .data	00000000 .hidden __TMC_END__
2000501c g     O .bss	00000010 fileName
0000f918 g     F .text.itcm	0000001e .hidden __math_invalid
20004f5c g     O .bss	00000024 dTermFilter_pitch
00007132 g     F .text.itcm	00000078 ExFatPartition::freeChain(unsigned long)
00007624 g     F .text.itcm	00000028 FatFile::peek()
00010e7c g     F .text.itcm	00000022 .hidden __floatsidf
200052fb  w    O .bss	00000001 SDFile::name()::zeroterm
200052bc g     O .bss	00000004 systick_millis_count
000060fa g     F .text.itcm	000000bc ExFatFile::rename(ExFatFile*, char const*)
000035f8 g     F .text.itcm	000001c4 ripPID()
00000512  w    F .text.itcm	00000046 SDFile::truncate(unsigned long long)
000040d0 g     F .text.itcm	0000003c TwoWire::wait_idle()
00003b2c g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
2000530c g     O .bss	00000001 usb_configuration
00009b50  w    F .text.itcm	00000006 SdCardInterface::status()
0000ed18 g     F .text.itcm	00000044 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000b4fc g     F .text.itcm	0000001a SdioCard::syncDevice()
0000a9f8 g     F .text.itcm	00000094 SdioCard::writeData(unsigned char const*)
200032b8 g     O .data	00000004 Kp_yaw
20004ef4 g     O .bss	00000004 ch1_CutCounter
00000228  w    F .text.itcm	0000006c StreamFile<FsBaseFile, unsigned long long>::available()
20005094 g     O .bss	00000004 q2
0000764c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00003a08 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
0000d6d8 g     F .text.itcm	000000b0 analogWrite
00009b6a g     F .text.itcm	00000084 SharedSpiCard::sectorCount()
600020b8  w    O .text.progmem	00000018 usb_string_manufacturer_name
00011114 g     F .text.itcm	00000010 malloc
60001fac g     O .text.progmem	00000050 TwoWire::i2c1_hardware
000050fa g     F .text.itcm	0000007c SDClass::format(int, char, Print&)
200023a8  w    O .data	00000024 vtable for FsFile
0000db3e  w    F .text.itcm	0000000a _fstat
00003e7a  w    F .text.itcm	0000001e TwoWire::read()
000117ec g     F .text.itcm	00000040 __assert_func
20000b58 g     O .data	000000c8 __mprec_tens
60001df8 g     F .text.code	000000ec usb_init
2000510c g     O .bss	00000004 s6_command_PWM
0000c94e g     F .text.itcm	00000026 String::String(int, unsigned char)
0000f988 g     F .text.itcm	00000130 __kernel_cos
2000392c g     O .data	00000004 cutoff_val
2000507c g     O .bss	00000004 pitch_IMU
00009b56  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00000806  w    F .text.itcm	000000be SDFile::seek(unsigned long long, int)
20004d84 g     O .bss	00000004 __malloc_top_pad
20004600 g     O .bss	00000050 SPI1
000023b0 g     F .text.itcm	00000050 getDScale()
200052c0 g     O .bss	00000004 systick_safe_read
0000c8c8 g     F .text.itcm	0000002a String::move(String&)
20004094 g     O .bss	00000004 AccY_prev
00003f84 g     F .text.itcm	0000014c TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
0000632a g     F .text.itcm	000000e4 ExFatFile::truncate()
20003344 g     O .data	00000000 .hidden __dso_handle
000110dc g     F .text.itcm	0000002c itoa
00010e5c g     F .text.itcm	0000001e .hidden __aeabi_ui2d
0000c81e g     F .text.itcm	0000001c String::changeBuffer(unsigned int)
00013f70 g     F .text.itcm	00000008 _localeconv_r
00003284 g     F .text.itcm	00000054 initializePID()
200038ec g     O .data	00000004 betaCounts_min
00003b2c g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
0000b678 g     F .text.itcm	00000060 SdSpiArduinoDriver::deactivate()
00015378 g     F .text.itcm	000002f4 __sfvwrite_r
00011bc4 g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
00008e80 g     F .text.itcm	000001e8 FatFormatter::makeFat32()
60002138 g     O .text.progmem	00000062 usb_config_descriptor_480
20005306 g     O .bss	00000001 sbusLostFrame
0000c83a g     F .text.itcm	00000028 String::reserve(unsigned int)
00010bd8 g     F .text.itcm	00000000 .hidden __aeabi_drsub
0000b6d8 g     F .text.itcm	0000000a SdSpiArduinoDriver::end()
00007330 g     F .text.itcm	0000003a FatFile::addCluster()
00012cb0 g     F .text.itcm	00000024 _sbrk_r
0000a70c g     F .text.itcm	0000001c SdioCard::type() const
600018c0 g     F .text.code	00000002 startup_default_early_hook
60001654 g     F .text.code	00000030 ResetHandler
0000f7e4 g     F .text.itcm	0000001e .hidden __math_invalidf
0000e904 g     F .text.itcm	00000020 usb_serial_getchar
20003a16 g     O .data	00000002 I2Cdev::readTimeout
000004a4  w    F .text.itcm	00000048 SDFile::name()
200052c8 g     O .bss	00000008 usb_cdc_line_coding
200038dc g     O .data	00000004 alpha_max
0000ce24 g     F .text.itcm	0000004c digitalWrite
0000f3f0 g     F .text.itcm	0000000e fabsf
20004b7c g     O .bss	00000004 EventResponder::lastYield
0000532c g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00015238 g     F .text.itcm	0000002c _read_r
00006650  w    F .text.itcm	00000020 Print::write(char const*)
00001b9c g     F .text.itcm	00000030 closeIris()
00000418  w    F .text.itcm	0000003e StreamFile<FsBaseFile, unsigned long long>::read()
00009cd4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00006670 g     F .text.itcm	0000002c ExFatFormatter::syncUpcase()
00000744  w    F .text.itcm	00000056 SDFile::setModifyTime(DateTimeFields const&)
00013f78 g     F .text.itcm	000000c6 _fclose_r
20004ffc g     O .bss	00000010 extmem_smalloc_pool
20004d7c g     O .bss	00000004 __malloc_max_sbrked_mem
0000a14c g     F .text.itcm	00000056 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
20003914 g     O .data	00000004 channel_4_fs
000001e2  w    F .text.itcm	0000001a SDFile::position()
0000ce94 g     F .text.itcm	0000007c pinMode
20004f30 g     O .bss	00000004 channel_3_pwm_pre
0000ca38 g     F .text.itcm	00000032 String::getBytes(unsigned char*, unsigned int, unsigned int) const
00001348 g     F .text.itcm	000004dc getCommands()
0000c408 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
0000fab8 g     F .text.itcm	000000b0 __kernel_sin
00010ea0 g     F .text.itcm	00000042 .hidden __extendsfdf2
20004fc8 g     O .bss	00000004 d_ch1
6000209d  w    O .text.progmem	00000001 _serialEventUSB1_default
00010be4 g     F .text.itcm	00000276 .hidden __adddf3
600016cc g     F .text.code	00000058 TwoWire::setSDA(unsigned char)
20004980 g     O .bss	00000140 Wire2
6001bc00 g     O .text.csf	00000c00 hab_csf
00000090  w    F .text.itcm	00000014 File::peek()
0000969c g     F .text.itcm	000000dc FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
00004ddc  w    F .text.itcm	000000ac SDClass::open(char const*, unsigned char)
00015864 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
0000db48  w    F .text.itcm	00000004 _isatty
20004b70 g     O .bss	00000004 EventResponder::firstYield
20004f28 g     O .bss	00000004 channel_2_pwm_prev
200050e8 g     O .bss	00000004 s1_command_scaled
0000b9dc g     F .text.itcm	000000a8 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000ea8 g     F .text.itcm	00000038 rollStep()
00000470  w    F .text.itcm	00000032 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0001255c g     F .text.itcm	000003d8 _realloc_r
0000064c  w    F .text.itcm	0000001e SDFile::read(void*, unsigned int)
20001d60 g     O .data	00000004 Kd_alphaRoll
000118e8 g     F .text.itcm	00000048 __libc_init_array
0000d0c8 g     F .text.itcm	00000388 dtostrf
000003be  w    F .text.itcm	0000003c SDFile::rewindDirectory()
00003e6e  w    F .text.itcm	0000000c TwoWire::available()
00005b62 g     F .text.itcm	00000012 ExFatFile::open(ExFatVolume*, char const*, int)
0000a650 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
00004b98 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00005f04 g     F .text.itcm	000000c0 ExFatFile::addDirCluster()
20004f50 g     O .bss	00000004 channel_8_pwm
000038dc g     F .text.itcm	00000034 I2Cdev::readBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00015310 g     F .text.itcm	00000066 _fputwc_r
0000469c  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
20000b30 g     O .data	00000028 __mprec_bigtens
0000a0c8  w    F .text.itcm	0000000c SharedSpiCard::readCID(CID*)
0000db56  w    F .text.itcm	00000004 abort
00004204 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000e470  w    F .text.itcm	00000008 usb_serial_class::clear()
00010e5c g     F .text.itcm	0000001e .hidden __floatunsidf
0000db04  w    F .text.itcm	00000030 _sbrk
60017a14 g       *ABS*	00000000 _sdataload
00011f2c g     F .text.itcm	00000042 __mcmp
2000244c g     O .data	00000030 vtable for SDClass
20003340 g     O .data	00000004 __brkval
2000530b g     O .bss	00000001 usb_cdc_line_rtsdtr
60001f38 g     F .text.code	00000000 _init
0000e674 g     F .text.itcm	00000002 usb_serial_reset
000073f0 g     F .text.itcm	00000022 FatFile::cacheDirEntry(unsigned char)
2000214c g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
0000c810 g     F .text.itcm	0000000e String::~String()
20001c68 g     O .data	000000e0 .hidden __sincosf_table
00004cbc  w    F .text.itcm	0000005e SDClass::remove(char const*)
0000f610 g     F .text.itcm	000001bc cosf
000004ec  w    F .text.itcm	00000026 SDFile::close()
0000c906 g     F .text.itcm	00000016 String::String(String const&)
00003234 g     F .text.itcm	0000004e biquadFilter_apply(biquadFilter_s*, float)
00000684  w    F .text.itcm	00000040 SDFile::~SDFile()
20005110 g     O .bss	00000004 s6_command_scaled
0000ca0c g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
600020d4 g     O .text.progmem	00000062 usb_config_descriptor_12
20005302 g     O .bss	00000001 irisFlag
00010308 g     F .text.itcm	00000690 __kernel_rem_pio2
2000247c g     O .data	00000024 vtable for TwoWire
200032a0 g     O .data	00000004 Kd_yaw
0000d788 g     F .text.itcm	00000098 analogWriteFrequency
0000b650 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
20005340 g       .bss	00000000 _ebss
0000ae74 g     F .text.itcm	0000008c SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
20004ed4 g     O .bss	00000004 alphaRoll_des
20003294 g     O .data	00000004 GyroErrorZ
200032b4 g     O .data	00000004 Kp_roll_angle
60001724 g     F .text.code	00000048 TwoWire::configSCLpin(unsigned char)
00000456  w    F .text.itcm	0000001a StreamFile<FsBaseFile, unsigned long long>::flush()
0000bbcc g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
20004ff0 g     O .bss	00000004 errorOld_alpha
0000c99a g     F .text.itcm	00000072 String::append(char const*, unsigned int)
00011b24 g     F .text.itcm	00000040 __hi0bits
00005298 g     F .text.itcm	00000038 ExFatFile::dirCache(unsigned char, unsigned char)
200040b4 g     O .bss	00000004 GyroZ_prev
00004408 g     F .text.itcm	00000010 lpi2c3_isr()
00004f90 g     F .text.itcm	000000dc SDClass::begin(unsigned char)
00005fc4 g     F .text.itcm	0000004a ExFatFile::mkdir(ExFatFile*, ExName_t*)
20003974 g     O .data	00000004 iScalePitch
20203080 g       .bss.dma	00000000 _heap_start
20003140 g     O .data	00000001 String::zerotermination
200039ec g     O .data	00000004 pScaleRoll
20004d4c g     O .bss	00000001 __lock___malloc_recursive_mutex
00003a3c g     F .text.itcm	0000006c MPU6050::getMotion6(short*, short*, short*, short*, short*, short*)
200050fc g     O .bss	00000004 s4_command_PWM
00004b94  w    F .text.itcm	00000002 SDClass::~SDClass()
0000d644 g     F .text.itcm	00000094 quadtimerFrequency
6000204c g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00003af4 g     F .text.itcm	00000028 MPU6050::getDeviceID()
0000c862 g     F .text.itcm	00000040 String::copy(char const*, unsigned int)
20004d88 g     O .bss	00000138 __sf
00009e24 g     F .text.itcm	00000096 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00001b80 g     F .text.itcm	0000001c openIris()
0000013c  w    F .text.itcm	00000030 File::~File()
00003910 g     F .text.itcm	0000004c I2Cdev::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char*)
00000003 g       *ABS*	00000000 _itcm_block_count
0000bd5c g     F .text.itcm	000000ca HardwareSerial::write9bit(unsigned long)
20003270 g     O .data	00000004 AccErrorZ
20003ee0 g     O .bss	00000020 endpoint0_transfer_data
200050b0 g     O .bss	00000004 roll_passthru
0000913c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000b7ca g     F .text.itcm	00000050 FsCache::prepare(unsigned long, unsigned char)
0000d05c g     F .text.itcm	00000008 operator delete(void*, unsigned int)
0000d8d0 g     F .text.itcm	00000068 pwm_init
00010be4 g     F .text.itcm	00000276 .hidden __aeabi_dadd
00003f18  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000bd06 g     F .text.itcm	00000018 HardwareSerial::flush()
20005050 g     O .bss	00000004 iris
0000c810 g     F .text.itcm	0000000e String::~String()
6001c800 g       .text.csf	00000000 __text_csf_end
0000f8d8 g     F .text.itcm	00000010 .hidden __math_oflow
20001d6c g     O .data	00000004 Ki_betaPitch
60001c50 g     F .text.code	00000060 usb_pll_start
20004f04 g     O .bss	00000004 channel_10_pwm
00011d7c g     F .text.itcm	000000c0 __pow5mult
00007734 g     F .text.itcm	0000005a FatFile::rmdir()
00010ee4 g     F .text.itcm	0000006a .hidden __aeabi_ul2d
00004418 g     F .text.itcm	00000010 lpi2c4_isr()
20003930 g     O .data	00000004 dScaleAlpha
000095c2 g     F .text.itcm	0000008e FatPartition::allocateCluster(unsigned long, unsigned long*)
00003f18  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000fb68 g     F .text.itcm	0000020c __ieee754_asinf
0000a492  w    F .text.itcm	00000002 SdioCard::end()
200040c4 g     O .bss	00000004 MagX
20003984 g     O .data	00000004 maxAlphaRoll
00004c1c  w    F .text.itcm	00000046 SDClass::exists(char const*)
20003940 g     O .data	00000004 dScaleYaw
20003ec0 g     O .bss	00000020 endpoint0_transfer_ack
200052d0 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000e3d0 g     F .text.itcm	00000028 usb_transmit
0000bf88 g     F .text.itcm	00000048 HardwareSerial::addToSerialEventsList()
200052b0 g     O .bss	00000004 sineFrequency
0000bbac g     F .text.itcm	00000020 systick_isr
20004f40 g     O .bss	00000004 channel_4_pwm_prev
20005298 g     O .bss	00000004 servo3
200032a8 g     O .data	00000004 Ki_roll_angle
0001193c g     F .text.itcm	00000002 __retarget_lock_release_recursive
200032c8 g     O .data	00000010 Serial
20004f18 g     O .bss	00000004 channel_1_pwm_pre
0000c8f2 g     F .text.itcm	00000014 String::operator=(String const&)
00002480 g     F .text.itcm	0000036c Madgwick6DOF(float, float, float, float, float, float, float)
2000397c g     O .data	00000004 iScaleYaw
20000c20 g     O .data	00001048 .hidden __pow_log_data
0000d5fc g     F .text.itcm	00000048 quadtimerWrite
200022c0 g     O .data	00000024 vtable for HardwareSerial
0000e4ac  w    F .text.itcm	0000000a usb_serial_class::write(unsigned char)
000099d8 g     F .text.itcm	00000060 FsBaseFile::openNext(FsBaseFile*, int)
600018c0  w    F .text.code	00000002 startup_early_hook
0000f950 g     F .text.itcm	00000028 .hidden __math_check_oflow
00005be0 g     F .text.itcm	000000a0 ExFatFile::addCluster()
20004b68 g     O .bss	00000004 FsDateTime::callback2
2000237c  w    O .data	0000002c vtable for File
00009d7c g     F .text.itcm	0000006c SharedSpiCard::readData(unsigned char*, unsigned int)
00004e88  w    F .text.itcm	00000108 SDClass::usedSize()
0000e840 g     F .text.itcm	00000048 usb_serial_peekchar
20003924 g     O .data	00000004 channel_8_fs
20005108 g     O .bss	00000004 s5_command_scaled
00012390 g     F .text.itcm	0000000c __sfp_lock_acquire
000123b0 g     F .text.itcm	00000000 memchr
0000949c g     F .text.itcm	00000126 FatPartition::fatPut(unsigned long, unsigned long)
0000cb08 g     F .text.itcm	0000029c set_arm_clock
200052b8 g     O .bss	00000004 systick_cycle_count
20003a00 g     O .data	00000016 usb_string_serial_number_default
000129d4 g     F .text.itcm	0000020c _free_r
0000a240 g     F .text.itcm	0000009a SharedSpiCard::erase(unsigned long, unsigned long)
0000a30c g     F .text.itcm	0000004c SharedSpiCard::writeData(unsigned char, unsigned char const*)
00001824 g     F .text.itcm	000000d8 failSafe()
00009b5e  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011940 g     F .text.itcm	0000000c __locale_mb_cur_max
000141e4 g     F .text.itcm	00000016 _wcsrtombs_r
20004ecc g     O .bss	00000004 alphaOffset
200039e0 g     O .data	00000004 pScaleAlpha
00004a54 g     F .text.itcm	00000008 PWMServo::PWMServo()
20004bb8 g     O .bss	00000190 __atexit0
200038f4 g     O .data	00000004 beta_min
200039e4 g     O .data	00000004 pScaleBeta
0000e490  w    F .text.itcm	00000008 usb_serial_class::flush()
20005088 g     O .bss	00000004 pitch_passthru
000066f0 g     F .text.itcm	00000098 ExFatFormatter::writeUpcase(unsigned long)
00010be0 g     F .text.itcm	0000027a .hidden __aeabi_dsub
20004098 g     O .bss	00000004 AccZ
20004ff4 g     O .bss	00000004 errorOld_beta
0000c24c g     F .text.itcm	00000010 IRQHandler_Serial5
200038bc g     O .data	00000004 __malloc_sbrk_base
0000e480  w    F .text.itcm	00000008 usb_serial_class::read()
00008a74 g     F .text.itcm	0000015c FatFile::remove()
0000f808 g     F .text.itcm	00000080 sin
00010ee4 g     F .text.itcm	0000006a .hidden __floatundidf
20004ef8 g     O .bss	00000004 ch2_CutCounter
0000db4c  w    F .text.itcm	00000006 _lseek
0000db52  w    F .text.itcm	00000004 __cxa_pure_virtual
000032d8 g     F .text.itcm	00000320 anglePID()
00011e3c g     F .text.itcm	000000f0 __lshift
00007c98 g     F .text.itcm	000000d2 FatFile::mkdir(FatFile*, char const*, bool)
0000e3a0 g     F .text.itcm	00000030 usb_prepare_transfer
00009b62  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
200050ac g     O .bss	00000004 roll_des
0000d97c g     F .text.itcm	00000188 unused_interrupt_vector
200052d4 g     O .bss	00000004 usb_timer0_callback
60001cb0 g     F .text.code	00000148 tempmon_init
0000834c g     F .text.itcm	00000128 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
0000ece8  w    F .text.itcm	00000002 serialEvent()
200038d4 g     O .data	00000004 alphaCounts_max
20003908 g     O .data	00000004 channel_1_fs
00013dcc g     F .text.itcm	00000088 __register_exitproc
00009c68 g     F .text.itcm	0000006c DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0000c91c g     F .text.itcm	00000010 String::operator=(String&&)
00005a7c g     F .text.itcm	000000e6 ExFatFile::open(ExFatFile*, char const*, int)
00010fec g     F .text.itcm	0000008a strncmp
0000828c g     F .text.itcm	000000c0 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
0000600e g     F .text.itcm	000000ec ExFatFile::mkdir(ExFatFile*, char const*, bool)
00008d64 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000ca1c g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
0000e8a0 g     F .text.itcm	00000064 usb_serial_flush_input
20005098 g     O .bss	00000004 q3
000071aa g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
2000508c g     O .bss	00000004 prev_time
00011c20 g     F .text.itcm	0000015c __multiply
00003198 g     F .text.itcm	0000009c biquadFilter_init(biquadFilter_s*, float, float)
0000ee18 g     F .text.itcm	0000057c pow
0000eadc g     F .text.itcm	00000018 usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
00009ebc g     F .text.itcm	00000190 SharedSpiCard::begin(SdSpiConfig)
00011078 g     F .text.itcm	00000064 strncpy
20004d54 g     O .bss	00000028 __malloc_current_mallinfo
2000222c g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
000120c4 g     F .text.itcm	000000d4 __d2b
20003938 g     O .data	00000004 dScalePitch
0000a358 g     F .text.itcm	0000002e SharedSpiCard::writeData(unsigned char const*)
20004b80 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
0000a48a  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60001ee4 g     F .text.code	00000054 _reboot_Teensyduino_
200040d4 g     O .bss	00000004 MagZ
0000ac78  w    F .text.itcm	0000000e SdioCard::~SdioCard()
00002400 g     F .text.itcm	00000050 getIScale()
600018c2 g     F .text.code	00000002 startup_default_middle_hook
20005090 g     O .bss	00000004 q1
00012210 g     F .text.itcm	00000018 realloc
00009c0c g     F .text.itcm	0000005c DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a086 g     F .text.itcm	00000036 SharedSpiCard::readRegister(unsigned char, void*)
20004f4c g     O .bss	00000004 channel_7_pwm
0000ac0c g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
0000c5d4 g     F .text.itcm	000000b0 Stream::parseFloat(char)
0000de54 g     F .text.itcm	000004c0 usb_isr
000118d0 g     F .text.itcm	0000000c __cxa_atexit
20003978 g     O .data	00000004 iScaleRoll
00003c88 g     F .text.itcm	00000164 SBUS::read(unsigned short*, bool*, bool*)
000053fc g     F .text.itcm	00000196 ExFatFile::read(void*, unsigned int)
00004a5c g     F .text.itcm	0000009c PWMServo::attach(int, int, int)
00015014 g     F .text.itcm	00000024 _close_r
0000a40a  w    F .text.itcm	00000042 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
00010e7c g     F .text.itcm	00000022 .hidden __aeabi_i2d
0000a106 g     F .text.itcm	00000028 SharedSpiCard::readStop()
00000604  w    F .text.itcm	0000001e SDFile::peek()
0000b77c g     F .text.itcm	0000004e FsCache::sync()
00001a50 g     F .text.itcm	00000130 getJoyAngle()
200052b4 g     O .bss	00000004 sineTime
200052e0 g     O .bss	00000004 yaw_PID
200045b0 g     O .bss	00000050 SPI
00011694 g     F .text.itcm	00000060 memcmp
20002354  w    O .data	00000028 vtable for usb_serial_class
0000b71a g     F .text.itcm	00000014 SdSpiArduinoDriver::send(unsigned char)
200032a4 g     O .data	00000004 Ki_pitch_angle
0000c8a2 g     F .text.itcm	00000026 String::String(char const*)
00011934 g     F .text.itcm	00000002 __retarget_lock_close_recursive
20003298 g     O .data	00000004 Kd_pitch_angle
0000b520 g     F .text.itcm	00000008 sdCsWrite(unsigned char, bool)
20005290 g     O .bss	00000004 servo1
0000c57c g     F .text.itcm	00000030 Stream::timedPeek()
20005288 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
20004650 g     O .bss	00000050 SPI2
200050ec g     O .bss	00000004 s2_command_PWM
20003280 g     O .data	00000004 B_mag
00014040 g     F .text.itcm	000000cc __swsetup_r
00005d30 g     F .text.itcm	00000062 ExFatFile::rmdir()
0000a0d4 g     F .text.itcm	00000032 SharedSpiCard::readStart(unsigned long)
200050e4 g     O .bss	00000004 s1_command_PWM
200034b4 g     O .data	00000408 __malloc_av_
20004bb4 g     O .bss	00000004 __atexit
0000066a  w    F .text.itcm	0000001a SDFile::flush()
00012c08 g     F .text.itcm	00000022 __sread
2000530f g     O .bss	00000001 useSerialAngleCommands
00003dec g     F .text.itcm	00000044 SBUS::scaleBias(unsigned char)
2000327c g     O .data	00000004 B_madgwick
20005048 g     O .bss	00000004 integralOld_roll
0000eb40 g     F .text.itcm	000000a0 usb_serial_flush_output
00011a08 g     F .text.itcm	0000000c __malloc_lock
00006d50 g     F .text.itcm	000000c4 ExFatFile::getName8(char*, unsigned int)
0000b830 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
20005044 g     O .bss	00000004 integralOld_pitch
20003c00 g     O .data	000002c0 _VectorsRam
0000b72e g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00009df4 g     F .text.itcm	00000030 SharedSpiCard::waitReady(unsigned short)
00008c00 g     F .text.itcm	000000b0 FatFormatter::initFatDir(unsigned char, unsigned long)
00015168 g     F .text.itcm	00000054 _fflush_r
00001bcc g     F .text.itcm	00000792 getDataString()
20003998 g     O .data	00000004 maxRoll
00012198 g     F .text.itcm	00000078 _calloc_r
20003928 g     O .data	00000004 channel_9_fs
000046d4 g     F .text.itcm	00000270 SPIClass::begin()
00010f50 g     F .text.itcm	0000009c __utoa
20003900 g     O .data	00000004 channel_12_fs
00008698 g     F .text.itcm	00000300 FatFile::open(FatFile*, FatLfn_t*, int)
20003a1b g     O .data	00000001 yield_active_check_flags
00005ea8 g     F .text.itcm	0000005c ExFatFile::sync()
00011938 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
2000530d g     O .bss	00000001 usb_high_speed
00007d6a g     F .text.itcm	00000202 FatFile::rename(FatFile*, char const*)
0000a874 g     F .text.itcm	0000004c SdioCard::isBusy()
0001182c g     F .text.itcm	000000a4 memset
0000f400 g     F .text.itcm	00000006 __ieee754_sqrtf
0000cf10 g     F .text.itcm	00000010 main
20004d80 g     O .bss	00000004 __malloc_max_total_mem
20003278 g     O .data	00000004 B_gyro
00006e78 g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00011930 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
200040a8 g     O .bss	00000004 GyroY
2000528c g     O .bss	00000004 serialInputValue
0000a386 g     F .text.itcm	00000048 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
20003918 g     O .data	00000004 channel_5_fs
00006410 g     F .text.itcm	00000240 ExFatFile::write(void const*, unsigned int)
20004f34 g     O .bss	00000004 channel_3_pwm_prev
0000b894 g     F .text.itcm	000000aa lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
00007abc g     F .text.itcm	00000044 FatFile::dirEntry(DirFat_t*)
0000079a  w    F .text.itcm	0000006c SDFile::available()
00012c8c g     F .text.itcm	00000008 __sclose
0000e41c g     F .text.itcm	00000054 usb_init_serialnumber
20004f24 g     O .bss	00000004 channel_2_pwm_pre
60001fac g       .text.code	00000000 __init_array_end
00014328 g     F .text.itcm	00000cec _dtoa_r
00011134 g     F .text.itcm	00000560 _malloc_r
00009bee g     F .text.itcm	0000000c DedicatedSpiCard::readSector(unsigned long, unsigned char*)
200052f9 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
2000326c g     O .data	00000004 AccErrorY
00012c94 g     F .text.itcm	0000001a __ascii_wctomb
00000216  w    F .text.itcm	00000012 SDFile::isOpen()
000098ba g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
00010ef4 g     F .text.itcm	0000005a .hidden __aeabi_l2d
20004bac g     O .bss	00000004 FatVolume::m_cwv
20002510  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00003a08 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
00004944 g     F .text.itcm	0000007e SPIClass::transfer(void const*, void*, unsigned int)
0000cda4 g     F .text.itcm	00000054 micros
20004f1c g     O .bss	00000004 channel_1_pwm_prev
20003994 g     O .data	00000004 maxPitch
00005d94 g     F .text.itcm	00000114 ExFatFile::syncDir()
00003a0c g     F .text.itcm	00000018 MPU6050::setFullScaleGyroRange(unsigned char)
20003944 g     O .data	00000014 dataFile
20003268 g     O .data	00000004 AccErrorX
00004428 g     F .text.itcm	000000a0 TwoWire::setClock(unsigned long)
00012934 g     F .text.itcm	000000a0 _malloc_trim_r
0001571c g     F .text.itcm	00000106 _wcsnrtombs_l
0000e924 g     F .text.itcm	000001b8 usb_serial_write
600020d0 g     O .text.progmem	00000004 string0
200040a4 g     O .bss	00000004 GyroX_prev
600018c4  w    F .text.code	00000002 startup_late_hook
20003970 g     O .data	00000004 iScaleBeta
0000d514 g     F .text.itcm	000000e8 flexpwmFrequency
0000ddf8 g     F .text.itcm	00000034 usb_start_sof_interrupts
0000f938 g     F .text.itcm	00000012 .hidden __math_check_uflow
0000a3ce g     F .text.itcm	00000016 DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000e488  w    F .text.itcm	00000008 usb_serial_class::available()
20004f08 g     O .bss	00000004 channel_11_pwm
6000209e  w    O .text.progmem	00000001 _serialEvent_default
0000792c g     F .text.itcm	000000a4 FatFile::sync()
20003980 g     O .data	00000004 i_limit
00009068 g     F .text.itcm	000000d4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00004d8a  w    F .text.itcm	00000052 SDClass::mkdir(char const*)
20003934 g     O .data	00000004 dScaleBeta
20000000 g     O .data	00000280 endpoint_queue_head
20004088 g     O .bss	00000004 AccX
600020a0  w    O .text.progmem	00000016 usb_string_product_name
0000cdf8 g     F .text.itcm	0000002c delay
00005308 g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00015860 g     F .fini	00000000 _fini
0000c92c g     F .text.itcm	00000022 String::operator=(char const*)
00001948 g     F .text.itcm	0000006c loopRate(int)
00003eb2 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00009d3e g     F .text.itcm	0000003e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
20005084 g     O .bss	00000004 pitch_des
200040b8 g     O .bss	00000004 MagErrorX
00005b74 g     F .text.itcm	00000030 ExFatFile::openNext(ExFatFile*, int)
20004f10 g     O .bss	00000004 channel_13_pwm
000079d0 g     F .text.itcm	00000010 FatFile::close()
0000db5a g     F .text.itcm	00000008 Panic_Temp_isr
000006c4  w    F .text.itcm	00000048 SDFile::~SDFile()
20004f80 g     O .bss	00000024 dTermFilter_roll
20001d68 g     O .data	00000004 Ki_alphaRoll
00007b40 g     F .text.itcm	00000158 FatFile::mkdir(FatFile*, FatLfn_t*)
00015824 g     F .text.itcm	00000024 _wcsnrtombs_r
0000a728  w    F .text.itcm	00000002 SdioCard::~SdioCard()
000003fa  w    F .text.itcm	0000001e StreamFile<FsBaseFile, unsigned long long>::peek()
000000e0  w    F .text.itcm	00000022 File::write(unsigned char)
00012d1c g     F .text.itcm	0000002c _write_r
0000d938 g     F .text.itcm	0000001c analogWriteRes
00002360 g     F .text.itcm	00000050 getPScale()
200052a4 g     O .bss	00000004 servo6
20003274 g     O .data	00000004 B_accel
200040dc g     O .bss	000004d4 SD
0000a8c8 g     F .text.itcm	000000d0 SdioCard::erase(unsigned long, unsigned long)
0000c8a2 g     F .text.itcm	00000026 String::String(char const*)
200052e8 g     O .bss	00000004 yaw_passthru
0000f978 g     F .text.itcm	0000000c nanf
200038d0 g     O .data	00000004 _impure_ptr
20002428  w    O .data	00000024 vtable for Stream
00005592 g     F .text.itcm	0000002c ExFatFile::peek()
20004f48 g     O .bss	00000004 channel_6_pwm
00015038 g     F .text.itcm	00000130 __sflush_r
00010ac0 g     F .text.itcm	0000010c scalbn
2000229c  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
2000391c g     O .data	00000004 channel_6_fs
20004700 g     O .bss	00000140 Wire
000009d0 g     F .text.itcm	00000334 getIMUdata()
0000070c  w    F .text.itcm	0000001c SDFile::write(void const*, unsigned int)
0000f3ec g     F .text.itcm	00000004 atan2f
00003aa8 g     F .text.itcm	00000010 MPU6050::setSleepEnabled(bool)
00009b28 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00012cd4 g     F .text.itcm	00000046 _fwalk_sglue
0000a638 g     F .text.itcm	0000000c SdioCard::errorCode() const
20004ee0 g     O .bss	00000004 betaOffset
00007aaa g     F .text.itcm	00000012 FatFile::open(FatVolume*, char const*, int)
00000728  w    F .text.itcm	0000001c StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60001f90 g       .text.code	00000000 __preinit_array_end
2000512c g     O .bss	0000013c sbus
20004ed8 g     O .bss	00000004 beta
200039f4 g     O .data	00000004 print_counterSD
00006ffa g     F .text.itcm	0000003a ExFatPartition::dirCache(DirPos_t*, unsigned char)
00009cee g     F .text.itcm	00000028 SharedSpiCard::spiStart()
00013e54 g     F .text.itcm	0000002a __ascii_mbtowc
20003290 g     O .data	00000004 GyroErrorY
20004f2c g     O .bss	00000004 channel_3_pwm
200038e8 g     O .data	00000004 betaCounts_max
0000de2c g     F .text.itcm	00000028 usb_stop_sof_interrupts
00003e98  w    F .text.itcm	00000018 TwoWire::peek()
20004eec g     O .bss	00000004 blink_counter
0000be2e g     F .text.itcm	00000158 HardwareSerial::IRQHandler()
00003eb0  w    F .text.itcm	00000002 TwoWire::flush()
00002bac g     F .text.itcm	00000564 setup
200030ac g     O .data	00000084 usb_descriptor_list
0000a8c0 g     F .text.itcm	00000008 SdioCard::status()
2000529c g     O .bss	00000004 servo4
0000f408 g     F .text.itcm	00000204 sinf
00007b20 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
000001e0  w    F .text.itcm	00000002 Print::flush()
20003920 g     O .data	00000004 channel_7_fs
2000396c g     O .data	00000004 iScaleAlpha
200038f8 g     O .data	00000004 channel_10_fs
00004c62  w    F .text.itcm	0000005a SDClass::rmdir(char const*)
0000747a g     F .text.itcm	000001aa FatFile::read(void*, unsigned int)
00003ab8 g     F .text.itcm	00000018 MPU6050::setClockSource(unsigned char)
00007412 g     F .text.itcm	0000003c FatFile::openRoot(FatVolume*)
20004b6c g     O .bss	00000004 ExFatVolume::m_cwv
20068000 g       .text.csf	00000000 _estack
00009a38 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
000000b4  w    F .text.itcm	0000002c File::read()
0000eaf4 g     F .text.itcm	0000004c usb_serial_write_buffer_free
20003904 g     O .data	00000004 channel_13_fs
200038d8 g     O .data	00000004 alphaCounts_min
00003b1c g     F .text.itcm	00000010 MPU6050::testConnection()
6000176c g     F .text.code	0000005c TwoWire::setSCL(unsigned char)
200038c4 g     O .data	0000000c __sglue
0000e678 g     F .text.itcm	000000ec usb_serial_configure
00003edc g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00000104  w    F .text.itcm	00000038 File::~File()
200039f8 g     O .data	00000004 q0
20004ba4 g     O .bss	00000008 PWMServo::attachedpins
0000c364  w    F .text.itcm	00000018 _write
20003ec0 g       .data	00000000 _edata
000070f2 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
000008c4 g     F .text.itcm	00000094 controlMixer()
20005300 g     O .bss	00000001 external_psram_size
0000a728  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000b848 g     F .text.itcm	0000004c FsName::get16()
200050f8 g     O .bss	00000004 s3_command_scaled
00009cd4  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a1a2 g     F .text.itcm	0000006a DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20005104 g     O .bss	00000004 s5_command_PWM
00009bfa g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
00006e14 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
0000736c g     F .text.itcm	00000084 FatFile::addDirCluster()
00015264 g     F .text.itcm	000000aa __fputwc
0000e498  w    F .text.itcm	00000008 usb_serial_class::availableForWrite()
20005301 g     O .bss	00000001 failureFlag
000043f8 g     F .text.itcm	00000010 lpi2c1_isr()
00009348 g     F .text.itcm	00000036 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
20001d70 g     O .data	00000004 Kp_alphaRoll
20004f0c g     O .bss	00000004 channel_12_pwm
0000bd20 g     F .text.itcm	0000003c nvic_execution_priority()
20004fd8 g     O .bss	00000004 dt
0000d064 g     F .text.itcm	00000064 ultoa
200040d8 g     O .bss	00000004 MagZ_prev
00004b94  w    F .text.itcm	00000002 SDClass::~SDClass()
600017c8 g     F .text.code	00000044 TwoWire::begin()
20001d64 g     O .data	00000004 Kd_betaPitch
00000f18 g     F .text.itcm	00000308 getDesState()
00009964 g     F .text.itcm	00000074 FsBaseFile::open(FsVolume*, char const*, int)
00003bcc g     F .text.itcm	000000bc SBUS::parse()
20004fd4 g     O .bss	00000004 d_ch4
00012c2c g     F .text.itcm	0000003e __swrite
0000d054 g     F .text.itcm	00000008 operator new(unsigned int)
0000bb50 g     F .text.itcm	00000054 EventResponder::runFromInterrupt()
200038c0 g     O .data	00000004 __malloc_trim_threshold
0000e478  w    F .text.itcm	00000008 usb_serial_class::peek()
200052e4 g     O .bss	00000004 yaw_des
200052ac g     O .bss	00000004 servoLoopCounter
200050f0 g     O .bss	00000004 s2_command_scaled
000118dc g     F .text.itcm	0000000a fcvtf
0000a48e  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
00009d16 g     F .text.itcm	00000028 SharedSpiCard::spiStop()
2000502c g     O .bss	00000010 filePrefix
2000328c g     O .data	00000004 GyroErrorX
00012be0 g     F .text.itcm	00000028 fiprintf
200032b0 g     O .data	00000004 Kp_pitch_angle
200040d0 g     O .bss	00000004 MagY_prev
20004f54 g     O .bss	00000004 channel_9_pwm
00012dc0 g     F .text.itcm	00000f8c _vfiprintf_r
200052dc g     O .bss	00000004 yaw_IMU
20004edc g     O .bss	00000004 betaCounts
00011f70 g     F .text.itcm	00000154 __mdiff
0000a698 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
0000f8c8 g     F .text.itcm	00000010 .hidden __math_uflow
0000bc82 g     F .text.itcm	00000084 HardwareSerial::read()
200021bc g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
000070a4 g     F .text.itcm	0000004e ExFatPartition::dirSeek(DirPos_t*, unsigned long)
000045d4 g     F .text.itcm	000000c8 _spi_dma_rxISR1()
00009200 g     F .text.itcm	00000108 FatFile::getName8(char*, unsigned int)
20003148 g     O .data	00000120 _impure_data
000056a4 g     F .text.itcm	000003d8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
0001239c g     F .text.itcm	0000000c __sfp_lock_release
0000fec0 g     F .text.itcm	000001ac atanf
0000ac04 g     F .text.itcm	00000008 SdioCard::writeStop()
000038c8 g     F .text.itcm	00000014 I2Cdev::readByte(unsigned char, unsigned char, unsigned char*, unsigned short)
20003990 g     O .data	00000004 maxFreq
200040ac g     O .bss	00000004 GyroY_prev
00009de8 g     F .text.itcm	0000000c SharedSpiCard::readData(unsigned char*)
000052d0 g     F .text.itcm	00000014 ExFatFile::close()
20002658 g     O .data	00000101 _ctype_
20004ec8 g     O .bss	00000004 alphaCounts
0000db34  w    F .text.itcm	00000004 _read
60001f90 g       .text.code	00000000 __init_array_start
200039fc g     O .data	00000004 sweepTime
0000ca6c g     F .text.itcm	0000009c analogRead
20003284 g     O .data	00000004 F_BUS_ACTUAL
0000d898 g     F .text.itcm	00000038 quadtimer_init
20004f00 g     O .bss	00000004 ch4_CutCounter
0000669c g     F .text.itcm	0000003a ExFatFormatter::writeUpcaseByte(unsigned char)
00004d1a  w    F .text.itcm	00000070 SDClass::rename(char const*, char const*)
20004efc g     O .bss	00000004 ch3_CutCounter
20002c58 g     O .data	0000002a pin_to_channel
200032c4 g     O .data	00000004 MagScaleZ
00003e30 g     F .text.itcm	00000014 SBUS::setEndPoints(unsigned char, unsigned short, unsigned short)
0001410c g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
00009cd6  w    F .text.itcm	0000000a SharedSpiCard::end()
00012480 g     F .text.itcm	000000dc strlen
0000744e g     F .text.itcm	0000002c FatFile::openCluster(FatFile*)
20005294 g     O .bss	00000004 servo2
00007690 g     F .text.itcm	000000a4 FatFile::seekSet(unsigned long)
600020a0 g     O .text.progmem	00000016 usb_string_product_name_default
000018fc g     F .text.itcm	0000004c throttleCut()
2000408c g     O .bss	00000004 AccX_prev
0000a6a8 g     F .text.itcm	00000064 SdioCard::sectorCount()
00004a54 g     F .text.itcm	00000008 PWMServo::PWMServo()
00007868 g     F .text.itcm	000000c4 FatFile::openNext(FatFile*, int)
200040b0 g     O .bss	00000004 GyroZ
20004ee8 g     O .bss	00000004 betaPitch_des
600018c2  w    F .text.code	00000002 startup_middle_hook
0000c2fc g     F .text.itcm	0000004a Print::print(String const&)
200024a0 g     O .data	00000070 vtable for SdioCard
00010ea0 g     F .text.itcm	00000042 .hidden __aeabi_f2d
20005080 g     O .bss	00000004 pitch_PID
20002560 g     O .data	00000060 .hidden __inv_pio4
00009308 g     F .text.itcm	00000008 FatFile::getName(char*, unsigned int)
00000958 g     F .text.itcm	00000078 IMUinit()
600018ca g     F .text.code	000000f2 configure_cache
0000a486  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
0000f394 g     F .text.itcm	00000058 asinf
200038fc g     O .data	00000004 channel_11_fs
0000c690 g     F .text.itcm	00000180 breakTime(unsigned long, DateTimeFields&)
0000a0bc  w    F .text.itcm	0000000c SharedSpiCard::readCSD(csd_t*)
0000506c  w    F .text.itcm	0000008e SdBase<FsVolume, FsFormatter>::restart()
0000b380 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
0000b528 g     F .text.itcm	00000128 SdSpiArduinoDriver::activate()
0000bfd0 g     F .text.itcm	0000027c HardwareSerial::begin(unsigned long, unsigned short)
20004ed0 g     O .bss	00000004 alphaRoll
00010be0 g     F .text.itcm	0000027a .hidden __subdf3
60001f90 g       .text.code	00000000 __preinit_array_start
0000e3f8 g     F .text.itcm	00000020 usb_receive
00006f2a g     F .text.itcm	000000d0 ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
20004ec4 g     O .bss	00000004 alpha
200040c0 g     O .bss	00000004 MagErrorZ
00011b64 g     F .text.itcm	00000060 __lo0bits
200052a8 g     O .bss	00000004 servo7
0000707c g     F .text.itcm	00000028 ExFatPartition::chainSize(unsigned long)
0000778e g     F .text.itcm	000000da FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
0001c800 g       *ABS*	00000000 _flashimagelen
20005268 g     O .bss	00000020 sbusChannels
20005305 g     O .bss	00000001 sbusFailSafe
00007f6c g     F .text.itcm	000000fc FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
6000209f g     O .text.progmem	00000001 _serialEvent5_default
0000a12e g     F .text.itcm	0000001e SharedSpiCard::syncDevice()
00010bcc g     F .text.itcm	0000000a __aeabi_atexit
20004fd0 g     O .bss	00000004 d_ch3
0000d954 g     F .text.itcm	00000024 rtc_get
00005c80 g     F .text.itcm	000000b0 ExFatFile::remove()
70000000 g       .bss.extram	00000000 _extram_start
0000bba4 g     F .text.itcm	00000008 pendablesrvreq_isr
00004b4e  w    F .text.itcm	00000046 SDClass::totalSize()
00003e44 g     F .text.itcm	0000002a SBUS::begin()
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
20003348 g     O .data	0000016c __global_locale
200038e0 g     O .data	00000004 alpha_min
200032ac g     O .data	00000004 Ki_yaw
0000af00 g     F .text.itcm	000003b0 SdioCard::begin(SdioConfig)
200052ff g     O .bss	00000001 doneWithSetup
000052e4 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000e764 g     F .text.itcm	000000dc usb_serial_read
20004d50 g     O .bss	00000001 __lock___sfp_recursive_mutex
20004f3c g     O .bss	00000004 channel_4_pwm_pre
200052f2 g     O .bss	00000001 SD_is_present
0000c37c g     F .text.itcm	0000008a Print::printNumber(unsigned long, unsigned char, unsigned char)
20004ff8 g     O .bss	00000004 errorOld_yaw
0000e358 g     F .text.itcm	00000048 usb_config_tx
0000db38  w    F .text.itcm	00000006 _close
0000937e g     F .text.itcm	0000011e FatPartition::fatGet(unsigned long, unsigned long*)
00011124 g     F .text.itcm	00000010 free
20005114 g     O .bss	00000004 s7_command_PWM
000037bc g     F .text.itcm	0000010c I2Cdev::readBytes(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00006d04 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00011a80 g     F .text.itcm	000000a4 __multadd
200032c0 g     O .data	00000004 MagScaleY
00011a6c g     F .text.itcm	00000012 _Bfree
000001fc  w    F .text.itcm	0000001a SDFile::size()
0000fd74 g     F .text.itcm	0000014c __ieee754_atan2f
00009166 g     F .text.itcm	00000098 FatFile::getSFN(char*, unsigned int)
00000684  w    F .text.itcm	00000040 SDFile::~SDFile()
20003a00  w    O .data	00000016 usb_string_serial_number
2000390c g     O .data	00000004 channel_2_fs
0000b3ec g     F .text.itcm	000000b0 SdioCard::readSector(unsigned long, unsigned char*)
0000a674 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)


