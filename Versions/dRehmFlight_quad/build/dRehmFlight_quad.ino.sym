
/home/james/Documents/dRehmFlight/Versions/dRehmFlight_quad/build/dRehmFlight_quad.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60001fa8 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00015620 l    d  .fini	00000000 .fini
00015624 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
20003ec0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6001b690 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001860 l     F .text.code	0000002c flexspi2_command
6000188c l     F .text.code	00000034 flexspi2_psram_id
60001400 l     F .text.code	00000254 ResetHandler2
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00004a18 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 analog.c
200053c9 l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 tempmon.c
200051e8 l     O .bss	00000004 s_hotCount
200051ec l     O .bss	00000004 s_hotTemp
200051f0 l     O .bss	00000004 s_hot_ROOM
200051f4 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
0000e118 l     F .text.itcm	000000a8 endpoint0_transmit
0000e1c0 l     F .text.itcm	000000ac endpoint0_receive
0000e26c l     F .text.itcm	00000088 schedule_transfer
0000e2f4 l     F .text.itcm	00000036 run_callbacks
0000e32a l     F .text.itcm	0000001c usb_endpoint_config
20005088 l     O .bss	00000008 endpoint0_buffer
20005090 l     O .bss	00000004 endpoint0_notify_mask
20004080 l     O .bss	00000008 endpoint0_setupdata
20005094 l     O .bss	00000004 endpointN_notify_mask
20005168 l     O .bss	00000008 reply_buffer
200053d3 l     O .bss	00000001 sof_usage
200053da l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
00000020 l     F .text.itcm	00000000 register_tm_clones
00000044 l     F .text.itcm	00000000 frame_dummy
20005120 l     O .bss	00000000 object.0
60001f90 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 dRehmFlight_quad.ino.cpp
00002ed8 l     F .text.itcm	00000388 __static_initialization_and_destruction_0(int, int)
00003cfc l     F .text.itcm	0000000e _GLOBAL__sub_I_errorOld_yaw
20004b44 l     O .bss	00000004 guard variable for pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, bool, float, float, float)::integralOld
20004b48 l     O .bss	00000004 guard variable for pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, bool, float, float, float)::errorOld
20004be8 l     O .bss	00000024 D_gains
20004c0c l     O .bss	00000024 I_gains
20004c30 l     O .bss	00000024 P_gains
20004ca8 l     O .bss	0000000c pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, bool, float, float, float)::integralOld
20004cb4 l     O .bss	0000000c pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, bool, float, float, float)::errorOld
00000000 l    df *ABS*	00000000 SPI.cpp
00004f5c l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 SD.cpp
0000576c l     F .text.itcm	0000007c _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 HardwareSerial5.cpp
0000c7ac l     F .text.itcm	00000074 _GLOBAL__sub_I_IRQHandler_Serial5
20004b54 l     O .bss	00000040 rx_buffer5
20004b94 l     O .bss	00000028 tx_buffer5
20003364 l     O .data	00000064 UART8_Hardware
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 serialEvent5.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
200039b8 l     O .data	00000012 device_descriptor
200039dc l     O .data	00000028 microsoft_os_compatible_id_desc
20003a04 l     O .data	00000012 microsoft_os_string_desc
60002198 l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 I2Cdev.cpp
00000000 l    df *ABS*	00000000 MPU6050.cpp
00000000 l    df *ABS*	00000000 SBUS.cpp
20004b4c l     O .bss	00000004 guard variable for SBUS::parse()::_sbusTime
20004cc0 l     O .bss	00000004 SBUS::parse()::_sbusTime
00000000 l    df *ABS*	00000000 PWMServo.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
000060f4 l     F .text.itcm	0000003c exFatDirChecksum(unsigned char const*, unsigned short)
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00009120 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
0000a9e4 l     F .text.itcm	0000002c sdIrs()
0000aa10 l     F .text.itcm	00000020 gpioMux(unsigned char)
0000aa30 l     F .text.itcm	00000018 isBusyCommandComplete()
0000aa48 l     F .text.itcm	00000010 isBusyCommandInhibit()
0000aa58 l     F .text.itcm	00000014 isBusyDat()
0000aa6c l     F .text.itcm	0000000c isBusyDMA()
0000aa78 l     F .text.itcm	00000014 isBusyFifoRead()
0000aa8c l     F .text.itcm	00000014 isBusyFifoWrite()
0000aaa0 l     F .text.itcm	00000018 isBusyTransferComplete()
0000aab8 l     F .text.itcm	000000d0 setSdclk(unsigned long)
0000ac7c l     F .text.itcm	00000024 waitTimeout(bool (*)())
0000aca0 l     F .text.itcm	0000007c cardCommand(unsigned long, unsigned long)
0000ad1c l     F .text.itcm	00000074 readReg16(unsigned long, void*)
0000ad90 l     F .text.itcm	00000024 statusCMD13()
0000adb4 l     F .text.itcm	00000010 isBusyCMD13()
0000aee8 l     F .text.itcm	00000060 waitTransferComplete()
0000afdc l     F .text.itcm	00000038 yieldTimeout(bool (*)())
0000b014 l     F .text.itcm	00000034 waitDmaStatus()
0000b048 l     F .text.itcm	00000090 cardCMD6(unsigned long, unsigned char*)
0000b0d8 l     F .text.itcm	0000007c transferStop()
0000b1d8 l     F .text.itcm	000000b0 rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
200053bf l     O .bss	00000001 m_initDone
20004b50 l     O .bss	00000004 m_sdClkKhz
200053c0 l     O .bss	00000001 m_version2
20004bbc l     O .bss	00000004 m_errorLine
200053c1 l     O .bss	00000001 m_highCapacity
200053c2 l     O .bss	00000001 m_transferActive
20004bc0 l     O .bss	00000010 m_cid
20004bd0 l     O .bss	00000010 m_csd
20004be0 l     O .bss	00000004 m_ocr
20004be4 l     O .bss	00000004 m_rca
20004c54 l     O .bss	00000004 m_busyFcn
200053c3 l     O .bss	00000001 m_dmaBusy
20004c58 l     O .bss	00000004 m_irqstat
20003a40 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
0000bd6c l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20001d7c l     O .data	0000012c lookupTable
20001ea8 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00000000 l    df *ABS*	00000000 Print.cpp
00000000 l    df *ABS*	00000000 Stream.cpp
00000000 l    df *ABS*	00000000 Time.cpp
20001f7c l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_serial.c
0000ea08 l     F .text.itcm	0000009c usb_serial_flush_callback
20201080 l     O .bss.dma	00002000 txbuffer
0000eaa4 l     F .text.itcm	0000006c rx_queue_transfer
20200080 l     O .bss.dma	00001000 rx_buffer
0000eb10 l     F .text.itcm	000000b4 rx_event
20005180 l     O .bss	00000004 rx_available
20005184 l     O .bss	00000010 rx_count
200053cf l     O .bss	00000001 rx_head
20005194 l     O .bss	00000010 rx_index
200051a4 l     O .bss	00000009 rx_list
200053b8 l     O .bss	00000002 rx_packet_size
200053d0 l     O .bss	00000001 rx_tail
20003f00 l     O .bss	00000100 rx_transfer
200053d4 l     O .bss	00000001 transmit_previous_timeout
200053ba l     O .bss	00000002 tx_available
200053d5 l     O .bss	00000001 tx_head
200053d6 l     O .bss	00000001 tx_noautoflush
200053bc l     O .bss	00000002 tx_packet_size
20004000 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
200053c6 l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-wf_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-pow.o
00000000 l    df *ABS*	00000000 libm_a-wf_asin.o
00000000 l    df *ABS*	00000000 libm_a-wf_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_fabs.o
00000000 l    df *ABS*	00000000 libm_a-ef_sqrt.o
00000000 l    df *ABS*	00000000 libm_a-s_sin.o
00000000 l    df *ABS*	00000000 libm_a-math_err.o
0000f9d8 l     F .text.itcm	00000018 with_errno
0000f9f0 l     F .text.itcm	00000022 xflow
00000000 l    df *ABS*	00000000 libm_a-sf_nan.o
00000000 l    df *ABS*	00000000 libm_a-k_cos.o
00000000 l    df *ABS*	00000000 libm_a-k_sin.o
00000000 l    df *ABS*	00000000 libm_a-ef_asin.o
00000000 l    df *ABS*	00000000 libm_a-ef_atan2.o
00000000 l    df *ABS*	00000000 libm_a-sf_atan.o
00000000 l    df *ABS*	00000000 libm_a-e_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-k_rem_pio2.o
00000000 l    df *ABS*	00000000 libm_a-s_fabs.o
00000000 l    df *ABS*	00000000 libm_a-s_floor.o
00000000 l    df *ABS*	00000000 libm_a-s_scalbn.o
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00012000 l     F .text.itcm	00000018 stdio_exit_handler
00012018 l     F .text.itcm	00000040 cleanup_stdio
00012058 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
00012b08 l     F .text.itcm	00000076 __sprint_r.part.0
00013b0c l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00013fbc l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-exp_data.o
00000000 l    df *ABS*	00000000 libm_a-pow_log_data.o
00000000 l    df *ABS*	00000000 MPU9250.cpp
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00015608 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00015610 l     F .text.itcm	00000008 ___init_veneer
00015618 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
60001f48 l     F .text.code	00000008 __delay_veneer
60001f50 l     F .text.code	00000008 ____libc_init_array_veneer
60001f58 l     F .text.code	00000008 __main_veneer
60001f60 l     F .text.code	00000008 __sm_set_pool_veneer
60001f68 l     F .text.code	00000008 __pwm_init_veneer
60001f70 l     F .text.code	00000008 ___ZN7TwoWire8setClockEm_veneer
60001f78 l     F .text.code	00000008 __set_arm_clock_veneer
60001f80 l     F .text.code	00000008 __usb_init_serialnumber_veneer
60001f88 l     F .text.code	00000008 __memset_veneer
00002924 g     F .text.itcm	00000010 radioSetup()
0000020c  w    F .text.itcm	0000006a SDFile::getModifyTime(DateTimeFields&)
0000bfd4 g     F .text.itcm	000000cc toUpcase(unsigned short)
0000edd8 g     F .text.itcm	00000018 usb_serial_available
0000cec4 g     F .text.itcm	00000026 String::String(float, unsigned char)
20003a18 g     O .data	00000004 minFreq
00001b74 g     F .text.itcm	00000060 loopBlink()
00014fa8 g     F .text.itcm	00000024 _isatty_r
00005048 g     F .text.itcm	00000056 PWMServo::write(int)
00011724 g     F .text.itcm	000000ba strcpy
0000ce9e g     F .text.itcm	00000026 String::String(int, unsigned char)
000040c4 g     F .text.itcm	00000058 SBUS::~SBUS()
00009860 g     F .text.itcm	00000038 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
200050ac g     O .bss	00000010 fileExtension
600018c4 g     F .text.code	00000002 startup_default_late_hook
00010ae8 g     F .text.itcm	00000012 fabs
00014fcc g     F .text.itcm	0000002c _lseek_r
0000b288 g     F .text.itcm	0000008c SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
0000f130  w    F .text.itcm	00000108 yield
0000a230  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
00000d88 g     F .text.itcm	000000e0 performSineSweep(int)
200039d8 g     O .data	00000004 maxYaw
20004128 g     O .bss	00000004 MagX_prev
20003984 g     O .data	00000004 channel_3_fs
00001188 g     F .text.itcm	00000244 scaleCommands()
200053a4 g     O .bss	00000004 usb_timer1_callback
20005020 g     O .bss	00000004 channel_2_pwm
0000862c g     F .text.itcm	000001b0 FatFile::write(void const*, unsigned int)
20005014 g     O .bss	00000004 channel_1_pwm
600020b4 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
600019bc g     F .text.code	00000294 configure_external_ram
0000a0b6  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
000085b8 g     F .text.itcm	00000074 FatFile::truncate()
2000506c g     O .bss	00000004 d_ch2
200048c4 g     O .bss	00000140 Wire1
0000a99c  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
000089c4 g     F .text.itcm	00000178 FatFile::makeSFN(FatLfn_t*)
00009cc8 g     F .text.itcm	00000142 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
60002098  w    O .text.progmem	00000001 _serialEventUSB2_default
20004c5c g     O .bss	00000004 FsDateTime::callback
20004e58 g     O .bss	00000001 __lock___atexit_recursive_mutex
00013ce4 g     F .text.itcm	0000004c _wcrtomb_r
60001684 g     F .text.code	00000048 TwoWire::configSDApin(unsigned char)
00008b3c g     F .text.itcm	000000ac FatFile::makeUniqueSfn(FatLfn_t*)
0000a75c g     F .text.itcm	00000034 SharedSpiCard::writeStart(unsigned long)
00009200 g     F .text.itcm	0000005a FatFormatter::initPbs()
0000c896 g     F .text.itcm	0000001c Print::println()
0000a934 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
00004894 g     F .text.itcm	000000b4 TwoWire::isr()
20002400 g     O .data	00000070 vtable for DedicatedSpiCard
00012a2c g     F .text.itcm	00000020 __sseek
0001212c g     F .text.itcm	0000003c __sinit
00003ec4 g     F .text.itcm	00000044 I2Cdev::writeBit(unsigned char, unsigned char, unsigned char, unsigned char)
00005b0e g     F .text.itcm	000000e4 ExFatFile::seekSet(unsigned long long)
00013c40 g     F .text.itcm	000000a4 fcvtbuf
0000dec8  w    F .text.itcm	00000002 serialEvent5()
20003348 g     O .data	00000004 MagScaleX
0001542c g     F .text.itcm	000000b0 __swbuf_r
000000a6  w    F .text.itcm	00000010 File::flush()
2000412c g     O .bss	00000004 MagY
00000276  w    F .text.itcm	0000006a SDFile::getCreateTime(DateTimeFields&)
000117ec g     F .text.itcm	0000000c __malloc_unlock
20004724 g     O .bss	00000060 Serial5
200051c0 g     O .bss	00000004 s3_command_PWM
00000478  w    F .text.itcm	000000ac SDFile::openNextFile(unsigned char)
20004c98 g     O .bss	00000004 FsVolume::m_cwv
00007f30 g     F .text.itcm	000000ca FatFile::open(FatFile*, char const*, int)
20005100 g     O .bss	00000004 m5_command_PWM
0000a0aa  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
20003a42 g     O .data	00000001 useSineWave
6000180c g     F .text.code	00000054 analog_init
00004020 g     F .text.itcm	00000024 MPU6050::initialize()
00003eac g     F .text.itcm	00000018 I2Cdev::writeByte(unsigned char, unsigned char, unsigned char)
00008050 g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
200002c0 g     O .data	00000870 .hidden __exp_data
0000a59c g     F .text.itcm	0000003a SharedSpiCard::readOCR(unsigned long*)
0000cbd4 g     F .text.itcm	0000000a Stream::parseFloat()
20005044 g     O .bss	00000004 channel_5_pwm
00003f08 g     F .text.itcm	00000050 I2Cdev::writeBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
2000409c g     O .bss	00000004 AccZ_prev
0000fa38 g     F .text.itcm	00000030 .hidden __math_divzero
20003320 g     O .data	00000004 F_CPU_ACTUAL
200024e8  w    O .data	0000005c vtable for SDFile
20003964 g     O .data	00000004 axisToRotate
000114cc g     F .text.itcm	000000f8 memmove
200050e8 g     O .bss	00000004 m2_command_PWM
0000c162 g     F .text.itcm	00000070 HardwareSerial::peek()
20005174 g     O .bss	00000004 roll_PID
0000b9ec g     F .text.itcm	00000060 SdioCard::stopTransmission(bool)
000117f8 g     F .text.itcm	0000004c _Balloc
20004104 g     O .bss	00000004 Kd_roll_angle
0001562c g       .ARM.exidx	00000000 __exidx_end
20004ff0 g     O .bss	00000004 blink_delay
00009ba0 g     F .text.itcm	0000004a FatPartition::freeChain(unsigned long)
200053c4 g     O .bss	00000001 EventResponder::runningFromYield
0000bc32 g     F .text.itcm	00000018 SdSpiArduinoDriver::receive()
200053c8 g     O .bss	00000001 blinkAlternate
00009f8c g     F .text.itcm	000000ec FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
20002d40 g     O .data	000000dc pwm_pin_info
0000e0b4 g     F .text.itcm	00000064 tempmonGetTemp
20005390 g     O .bss	00000004 thro_des
2000536c g     O .bss	00000004 servo5
0000f23c g     F .text.itcm	0000002c smalloc_verify_pool
0000c820 g     F .text.itcm	0000002c Print::write(unsigned char const*, unsigned int)
200033c8 g     O .data	00000004 __atexit_recursive_mutex
2000411c g     O .bss	00000004 MagErrorY
00010ee0 g     F .text.itcm	0000000c __errno
00000542  w    F .text.itcm	0000002a SDFile::isDirectory()
00006706 g     F .text.itcm	00000174 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
200053ca g     O .bss	00000001 conductSineSweep
20004090 g     O .bss	00000004 AccY
0000006e  w    F .text.itcm	00000012 File::write(unsigned char const*, unsigned int)
60001000 g     O .text.headers	00000020 ImageVectorTable
0000cec4 g     F .text.itcm	00000026 String::String(float, unsigned char)
00004bec  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
000007e4  w    F .text.itcm	00000030 File::~File()
20004c70 g     O .bss	00000004 EventResponder::firstInterrupt
0000e968 g     F .text.itcm	00000004 usb_transfer_status
0000f2ac g     F .text.itcm	00000074 sm_set_pool
20005038 g     O .bss	00000004 channel_4_pwm
00006c26 g     F .text.itcm	0000001a ExFatFormatter::writeUpcaseUnicode(unsigned short)
20004fd0 g     O .bss	00000004 __stdio_exit_handler
00009e0a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
20003a41 g     O .data	00000001 analog_write_res
00007868 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0000ce56 g     F .text.itcm	00000016 String::String(String const&)
00000664  w    F .text.itcm	00000056 SDFile::setCreateTime(DateTimeFields const&)
0000e9f0  w    F .text.itcm	0000000c usb_serial_class::write(unsigned char const*, unsigned int)
00014f7c g     F .text.itcm	0000002c _fstat_r
200028e4 g     O .data	00000370 digital_pin_to_info_PGM
20003968 g     O .data	00000004 beta_max
20005098 g     O .bss	00000004 errno
20005170 g     O .bss	00000004 roll_IMU
0000bc4a g     F .text.itcm	00000020 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
00010b00 g     F .text.itcm	00000110 floor
00007584 g     F .text.itcm	00000048 ExFatPartition::fatGet(unsigned long, unsigned long*)
60001ff8 g     O .text.progmem	00000050 TwoWire::i2c3_hardware
00015628 g       .text.itcm	00000000 _etext
00004a5c g     F .text.itcm	000000c8 _spi_dma_rxISR0()
200051cc g     O .bss	00000004 s4_command_scaled
200051e4 g     O .bss	00000004 s7_command_scaled
00008ee8 g     F .text.itcm	000000dc FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20003ec0 g       .bss	00000000 _sbss
0000925a g     F .text.itcm	0000005a FatFormatter::writeMbr()
0000ba66 g     F .text.itcm	0000000a sdCsInit(unsigned char)
000056c8 g     F .text.itcm	000000a4 SDClass::mediaPresent()
0000ab94 g     F .text.itcm	0000000c SdioCard::errorData() const
00000cc8 g     F .text.itcm	000000c0 setDesStateSerial(int)
0000b314 g     F .text.itcm	000000b0 SdioCard::writeSector(unsigned long, unsigned char const*)
0000c13c g     F .text.itcm	00000026 HardwareSerial::available()
00007764 g     F .text.itcm	00000104 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00006cd8 g     F .text.itcm	0000057c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00002588 g     F .text.itcm	0000002c invSqrt(float)
0000d3c0 g     F .text.itcm	00000024 digitalRead
600021a4 g       *ABS*	00000000 _stextload
000034e0 g     F .text.itcm	0000081c loop
0000dd70 g     F .text.itcm	00000078 flexpwm_init
0000d9a0 g     F .text.itcm	000000c4 flexpwmWrite
20005110 g     O .bss	0000000f mpu6050
600018c6 g     F .text.code	00000004 startup_debug_reset
0000e864 g     F .text.itcm	00000044 usb_config_rx
0000f320 g     F .text.itcm	00000044 sqrtf
000058a4 g     F .text.itcm	000000a8 ExFatFile::parsePathName(char const*, ExName_t*, char const**)
000040c4 g     F .text.itcm	00000058 SBUS::~SBUS()
0000b800 g     F .text.itcm	000000d0 SdioCard::readData(unsigned char*)
00000ea0 g     F .text.itcm	00000038 pitchStep()
0000cafc g     F .text.itcm	00000026 Stream::peekNextDigit()
200040c4 g     O .bss	00000004 GyroX
00001bd4 g     F .text.itcm	0000003c setupBlink(int, int, int)
00003f74 g     F .text.itcm	00000018 MPU6050::setFullScaleAccelRange(unsigned char)
0000c376 g     F .text.itcm	00000008 HardwareSerial::write(unsigned char)
0000465c g     F .text.itcm	000000f8 TwoWire::endTransmission(unsigned char)
000101c0 g     F .text.itcm	00000294 __ieee754_rem_pio2
20005064 g     O .bss	00000004 current_time
20004c6c g     O .bss	00000004 EventResponder::lastInterrupt
00009e8c g     F .text.itcm	00000028 FsBaseFile::close()
00004f12 g     F .text.itcm	00000048 SPIClass::end()
0000d470 g     F .text.itcm	00000134 memcpy
20005058 g     O .bss	0000000c currState
00000080  w    F .text.itcm	00000012 File::available()
0000a82a g     F .text.itcm	00000032 SharedSpiCard::writeStop()
0000be8e g     F .text.itcm	0000009e FsUtf::cpToMb(unsigned long, char*, char*)
20003ec0 g     O .data	00000000 .hidden __TMC_END__
200050bc g     O .bss	00000010 fileName
0000fa68 g     F .text.itcm	0000001e .hidden __math_invalid
00007682 g     F .text.itcm	00000078 ExFatPartition::freeChain(unsigned long)
00007b74 g     F .text.itcm	00000028 FatFile::peek()
200053c7  w    O .bss	00000001 SDFile::name()::zeroterm
20005388 g     O .bss	00000004 systick_millis_count
0000664a g     F .text.itcm	000000bc ExFatFile::rename(ExFatFile*, char const*)
00000432  w    F .text.itcm	00000046 SDFile::truncate(unsigned long long)
00004620 g     F .text.itcm	0000003c TwoWire::wait_idle()
0000407c g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
200053d8 g     O .bss	00000001 usb_configuration
0000a0a0  w    F .text.itcm	00000006 SdCardInterface::status()
0000f268 g     F .text.itcm	00000044 sm_align_pool
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
0000ba4c g     F .text.itcm	0000001a SdioCard::syncDevice()
0000af48 g     F .text.itcm	00000094 SdioCard::writeData(unsigned char const*)
00003260  w    F .text.itcm	0000009a Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::product_evaluator(Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0> const&)
20003344 g     O .data	00000004 Kp_yaw
20004ff4 g     O .bss	00000004 ch1_CutCounter
20005160 g     O .bss	00000004 q2
0000014a  w    F .text.itcm	0000006c StreamFile<FsBaseFile, unsigned long long>::available()
00007b9c g     F .text.itcm	00000044 FatFile::readDirCache(bool)
00003f58 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
0000dc28 g     F .text.itcm	000000b0 analogWrite
0000a0ba g     F .text.itcm	00000084 SharedSpiCard::sectorCount()
600020b4  w    O .text.progmem	00000018 usb_string_manufacturer_name
00010eec g     F .text.itcm	00000010 malloc
60001fa8 g     O .text.progmem	00000050 TwoWire::i2c1_hardware
0000564a g     F .text.itcm	0000007c SDClass::format(int, char, Print&)
200024c4  w    O .data	00000024 vtable for FsFile
0000e08e  w    F .text.itcm	0000000a _fstat
000043ca  w    F .text.itcm	0000001e TwoWire::read()
000115c4 g     F .text.itcm	00000040 __assert_func
20000b58 g     O .data	000000c8 __mprec_tens
60001df8 g     F .text.code	000000ec usb_init
200051d8 g     O .bss	00000004 s6_command_PWM
0000ce9e g     F .text.itcm	00000026 String::String(int, unsigned char)
0000fad8 g     F .text.itcm	00000130 __kernel_cos
200039a0 g     O .data	00000004 cutoff_val
20005144 g     O .bss	00000004 pitch_IMU
0000a0a6  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00000726  w    F .text.itcm	000000be SDFile::seek(unsigned long long, int)
20004e94 g     O .bss	00000004 __malloc_top_pad
20004684 g     O .bss	00000050 SPI1
000024f0 g     F .text.itcm	0000004c getDScale()
2000538c g     O .bss	00000004 systick_safe_read
0000ce18 g     F .text.itcm	0000002a String::move(String&)
20004094 g     O .bss	00000004 AccY_prev
000044d4 g     F .text.itcm	0000014c TwoWire::force_clock()
aaaaaabf g       *ABS*	00000000 _flexram_bank_config
0000687a g     F .text.itcm	000000e4 ExFatFile::truncate()
200033d0 g     O .data	00000000 .hidden __dso_handle
00010eb4 g     F .text.itcm	0000002c itoa
0000cd6e g     F .text.itcm	0000001c String::changeBuffer(unsigned int)
00013d30 g     F .text.itcm	00000008 _localeconv_r
0000407c g     F .text.itcm	00000048 SBUS::SBUS(HardwareSerial&)
0000bbc8 g     F .text.itcm	00000060 SdSpiArduinoDriver::deactivate()
00015138 g     F .text.itcm	000002f4 __sfvwrite_r
0001199c g     F .text.itcm	0000005c __i2b
20000000 g       .data	00000000 _sdata
000093d0 g     F .text.itcm	000001e8 FatFormatter::makeFat32()
60002134 g     O .text.progmem	00000062 usb_config_descriptor_480
200053d2 g     O .bss	00000001 sbusLostFrame
0000cd8a g     F .text.itcm	00000028 String::reserve(unsigned int)
0000bc28 g     F .text.itcm	0000000a SdSpiArduinoDriver::end()
00007880 g     F .text.itcm	0000003a FatFile::addCluster()
00012a70 g     F .text.itcm	00000024 _sbrk_r
0000ac5c g     F .text.itcm	0000001c SdioCard::type() const
600018c0 g     F .text.code	00000002 startup_default_early_hook
60001654 g     F .text.code	00000030 ResetHandler
0000ee54 g     F .text.itcm	00000020 usb_serial_getchar
20003a3e g     O .data	00000002 I2Cdev::readTimeout
000003c4  w    F .text.itcm	00000048 SDFile::name()
20005394 g     O .bss	00000008 usb_cdc_line_coding
20003960 g     O .data	00000004 alpha_max
0000d374 g     F .text.itcm	0000004c digitalWrite
0000f940 g     F .text.itcm	0000000e fabsf
20004c74 g     O .bss	00000004 EventResponder::lastYield
0000587c g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00014ff8 g     F .text.itcm	0000002c _read_r
00006ba0  w    F .text.itcm	00000020 Print::write(char const*)
00001ca0 g     F .text.itcm	00000030 closeIris()
0000033a  w    F .text.itcm	0000003e StreamFile<FsBaseFile, unsigned long long>::read()
0000a224  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00006bc0 g     F .text.itcm	0000002c ExFatFormatter::syncUpcase()
000001b6  w    F .text.itcm	00000056 SDFile::setModifyTime(DateTimeFields const&)
00013d38 g     F .text.itcm	000000c6 _fclose_r
2000509c g     O .bss	00000010 extmem_smalloc_pool
20004e8c g     O .bss	00000004 __malloc_max_sbrked_mem
0000a69c g     F .text.itcm	00000056 DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
20003988 g     O .data	00000004 channel_4_fs
00000104  w    F .text.itcm	0000001a SDFile::position()
0000d3e4 g     F .text.itcm	0000007c pinMode
20005030 g     O .bss	00000004 channel_3_pwm_pre
0000cf88 g     F .text.itcm	00000032 String::getBytes(unsigned char*, unsigned int, unsigned int) const
000013d0 g     F .text.itcm	000004c0 getCommands()
0000c958 g     F .text.itcm	00000174 Print::printFloat(double, unsigned char)
0000fc08 g     F .text.itcm	000000b0 __kernel_sin
20005068 g     O .bss	00000004 d_ch1
60002099  w    O .text.progmem	00000001 _serialEventUSB1_default
20005158 g     O .bss	00000004 print_counter
600016cc g     F .text.code	00000058 TwoWire::setSDA(unsigned char)
20004a04 g     O .bss	00000140 Wire2
6001b800 g     O .text.csf	00000c00 hab_csf
00000092  w    F .text.itcm	00000014 File::peek()
00009bec g     F .text.itcm	000000dc FatPartition::freeClusterCount()
20280000 g       .text.csf	00000000 _heap_end
0000532c  w    F .text.itcm	000000ac SDClass::open(char const*, unsigned char)
00015624 g       .ARM.exidx	00000000 __exidx_start
70000000 g       .bss.extram	00000000 _extram_end
20005104 g     O .bss	00000004 m5_command_scaled
0000e098  w    F .text.itcm	00000004 _isatty
20004c68 g     O .bss	00000004 EventResponder::firstYield
20005028 g     O .bss	00000004 channel_2_pwm_prev
200051b4 g     O .bss	00000004 s1_command_scaled
0000bf2c g     F .text.itcm	000000a8 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00000e68 g     F .text.itcm	00000038 rollStep()
00000392  w    F .text.itcm	00000032 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
0001231c g     F .text.itcm	000003d8 _realloc_r
0000056c  w    F .text.itcm	0000001e SDFile::read(void*, unsigned int)
000116c0 g     F .text.itcm	00000048 __libc_init_array
0000d618 g     F .text.itcm	00000388 dtostrf
000002e0  w    F .text.itcm	0000003c SDFile::rewindDirectory()
000043be  w    F .text.itcm	0000000c TwoWire::available()
000060b2 g     F .text.itcm	00000012 ExFatFile::open(ExFatVolume*, char const*, int)
0000aba0 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
000050e8 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
00006454 g     F .text.itcm	000000c0 ExFatFile::addDirCluster()
20005050 g     O .bss	00000004 channel_8_pwm
00003e2c g     F .text.itcm	00000034 I2Cdev::readBits(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
000150d0 g     F .text.itcm	00000066 _fputwc_r
00004bec  w    F .text.itcm	00000038 SPIClass::SPIClass(unsigned int, unsigned int)
20000b30 g     O .data	00000028 __mprec_bigtens
0000a618  w    F .text.itcm	0000000c SharedSpiCard::readCID(CID*)
0000e0a6  w    F .text.itcm	00000004 abort
00004754 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
0000e9c0  w    F .text.itcm	00000008 usb_serial_class::clear()
0000e054  w    F .text.itcm	00000030 _sbrk
600177d0 g       *ABS*	00000000 _sdataload
00011d04 g     F .text.itcm	00000042 __mcmp
20002568 g     O .data	00000030 vtable for SDClass
200033cc g     O .data	00000004 __brkval
200053d7 g     O .bss	00000001 usb_cdc_line_rtsdtr
20003340 g     O .data	00000004 Kp_scale
60001f38 g     F .text.code	00000000 _init
0000ebc4 g     F .text.itcm	00000002 usb_serial_reset
00007940 g     F .text.itcm	00000022 FatFile::cacheDirEntry(unsigned char)
200050ec g     O .bss	00000004 m2_command_scaled
20002268 g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
0000cd60 g     F .text.itcm	0000000e String::~String()
0000520c  w    F .text.itcm	0000005e SDClass::remove(char const*)
0000040c  w    F .text.itcm	00000026 SDFile::close()
0000ce56 g     F .text.itcm	00000016 String::String(String const&)
000005a4  w    F .text.itcm	00000040 SDFile::~SDFile()
200051dc g     O .bss	00000004 s6_command_scaled
0000cf5c g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
600020d0 g     O .text.progmem	00000062 usb_config_descriptor_12
200053ce g     O .bss	00000001 irisFlag
00010458 g     F .text.itcm	00000690 __kernel_rem_pio2
20002598 g     O .data	00000024 vtable for TwoWire
20003334 g     O .data	00000004 Kd_yaw
0000dcd8 g     F .text.itcm	00000098 analogWriteFrequency
0000bba0 g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
20005400 g       .bss	00000000 _ebss
20005078 g     O .bss	0000000c desState
0000b3c4 g     F .text.itcm	0000008c SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
2000332c g     O .data	00000004 GyroErrorZ
20004114 g     O .bss	00000004 Kp_roll_angle
60001724 g     F .text.code	00000048 TwoWire::configSCLpin(unsigned char)
00000378  w    F .text.itcm	0000001a StreamFile<FsBaseFile, unsigned long long>::flush()
0000c11c g     F .text.itcm	00000020 HardwareSerial::availableForWrite()
0000ceea g     F .text.itcm	00000072 String::append(char const*, unsigned int)
000118fc g     F .text.itcm	00000040 __hi0bits
000057e8 g     F .text.itcm	00000038 ExFatFile::dirCache(unsigned char, unsigned char)
200040d8 g     O .bss	00000004 GyroZ_prev
00004958 g     F .text.itcm	00000010 lpi2c3_isr()
000054e0 g     F .text.itcm	000000dc SDClass::begin(unsigned char)
00006514 g     F .text.itcm	0000004a ExFatFile::mkdir(ExFatFile*, ExName_t*)
20203080 g       .bss.dma	00000000 _heap_start
200031dc g     O .data	00000001 String::zerotermination
20004e5c g     O .bss	00000001 __lock___malloc_recursive_mutex
00003f8c g     F .text.itcm	0000006c MPU6050::getMotion6(short*, short*, short*, short*, short*, short*)
200051c8 g     O .bss	00000004 s4_command_PWM
000050e4  w    F .text.itcm	00000002 SDClass::~SDClass()
0000db94 g     F .text.itcm	00000094 quadtimerFrequency
60002048 g     O .text.progmem	00000050 TwoWire::i2c4_hardware
00004044 g     F .text.itcm	00000028 MPU6050::getDeviceID()
0000cdb2 g     F .text.itcm	00000040 String::copy(char const*, unsigned int)
20004e98 g     O .bss	00000138 __sf
0000a374 g     F .text.itcm	00000096 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00001c84 g     F .text.itcm	0000001c openIris()
000007e4  w    F .text.itcm	00000030 File::~File()
00003e60 g     F .text.itcm	0000004c I2Cdev::writeBytes(unsigned char, unsigned char, unsigned char, unsigned char*)
00000003 g       *ABS*	00000000 _itcm_block_count
0000c2ac g     F .text.itcm	000000ca HardwareSerial::write9bit(unsigned long)
20003338 g     O .data	00000004 Ki_scale
20003308 g     O .data	00000004 AccErrorZ
20003ee0 g     O .bss	00000020 endpoint0_transfer_data
2000517c g     O .bss	00000004 roll_passthru
0000968c g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000bd1a g     F .text.itcm	00000050 FsCache::prepare(unsigned long, unsigned char)
0000d5ac g     F .text.itcm	00000008 operator delete(void*, unsigned int)
0000de20 g     F .text.itcm	00000068 pwm_init
00004468  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000c256 g     F .text.itcm	00000018 HardwareSerial::flush()
200050dc g     O .bss	00000004 iris
0000cd60 g     F .text.itcm	0000000e String::~String()
6001c400 g       .text.csf	00000000 __text_csf_end
0000fa28 g     F .text.itcm	00000010 .hidden __math_oflow
60001c50 g     F .text.code	00000060 usb_pll_start
20005004 g     O .bss	00000004 channel_10_pwm
00011b54 g     F .text.itcm	000000c0 __pow5mult
00007c84 g     F .text.itcm	0000005a FatFile::rmdir()
00004968 g     F .text.itcm	00000010 lpi2c4_isr()
00009b12 g     F .text.itcm	0000008e FatPartition::allocateCluster(unsigned long, unsigned long*)
00004468  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
0000fcb8 g     F .text.itcm	0000020c __ieee754_asinf
0000a9e2  w    F .text.itcm	00000002 SdioCard::end()
20004124 g     O .bss	00000004 MagX
0000516c  w    F .text.itcm	00000046 SDClass::exists(char const*)
20003ec0 g     O .bss	00000020 endpoint0_transfer_ack
2000539c g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
0000e920 g     F .text.itcm	00000028 usb_transmit
0000c4d8 g     F .text.itcm	00000048 HardwareSerial::addToSerialEventsList()
2000537c g     O .bss	00000004 sineFrequency
0000c0fc g     F .text.itcm	00000020 systick_isr
20005040 g     O .bss	00000004 channel_4_pwm_prev
2000410c g     O .bss	00000004 Ki_roll_angle
20005364 g     O .bss	00000004 servo3
00011714 g     F .text.itcm	00000002 __retarget_lock_release_recursive
200050f4 g     O .bss	00000004 m3_command_scaled
20003354 g     O .data	00000010 Serial
20005018 g     O .bss	00000004 channel_1_pwm_pre
0000ce42 g     F .text.itcm	00000014 String::operator=(String const&)
000025b8 g     F .text.itcm	0000036c Madgwick6DOF(float, float, float, float, float, float, float)
20000c20 g     O .data	00001048 .hidden __pow_log_data
0000db4c g     F .text.itcm	00000048 quadtimerWrite
200023dc g     O .data	00000024 vtable for HardwareSerial
0000e9fc  w    F .text.itcm	0000000a usb_serial_class::write(unsigned char)
00009f28 g     F .text.itcm	00000060 FsBaseFile::openNext(FsBaseFile*, int)
600018c0  w    F .text.code	00000002 startup_early_hook
0000faa0 g     F .text.itcm	00000028 .hidden __math_check_oflow
00006130 g     F .text.itcm	000000a0 ExFatFile::addCluster()
20004c60 g     O .bss	00000004 FsDateTime::callback2
20002498  w    O .data	0000002c vtable for File
0000a2cc g     F .text.itcm	0000006c SharedSpiCard::readData(unsigned char*, unsigned int)
000053d8  w    F .text.itcm	00000108 SDClass::usedSize()
0000ed90 g     F .text.itcm	00000048 usb_serial_peekchar
20003998 g     O .data	00000004 channel_8_fs
200051d4 g     O .bss	00000004 s5_command_scaled
00012168 g     F .text.itcm	0000000c __sfp_lock_acquire
00012180 g     F .text.itcm	00000000 memchr
000099ec g     F .text.itcm	00000126 FatPartition::fatPut(unsigned long, unsigned long)
0000d058 g     F .text.itcm	0000029c set_arm_clock
20005384 g     O .bss	00000004 systick_cycle_count
20003a28 g     O .data	00000016 usb_string_serial_number_default
00012794 g     F .text.itcm	0000020c _free_r
0000a790 g     F .text.itcm	0000009a SharedSpiCard::erase(unsigned long, unsigned long)
0000a85c g     F .text.itcm	0000004c SharedSpiCard::writeData(unsigned char, unsigned char const*)
00001890 g     F .text.itcm	000000d8 failSafe()
0000a0ae  w    F .text.itcm	00000004 SharedSpiCard::type() const
00011718 g     F .text.itcm	0000000c __locale_mb_cur_max
00013fa4 g     F .text.itcm	00000016 _wcsrtombs_r
00004fa4 g     F .text.itcm	00000008 PWMServo::PWMServo()
20004cc8 g     O .bss	00000190 __atexit0
0000e9e0  w    F .text.itcm	00000008 usb_serial_class::flush()
20005150 g     O .bss	00000004 pitch_passthru
00006c40 g     F .text.itcm	00000098 ExFatFormatter::writeUpcase(unsigned long)
20004098 g     O .bss	00000004 AccZ
0000c79c g     F .text.itcm	00000010 IRQHandler_Serial5
20003948 g     O .data	00000004 __malloc_sbrk_base
0000e9d0  w    F .text.itcm	00000008 usb_serial_class::read()
00008fc4 g     F .text.itcm	0000015c FatFile::remove()
0000f958 g     F .text.itcm	00000080 sin
20004ff8 g     O .bss	00000004 ch2_CutCounter
0000e09c  w    F .text.itcm	00000006 _lseek
0000e0a2  w    F .text.itcm	00000004 __cxa_pure_virtual
00011c14 g     F .text.itcm	000000f0 __lshift
000081e8 g     F .text.itcm	000000d2 FatFile::mkdir(FatFile*, char const*, bool)
0000e8f0 g     F .text.itcm	00000030 usb_prepare_transfer
0000a0b2  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
20005178 g     O .bss	00000004 roll_des
0000decc g     F .text.itcm	00000188 unused_interrupt_vector
200053a0 g     O .bss	00000004 usb_timer0_callback
60001cb0 g     F .text.code	00000148 tempmon_init
0000889c g     F .text.itcm	00000128 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
200050e0 g     O .bss	00000004 m1_command_PWM
0000f238  w    F .text.itcm	00000002 serialEvent()
2000397c g     O .data	00000004 channel_1_fs
00013b8c g     F .text.itcm	00000088 __register_exitproc
0000a1b8 g     F .text.itcm	0000006c DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
0000ce6c g     F .text.itcm	00000010 String::operator=(String&&)
00005fcc g     F .text.itcm	000000e6 ExFatFile::open(ExFatFile*, char const*, int)
00010dc4 g     F .text.itcm	0000008a strncmp
000087dc g     F .text.itcm	000000c0 FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
0000655e g     F .text.itcm	000000ec ExFatFile::mkdir(ExFatFile*, char const*, bool)
000092b4 g     F .text.itcm	0000011c FatFormatter::makeFat16()
0000cf6c g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
0000edf0 g     F .text.itcm	00000064 usb_serial_flush_input
20005164 g     O .bss	00000004 q3
000076fa g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
20005154 g     O .bss	00000004 prev_time
000119f8 g     F .text.itcm	0000015c __multiply
0000f368 g     F .text.itcm	0000057c pow
0000f02c g     F .text.itcm	00000018 usb_serial_putchar
00000025 g       *ABS*	00000000 _teensy_model_identifier
0000a40c g     F .text.itcm	00000190 SharedSpiCard::begin(SdSpiConfig)
00010e50 g     F .text.itcm	00000064 strncpy
20004e64 g     O .bss	00000028 __malloc_current_mallinfo
20002348 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
00011e9c g     F .text.itcm	000000d4 __d2b
0000a8a8 g     F .text.itcm	0000002e SharedSpiCard::writeData(unsigned char const*)
20004c78 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
0000a9da  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
60001ee4 g     F .text.code	00000054 _reboot_Teensyduino_
20004134 g     O .bss	00000004 MagZ
0000b1c8  w    F .text.itcm	0000000e SdioCard::~SdioCard()
0000253c g     F .text.itcm	0000004c getIScale()
600018c2 g     F .text.code	00000002 startup_default_middle_hook
2000515c g     O .bss	00000004 q1
00011fe8 g     F .text.itcm	00000018 realloc
0000a15c g     F .text.itcm	0000005c DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
0000a5d6 g     F .text.itcm	00000036 SharedSpiCard::readRegister(unsigned char, void*)
2000504c g     O .bss	00000004 channel_7_pwm
0000b15c g     F .text.itcm	0000006c SdioCard::writeStart(unsigned long)
0000cb24 g     F .text.itcm	000000b0 Stream::parseFloat(char)
0000e3a4 g     F .text.itcm	000004c0 usb_isr
000116a8 g     F .text.itcm	0000000c __cxa_atexit
000041d8 g     F .text.itcm	00000164 SBUS::read(unsigned short*, bool*, bool*)
0000594c g     F .text.itcm	00000196 ExFatFile::read(void*, unsigned int)
00002e48  w    F .text.itcm	00000090 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
00004fac g     F .text.itcm	0000009c PWMServo::attach(int, int, int)
00014dd4 g     F .text.itcm	00000024 _close_r
0000a95a  w    F .text.itcm	00000042 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
0000a656 g     F .text.itcm	00000028 SharedSpiCard::readStop()
00000524  w    F .text.itcm	0000001e SDFile::peek()
0000bccc g     F .text.itcm	0000004e FsCache::sync()
20005380 g     O .bss	00000004 sineTime
00001c10 g     F .text.itcm	00000074 getJoyAngle()
200053ac g     O .bss	00000004 yaw_PID
20004634 g     O .bss	00000050 SPI
0001146c g     F .text.itcm	00000060 memcmp
20002470  w    O .data	00000028 vtable for usb_serial_class
0000bc6a g     F .text.itcm	00000014 SdSpiArduinoDriver::send(unsigned char)
20004108 g     O .bss	00000004 Ki_pitch_angle
0000cdf2 g     F .text.itcm	00000026 String::String(char const*)
0001170c g     F .text.itcm	00000002 __retarget_lock_close_recursive
20004100 g     O .bss	00000004 Kd_pitch_angle
0000ba70 g     F .text.itcm	00000008 sdCsWrite(unsigned char, bool)
2000535c g     O .bss	00000004 servo1
0000cacc g     F .text.itcm	00000030 Stream::timedPeek()
000032fc g     F .text.itcm	000001e4 pidOutput(Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, bool, float, float, float)
20005354 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
200046d4 g     O .bss	00000050 SPI2
200051b8 g     O .bss	00000004 s2_command_PWM
20003318 g     O .data	00000004 B_mag
00013e00 g     F .text.itcm	000000cc __swsetup_r
00006280 g     F .text.itcm	00000062 ExFatFile::rmdir()
200050e4 g     O .bss	00000004 m1_command_scaled
20003330 g     O .data	00000004 Kd_scale
0000a624 g     F .text.itcm	00000032 SharedSpiCard::readStart(unsigned long)
200051b0 g     O .bss	00000004 s1_command_PWM
00002e48  w    F .text.itcm	00000090 Eigen::PlainObjectBase<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::PlainObjectBase(std::initializer_list<std::initializer_list<float> > const&)
20003540 g     O .data	00000408 __malloc_av_
20004cc4 g     O .bss	00000004 __atexit
0000058a  w    F .text.itcm	0000001a SDFile::flush()
000129c8 g     F .text.itcm	00000022 __sread
200053db g     O .bss	00000001 useSerialAngleCommands
0000433c g     F .text.itcm	00000044 SBUS::scaleBias(unsigned char)
20003314 g     O .data	00000004 B_madgwick
0000f090 g     F .text.itcm	000000a0 usb_serial_flush_output
000117e0 g     F .text.itcm	0000000c __malloc_lock
000072a0 g     F .text.itcm	000000c4 ExFatFile::getName8(char*, unsigned int)
0000bd80 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
20003c00 g     O .data	000002c0 _VectorsRam
0000bc7e g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
0000a344 g     F .text.itcm	00000030 SharedSpiCard::waitReady(unsigned short)
00009150 g     F .text.itcm	000000b0 FatFormatter::initFatDir(unsigned char, unsigned long)
00014f28 g     F .text.itcm	00000054 _fflush_r
00001cd0 g     F .text.itcm	00000762 getDataString()
200039d4 g     O .data	00000004 maxRoll
00011f70 g     F .text.itcm	00000078 _calloc_r
2000399c g     O .data	00000004 channel_9_fs
00004c24 g     F .text.itcm	00000270 SPIClass::begin()
00010d28 g     F .text.itcm	0000009c __utoa
20003974 g     O .data	00000004 channel_12_fs
00008be8 g     F .text.itcm	00000300 FatFile::open(FatFile*, FatLfn_t*, int)
20003a43 g     O .data	00000001 yield_active_check_flags
000063f8 g     F .text.itcm	0000005c ExFatFile::sync()
00011710 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
200053d9 g     O .bss	00000001 usb_high_speed
000082ba g     F .text.itcm	00000202 FatFile::rename(FatFile*, char const*)
0000adc4 g     F .text.itcm	0000004c SdioCard::isBusy()
00011604 g     F .text.itcm	000000a4 memset
0000f950 g     F .text.itcm	00000006 __ieee754_sqrtf
0000d460 g     F .text.itcm	00000010 main
20004e90 g     O .bss	00000004 __malloc_max_total_mem
20003310 g     O .data	00000004 B_gyro
000073c8 g     F .text.itcm	000000b2 ExFatPartition::bitmapFind(unsigned long, unsigned long)
00011708 g     F .text.itcm	00000002 __retarget_lock_init_recursive
20200000 g     O .bss.dma	00000062 usb_descriptor_buffer
200040cc g     O .bss	00000004 GyroY
20005358 g     O .bss	00000004 serialInputValue
0000a8d6 g     F .text.itcm	00000048 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
2000398c g     O .data	00000004 channel_5_fs
00006960 g     F .text.itcm	00000240 ExFatFile::write(void const*, unsigned int)
20005034 g     O .bss	00000004 channel_3_pwm_prev
0000bde4 g     F .text.itcm	000000aa lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
0000800c g     F .text.itcm	00000044 FatFile::dirEntry(DirFat_t*)
000006ba  w    F .text.itcm	0000006c SDFile::available()
00012a4c g     F .text.itcm	00000008 __sclose
0000e96c g     F .text.itcm	00000054 usb_init_serialnumber
20005024 g     O .bss	00000004 channel_2_pwm_pre
60001fa8 g       .text.code	00000000 __init_array_end
000140e8 g     F .text.itcm	00000cec _dtoa_r
00010f0c g     F .text.itcm	00000560 _malloc_r
0000a13e g     F .text.itcm	0000000c DedicatedSpiCard::readSector(unsigned long, unsigned char*)
200053c5 g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
20003304 g     O .data	00000004 AccErrorY
200040a0 g     O .bss	00000024 D_gainScale
00012a54 g     F .text.itcm	0000001a __ascii_wctomb
00000138  w    F .text.itcm	00000012 SDFile::isOpen()
00009e0a g     F .text.itcm	00000082 FsBaseFile::FsBaseFile(FsBaseFile const&)
20004ca4 g     O .bss	00000004 FatVolume::m_cwv
2000262c  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
00003f58 g     F .text.itcm	00000004 MPU6050::MPU6050(unsigned char)
00004e94 g     F .text.itcm	0000007e SPIClass::transfer(void const*, void*, unsigned int)
20005108 g     O .bss	00000004 m6_command_PWM
0000d2f4 g     F .text.itcm	00000054 micros
2000501c g     O .bss	00000004 channel_1_pwm_prev
200039d0 g     O .data	00000004 maxPitch
000062e4 g     F .text.itcm	00000114 ExFatFile::syncDir()
00003f5c g     F .text.itcm	00000018 MPU6050::setFullScaleGyroRange(unsigned char)
200039a4 g     O .data	00000014 dataFile
20003300 g     O .data	00000004 AccErrorX
00004978 g     F .text.itcm	000000a0 TwoWire::setClock(unsigned long)
000126f4 g     F .text.itcm	000000a0 _malloc_trim_r
000154dc g     F .text.itcm	00000106 _wcsnrtombs_l
0000ee74 g     F .text.itcm	000001b8 usb_serial_write
600020cc g     O .text.progmem	00000004 string0
200040c8 g     O .bss	00000004 GyroX_prev
600018c4  w    F .text.code	00000002 startup_late_hook
0000da64 g     F .text.itcm	000000e8 flexpwmFrequency
0000e348 g     F .text.itcm	00000034 usb_start_sof_interrupts
0000fa88 g     F .text.itcm	00000012 .hidden __math_check_uflow
0000a91e g     F .text.itcm	00000016 DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
0000e9d8  w    F .text.itcm	00000008 usb_serial_class::available()
20005008 g     O .bss	00000004 channel_11_pwm
6000209a  w    O .text.progmem	00000001 _serialEvent_default
00007e7c g     F .text.itcm	000000a4 FatFile::sync()
000095b8 g     F .text.itcm	000000d4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
000052da  w    F .text.itcm	00000052 SDClass::mkdir(char const*)
20000000 g     O .data	00000280 endpoint_queue_head
20004088 g     O .bss	00000004 AccX
6000209c  w    O .text.progmem	00000016 usb_string_product_name
0000d348 g     F .text.itcm	0000002c delay
00005858 g     F .text.itcm	00000024 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
00015620 g     F .fini	00000000 _fini
0000ce7c g     F .text.itcm	00000022 String::operator=(char const*)
00001b08 g     F .text.itcm	0000006c loopRate(int)
00004402 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
0000a28e g     F .text.itcm	0000003e SharedSpiCard::isBusy()
60001020 g     O .text.headers	0000000c BootData
2000514c g     O .bss	00000004 pitch_des
20004118 g     O .bss	00000004 MagErrorX
000060c4 g     F .text.itcm	00000030 ExFatFile::openNext(ExFatFile*, int)
20005010 g     O .bss	00000004 channel_13_pwm
00007f20 g     F .text.itcm	00000010 FatFile::close()
0000e0aa g     F .text.itcm	00000008 Panic_Temp_isr
000005e4  w    F .text.itcm	00000048 SDFile::~SDFile()
200050f0 g     O .bss	00000004 m3_command_PWM
00008090 g     F .text.itcm	00000158 FatFile::mkdir(FatFile*, FatLfn_t*)
000155e4 g     F .text.itcm	00000024 _wcsnrtombs_r
0000ac78  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000031c  w    F .text.itcm	0000001e StreamFile<FsBaseFile, unsigned long long>::peek()
000000e2  w    F .text.itcm	00000022 File::write(unsigned char)
00012adc g     F .text.itcm	0000002c _write_r
0000de88 g     F .text.itcm	0000001c analogWriteRes
000024a4 g     F .text.itcm	0000004c getPScale()
20005370 g     O .bss	00000004 servo6
2000330c g     O .data	00000004 B_accel
20004160 g     O .bss	000004d4 SD
0000ae18 g     F .text.itcm	000000d0 SdioCard::erase(unsigned long, unsigned long)
2000413c g     O .bss	00000024 P_gainScale
0000cdf2 g     F .text.itcm	00000026 String::String(char const*)
200053b4 g     O .bss	00000004 yaw_passthru
0000fac8 g     F .text.itcm	0000000c nanf
2000395c g     O .data	00000004 _impure_ptr
00003260  w    F .text.itcm	0000009a Eigen::internal::product_evaluator<Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0>, 3, Eigen::DenseShape, Eigen::DenseShape, float, float>::product_evaluator(Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 1, 0, 3, 1>, 0> const&)
20002544  w    O .data	00000024 vtable for Stream
00005ae2 g     F .text.itcm	0000002c ExFatFile::peek()
20005048 g     O .bss	00000004 channel_6_pwm
00014df8 g     F .text.itcm	00000130 __sflush_r
00010c10 g     F .text.itcm	0000010c scalbn
200023b8  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
20003990 g     O .data	00000004 channel_6_fs
20004784 g     O .bss	00000140 Wire
00000990 g     F .text.itcm	00000334 getIMUdata()
0000062c  w    F .text.itcm	0000001c SDFile::write(void const*, unsigned int)
0000f93c g     F .text.itcm	00000004 atan2f
00003ff8 g     F .text.itcm	00000010 MPU6050::setSleepEnabled(bool)
0000a078 g     F .text.itcm	00000028 FsVolume::open(char const*, int)
00012a94 g     F .text.itcm	00000046 _fwalk_sglue
0000ab88 g     F .text.itcm	0000000c SdioCard::errorCode() const
2000510c g     O .bss	00000004 m6_command_scaled
00007ffa g     F .text.itcm	00000012 FatFile::open(FatVolume*, char const*, int)
00000648  w    F .text.itcm	0000001c StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
60001f90 g       .text.code	00000000 __preinit_array_end
200051f8 g     O .bss	0000013c sbus
20004fe0 g     O .bss	00000004 beta
20003a1c g     O .data	00000004 print_counterSD
0000754a g     F .text.itcm	0000003a ExFatPartition::dirCache(DirPos_t*, unsigned char)
0000a23e g     F .text.itcm	00000028 SharedSpiCard::spiStart()
00013c14 g     F .text.itcm	0000002a __ascii_mbtowc
20003328 g     O .data	00000004 GyroErrorY
2000502c g     O .bss	00000004 channel_3_pwm
0000e37c g     F .text.itcm	00000028 usb_stop_sof_interrupts
000043e8  w    F .text.itcm	00000018 TwoWire::peek()
20004fec g     O .bss	00000004 blink_counter
0000c37e g     F .text.itcm	00000158 HardwareSerial::IRQHandler()
00004400  w    F .text.itcm	00000002 TwoWire::flush()
00002934 g     F .text.itcm	00000514 setup
20003148 g     O .data	00000084 usb_descriptor_list
0000ae10 g     F .text.itcm	00000008 SdioCard::status()
200050fc g     O .bss	00000004 m4_command_scaled
20005368 g     O .bss	00000004 servo4
00008070 g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
0000006c  w    F .text.itcm	00000002 Print::flush()
20003994 g     O .data	00000004 channel_7_fs
2000396c g     O .data	00000004 channel_10_fs
000051b2  w    F .text.itcm	0000005a SDClass::rmdir(char const*)
000079ca g     F .text.itcm	000001aa FatFile::read(void*, unsigned int)
00004008 g     F .text.itcm	00000018 MPU6050::setClockSource(unsigned char)
00007962 g     F .text.itcm	0000003c FatFile::openRoot(FatVolume*)
20004c64 g     O .bss	00000004 ExFatVolume::m_cwv
00001968 g     F .text.itcm	0000013c commandMotors()
20068000 g       .text.csf	00000000 _estack
00009f88 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
000000b6  w    F .text.itcm	0000002c File::read()
0000f044 g     F .text.itcm	0000004c usb_serial_write_buffer_free
20003978 g     O .data	00000004 channel_13_fs
0000406c g     F .text.itcm	00000010 MPU6050::testConnection()
6000176c g     F .text.code	0000005c TwoWire::setSCL(unsigned char)
20003950 g     O .data	0000000c __sglue
00001aa4 g     F .text.itcm	00000016 armMotors()
0000ebc8 g     F .text.itcm	000000ec usb_serial_configure
0000442c g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
00000814  w    F .text.itcm	00000038 File::~File()
20003a20 g     O .data	00000004 q0
20004c9c g     O .bss	00000008 PWMServo::attachedpins
0000c8b4  w    F .text.itcm	00000018 _write
20003ec0 g       .data	00000000 _edata
00007642 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
0000084c g     F .text.itcm	000000cc controlMixer()
200050f8 g     O .bss	00000004 m4_command_PWM
200053cc g     O .bss	00000001 external_psram_size
0000ac78  w    F .text.itcm	00000002 SdioCard::~SdioCard()
0000bd98 g     F .text.itcm	0000004c FsName::get16()
200040dc g     O .bss	00000024 I_gainScale
200051c4 g     O .bss	00000004 s3_command_scaled
0000a224  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
0000a6f2 g     F .text.itcm	0000006a DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
200051d0 g     O .bss	00000004 s5_command_PWM
0000a14a g     F .text.itcm	00000012 DedicatedSpiCard::setDedicatedSpi(bool)
00007364 g     F .text.itcm	00000064 ExFatFile::hashName(ExName_t*)
000078bc g     F .text.itcm	00000084 FatFile::addDirCluster()
00015024 g     F .text.itcm	000000aa __fputwc
0000e9e8  w    F .text.itcm	00000008 usb_serial_class::availableForWrite()
200053cd g     O .bss	00000001 failureFlag
00004948 g     F .text.itcm	00000010 lpi2c1_isr()
00009898 g     F .text.itcm	00000036 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
2000500c g     O .bss	00000004 channel_12_pwm
0000c270 g     F .text.itcm	0000003c nvic_execution_priority()
20005084 g     O .bss	00000004 dt
0000d5b4 g     F .text.itcm	00000064 ultoa
20004138 g     O .bss	00000004 MagZ_prev
20005138 g     O .bss	0000000c pidOutputVals
000050e4  w    F .text.itcm	00000002 SDClass::~SDClass()
600017c8 g     F .text.code	00000044 TwoWire::begin()
00000ed8 g     F .text.itcm	000002b0 getDesState()
00009eb4 g     F .text.itcm	00000074 FsBaseFile::open(FsVolume*, char const*, int)
0000411c g     F .text.itcm	000000bc SBUS::parse()
20005074 g     O .bss	00000004 d_ch4
000129ec g     F .text.itcm	0000003e __swrite
0000d5a4 g     F .text.itcm	00000008 operator new(unsigned int)
0000c0a0 g     F .text.itcm	00000054 EventResponder::runFromInterrupt()
2000394c g     O .data	00000004 __malloc_trim_threshold
0000e9c8  w    F .text.itcm	00000008 usb_serial_class::peek()
200053b0 g     O .bss	00000004 yaw_des
20005378 g     O .bss	00000004 servoLoopCounter
200051bc g     O .bss	00000004 s2_command_scaled
000116b4 g     F .text.itcm	0000000a fcvtf
0000a9de  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000a266 g     F .text.itcm	00000028 SharedSpiCard::spiStop()
200050cc g     O .bss	00000010 filePrefix
20003324 g     O .data	00000004 GyroErrorX
000129a0 g     F .text.itcm	00000028 fiprintf
20004110 g     O .bss	00000004 Kp_pitch_angle
20004130 g     O .bss	00000004 MagY_prev
20005054 g     O .bss	00000004 channel_9_pwm
00012b80 g     F .text.itcm	00000f8c _vfiprintf_r
200053a8 g     O .bss	00000004 yaw_IMU
20004fe4 g     O .bss	00000004 betaCounts
00011d48 g     F .text.itcm	00000154 __mdiff
0000abe8 g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
0000fa18 g     F .text.itcm	00000010 .hidden __math_uflow
0000c1d2 g     F .text.itcm	00000084 HardwareSerial::read()
20004fe8 g     O .bss	00000004 beta_des
20004fdc g     O .bss	00000004 alpha_des
200022d8 g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
000075f4 g     F .text.itcm	0000004e ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00004b24 g     F .text.itcm	000000c8 _spi_dma_rxISR1()
00009750 g     F .text.itcm	00000108 FatFile::getName8(char*, unsigned int)
200031e0 g     O .data	00000120 _impure_data
00005bf4 g     F .text.itcm	000003d8 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
00012174 g     F .text.itcm	0000000c __sfp_lock_release
00010010 g     F .text.itcm	000001ac atanf
0000b154 g     F .text.itcm	00000008 SdioCard::writeStop()
00003e18 g     F .text.itcm	00000014 I2Cdev::readByte(unsigned char, unsigned char, unsigned char*, unsigned short)
200039cc g     O .data	00000004 maxFreq
200040d0 g     O .bss	00000004 GyroY_prev
0000a338 g     F .text.itcm	0000000c SharedSpiCard::readData(unsigned char*)
00005820 g     F .text.itcm	00000014 ExFatFile::close()
20002714 g     O .data	00000101 _ctype_
20004fd8 g     O .bss	00000004 alphaCounts
0000e084  w    F .text.itcm	00000004 _read
60001f90 g       .text.code	00000000 __init_array_start
20003a24 g     O .data	00000004 sweepTime
0000cfbc g     F .text.itcm	0000009c analogRead
2000331c g     O .data	00000004 F_BUS_ACTUAL
0000dde8 g     F .text.itcm	00000038 quadtimer_init
20005000 g     O .bss	00000004 ch4_CutCounter
00006bec g     F .text.itcm	0000003a ExFatFormatter::writeUpcaseByte(unsigned char)
0000526a  w    F .text.itcm	00000070 SDClass::rename(char const*, char const*)
20004ffc g     O .bss	00000004 ch3_CutCounter
20002d14 g     O .data	0000002a pin_to_channel
20003350 g     O .data	00000004 MagScaleZ
00004380 g     F .text.itcm	00000014 SBUS::setEndPoints(unsigned char, unsigned short, unsigned short)
00013ecc g     F .text.itcm	000000d8 __smakebuf_r
00000000 g       .text.itcm	00000000 _stext
0000a226  w    F .text.itcm	0000000a SharedSpiCard::end()
00012240 g     F .text.itcm	000000dc strlen
0000799e g     F .text.itcm	0000002c FatFile::openCluster(FatFile*)
20005360 g     O .bss	00000004 servo2
00007be0 g     F .text.itcm	000000a4 FatFile::seekSet(unsigned long)
6000209c g     O .text.progmem	00000016 usb_string_product_name_default
00001abc g     F .text.itcm	0000004c throttleCut()
2000408c g     O .bss	00000004 AccX_prev
0000abf8 g     F .text.itcm	00000064 SdioCard::sectorCount()
00004fa4 g     F .text.itcm	00000008 PWMServo::PWMServo()
00007db8 g     F .text.itcm	000000c4 FatFile::openNext(FatFile*, int)
200040d4 g     O .bss	00000004 GyroZ
600018c2  w    F .text.code	00000002 startup_middle_hook
0000c84c g     F .text.itcm	0000004a Print::print(String const&)
200025bc g     O .data	00000070 vtable for SdioCard
20005148 g     O .bss	00000004 pitch_PID
00009858 g     F .text.itcm	00000008 FatFile::getName(char*, unsigned int)
00000918 g     F .text.itcm	00000078 IMUinit()
600018ca g     F .text.code	000000f2 configure_cache
0000a9d6  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
20003970 g     O .data	00000004 channel_11_fs
0000f8e4 g     F .text.itcm	00000058 asinf
0000cbe0 g     F .text.itcm	00000180 breakTime(unsigned long, DateTimeFields&)
0000a60c  w    F .text.itcm	0000000c SharedSpiCard::readCSD(csd_t*)
000055bc  w    F .text.itcm	0000008e SdBase<FsVolume, FsFormatter>::restart()
0000b8d0 g     F .text.itcm	0000006c SdioCard::readStart(unsigned long)
0000ba78 g     F .text.itcm	00000128 SdSpiArduinoDriver::activate()
0000c520 g     F .text.itcm	0000027c HardwareSerial::begin(unsigned long, unsigned short)
60001f90 g       .text.code	00000000 __preinit_array_start
0000e948 g     F .text.itcm	00000020 usb_receive
0000747a g     F .text.itcm	000000d0 ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
20004fd4 g     O .bss	00000004 alpha
20004120 g     O .bss	00000004 MagErrorZ
0001193c g     F .text.itcm	00000060 __lo0bits
20005374 g     O .bss	00000004 servo7
000075cc g     F .text.itcm	00000028 ExFatPartition::chainSize(unsigned long)
00007cde g     F .text.itcm	000000da FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
0001c400 g       *ABS*	00000000 _flashimagelen
20005334 g     O .bss	00000020 sbusChannels
200053d1 g     O .bss	00000001 sbusFailSafe
000084bc g     F .text.itcm	000000fc FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
6000209b g     O .text.progmem	00000001 _serialEvent5_default
0000a67e g     F .text.itcm	0000001e SharedSpiCard::syncDevice()
00010d1c g     F .text.itcm	0000000a __aeabi_atexit
20005070 g     O .bss	00000004 d_ch3
0000dea4 g     F .text.itcm	00000024 rtc_get
000061d0 g     F .text.itcm	000000b0 ExFatFile::remove()
70000000 g       .bss.extram	00000000 _extram_start
0000c0f4 g     F .text.itcm	00000008 pendablesrvreq_isr
0000509e  w    F .text.itcm	00000046 SDClass::totalSize()
00004394 g     F .text.itcm	0000002a SBUS::begin()
00000068  w    F .text.itcm	00000004 Print::availableForWrite()
200033d4 g     O .data	0000016c __global_locale
2000333c g     O .data	00000004 Ki_yaw
0000b450 g     F .text.itcm	000003b0 SdioCard::begin(SdioConfig)
200053cb g     O .bss	00000001 doneWithSetup
00005834 g     F .text.itcm	00000024 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
0000ecb4 g     F .text.itcm	000000dc usb_serial_read
20004e60 g     O .bss	00000001 __lock___sfp_recursive_mutex
2000503c g     O .bss	00000004 channel_4_pwm_pre
200053be g     O .bss	00000001 SD_is_present
0000c8cc g     F .text.itcm	0000008a Print::printNumber(unsigned long, unsigned char, unsigned char)
0000e8a8 g     F .text.itcm	00000048 usb_config_tx
0000e088  w    F .text.itcm	00000006 _close
000098ce g     F .text.itcm	0000011e FatPartition::fatGet(unsigned long, unsigned long*)
00010efc g     F .text.itcm	00000010 free
200051e0 g     O .bss	00000004 s7_command_PWM
00003d0c g     F .text.itcm	0000010c I2Cdev::readBytes(unsigned char, unsigned char, unsigned char, unsigned char*, unsigned short)
00007254 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
00011858 g     F .text.itcm	000000a4 __multadd
2000334c g     O .data	00000004 MagScaleY
00011844 g     F .text.itcm	00000012 _Bfree
0000011e  w    F .text.itcm	0000001a SDFile::size()
0000fec4 g     F .text.itcm	0000014c __ieee754_atan2f
000096b6 g     F .text.itcm	00000098 FatFile::getSFN(char*, unsigned int)
000005a4  w    F .text.itcm	00000040 SDFile::~SDFile()
20003a28  w    O .data	00000016 usb_string_serial_number
20003980 g     O .data	00000004 channel_2_fs
0000b93c g     F .text.itcm	000000b0 SdioCard::readSector(unsigned long, unsigned char*)
0000abc4 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)
00002434 g     F .text.itcm	00000070 displayRoll()


